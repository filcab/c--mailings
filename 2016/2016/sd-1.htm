<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
    "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us">
<head>
    <meta http-equiv="content-type" content="text/html; charset=us-ascii" />
    <title>SD-1: 2016 PL22.16/WG21 Document List</title>
</head>
<body>
    <table border="1" summary="This table provides identifying information for this document.">
        <tr>
            <th>Doc. No.:</th>
            <td>WG21/SD-1</td>
        </tr>
        <tr>
            <th>Date:</th>
            <td>2016-11-28</td>
        </tr>
        <tr>
            <th>Reply to:</th>
            <td>John Spicer</td>
        </tr>
        <tr>
            <th>Email:</th>
            <td>jhs@edg.com</td>
        </tr>
        <tr>
            <th>Title:</th>
            <td>2016 PL22.16/WG21 document list</td>
        </tr>
    </table>
    <h1>2016 PL22.16/WG21 document list</h1>
    <p>Accredited Standards Committee*<br />
        INCITS, InterNational Committee for Information Technology Standards<br />
        *Operating under the procedures of the American National Standards Institute<br />
        INCITS Secretariat, Information Technology Industry Council (ITI)<br />
        110 K Street NW, Suite 610; Washington DC 20005<br />
        Telephone 202-737-8888; Fax 202-638-4922;<br />
        Email: <a href="mailto:incits@incits.org">INCITS@itic.org</a></p>
    <p>This table lists all C++ committee documents for 2015 and 2016. Each document is
		identified by its WG21 document number, title, author (or authors) and date. The
		month of the mailing in which the document was distributed is also given. For a
		revised document, the numbers of the previous revision are given. Technical papers
		are classified by working group. Finally, when a technical paper (other than an
		issue list) is revised or formally adopted, an indication is provided.</p>
    <table border="1" summary="See previous paragraph.">
        <tr>
            <th>WG21 Number</th>
            <th>Title</th>
            <th>Author</th>
            <th>Document Date</th>
            <th>Mailing Date</th>
            <th>Previous Version</th>
            <th>Subgroup</th>
            <th>Disposition</th>
        </tr>
        <tr>
            <td>SD-1</td>
            <td>2016 PL22.16/WG21 document list</td>
            <td>John Spicer</td>
            <td>2016-11-28</td>
            <td>2016-11</td>
            <td></td>
            <td></td>
            <td></td>
        </tr>

        <tr>
            <th colspan="8">2015-02 mid-meeting</th>
        </tr>
<!-- begin 2015-02 -->

	<tr >
		<td > N4340 </td>
		<td > Remove Deprecated Use of the register Keyword </td>
		<td > Alisdair Meredith </td>
		<td > 2014-11-26 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4341 </td>
		<td > C++ Standard Library Active Issues List (Revision R92) </td>
		<td > Alisdair Meredith </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4342 </td>
		<td > C++ Standard Library Defect Report List (Revision R92) </td>
		<td > Alisdair Meredith </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4343 </td>
		<td > C++ Standard Library Closed Issues List (Revision R92) </td>
		<td > Alisdair Meredith </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4344 </td>
		<td > Suggested Design for Customization Points </td>
		<td > Eric Niebler </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4345 </td>
		<td > Ranges for the Standard Library, Revision 2 </td>
		<td > Eric Niebler </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4346 </td>
		<td > Multidimensional bounds, index and array_view, revision 5 </td>
		<td > Lukasz Mendakiewicz </td>
		<td > 2015-01-05 </td>
		<td > 2015-02 </td>
		<td > N4177 </td>
		<td > Library </td>
		<td > Revised N4494 </td>
	</tr>
	<tr >
		<td > N4347 </td>
		<td > Responses to National Body Comments, PDTS 19568, Library Fundamentals </td>
		<td > Barry Hedquist </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4348 </td>
		<td > Making std::function thread-safe </td>
		<td > Geoffrey Romer </td>
		<td > 2015-02-02 </td>
		<td > 2015-02 </td>
		<td > N4159 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4349 </td>
		<td > Minutes of WG21 Telecon </td>
		<td > Jonathan Wakely </td>
		<td > 2014-12-05 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4350 </td>
		<td > Agenda and Meeting Notice for WG21 Concepts Meeting Notice (revision 1) </td>
		<td > Herb Sutter </td>
		<td > 2015-01-15 </td>
		<td > 2015-02 </td>
		<td > N4339 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4351 </td>
		<td > Responses to National Body Comments, PDTS 19570, C++ Extensions for Parallelism </td>
		<td > Barry Hedquist </td>
		<td > 2014-12-23 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4352 </td>
		<td > Parallelism TS </td>
		<td > Jared Hoberock </td>
		<td > 2015-01-08 </td>
		<td > 2015-02 </td>
		<td > N4310 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4353 </td>
		<td > Parallelism TS - Editor's Report </td>
		<td > Jared Hoberock </td>
		<td > 2015-01-08 </td>
		<td > 2015-02 </td>
		<td >   </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4354 </td>
		<td > Parallelism TS - DTS Ballot  Document </td>
		<td > Jared Hoberock </td>
		<td > 2015-01-08 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4355 </td>
		<td > Shared Multidimensional Arrays with Polymorphic Layout </td>
		<td > Carter Edwards </td>
		<td > 2015-02-04 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4356 </td>
		<td > Relaxed Array Type Declarator </td>
		<td > Carter Edwards </td>
		<td > 2015-02-04 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4357 </td>
		<td > Introduce the [[noexit]] attribute for main as a hint to eliminate destructor calls for objects with static storage duration </td>
		<td > Jens Maurer </td>
		<td > 2015-01-19 </td>
		<td > 2015-02 </td>
		<td > N4226 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4358 </td>
		<td > Unary Folds and Empty Parameter Packs </td>
		<td > Thibaut Le Jehan </td>
		<td > 2015-01-20 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0036R0 </td>
	</tr>
	<tr >
		<td > N4359 </td>
		<td > A Proposal to Add vector release method just like unique_ptr release method to the Standard Library </td>
		<td > Jerry Liang </td>
		<td > 2015-01-09 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4360 </td>
		<td > Delayed Evaluation Parameters </td>
		<td > Douglas Boffey </td>
		<td > 2015-01-22 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4361 </td>
		<td > Concepts Lite TS </td>
		<td > Andrew Sutton </td>
		<td > 2015-01-27 </td>
		<td > 2015-02 </td>
		<td > N4333 </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4362 </td>
		<td > WG21 2015-01 Skillman Minutes </td>
		<td > John Spicer </td>
		<td > 2015-01-27 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4363 </td>
		<td > Library Fundamentals v1 DTS </td>
		<td > Jeffrey Yasskin </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4364 </td>
		<td > Editor's Report for the Library Fundamentals v1 DTS </td>
		<td > Jeffrey Yasskin </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4365 </td>
		<td > Responses to National Body Comments, ISO/IEC PDTS 19568, C++ Extensions for Library Fundamentals </td>
		<td > Barry Hedquist </td>
		<td > 2015-01-29 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4366 </td>
		<td > LWG 2228: Missing SFINAE rule in unique_ptr templated assignment </td>
		<td > Howard Hinnant </td>
		<td > 2015-01-11 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4367 </td>
		<td > Comparison in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2015-02-08 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0100R0 </td>
	</tr>
	<tr >
		<td > N4368 </td>
		<td > Introducing alias size_type for type size_t in class std::bitset </td>
		<td > Vladimir Grigoriev </td>
		<td > 2015-02-03 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised N4443 </td>
	</tr>
	<tr >
		<td > N4369 </td>
		<td > Default argument for second parameter of std::advance </td>
		<td > Vladimir Grigoriev </td>
		<td > 2015-01-12 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised N4442 </td>
	</tr>
	<tr >
		<td > N4370 </td>
		<td > Networking Library Proposal (Revision 4) </td>
		<td > Christopher Kohlhoff  </td>
		<td > 2015-02-06 </td>
		<td > 2015-02 </td>
		<td > N4332 </td>
		<td > Library </td>
		<td > Revised N4478 </td>
	</tr>
	<tr >
		<td > N4371 </td>
		<td > Minimal incomplete type support for standard containers, revision 2 </td>
		<td > Zhihao Yuan </td>
		<td > 2015-02-04 </td>
		<td > 2015-02 </td>
		<td > N4056 </td>
		<td > Library </td>
		<td > Revised N4390 </td>
	</tr>
	<tr >
		<td > N4372 </td>
		<td > A Proposal to Add a Const-Propagating Wrapper to the Standard Library </td>
		<td > Jonathan Coe </td>
		<td > 2015-02-06 </td>
		<td > 2015-02 </td>
		<td > N4209 </td>
		<td > Library </td>
		<td > Revised N4388 </td>
	</tr>
	<tr >
		<td > N4373 </td>
		<td > Atomic View </td>
		<td > Carter Edwards, Hans Boehm </td>
		<td > 2015-01-26 </td>
		<td > 2015-02 </td>
		<td > N4142 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4374 </td>
		<td > Linux-Kernel Memory Mode </td>
		<td > Paul E. McKenney </td>
		<td > 2015-02-06 </td>
		<td > 2015-02 </td>
		<td > N4322 </td>
		<td > Concurrency </td>
		<td > Revised N4444 </td>
	</tr>
	<tr >
		<td > N4375 </td>
		<td > Out-of-Thin-Air Execution is Vacuous </td>
		<td > Paul E. McKenney </td>
		<td > 2015-02-06 </td>
		<td > 2015-02 </td>
		<td > N4323 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4376 </td>
		<td > Use Cases for Thread-Local Storage </td>
		<td > Paul E. McKenney </td>
		<td > 2015-02-06 </td>
		<td > 2015-02 </td>
		<td > N4324 </td>
		<td > Concurrency </td>
		<td > Revised P0097R0 </td>
	</tr>
	<tr >
		<td > N4377 </td>
		<td > C++ Extensions for Concepts PDTS </td>
		<td > Andrew Sutton </td>
		<td > 2015-02-09 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4378 </td>
		<td > Language Support for Contract Assertions </td>
		<td > John Lakos, Nathan Myers, Alexei Zakharov, Alexander Beels </td>
		<td > 2015-02-08 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4379 </td>
		<td > FAQ about N4378, Language Support for Contract Assertions </td>
		<td > John Lakos, Nathan Myers </td>
		<td > 2015-02-08 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4380 </td>
		<td > Constant View: A proposal for a std::as_const helper function template </td>
		<td > ADAM David Alan Martin, Alisdair Meredith </td>
		<td > 2015-02-05 </td>
		<td > 2015-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>



<!-- end 2015-02 -->

        <tr>
            <th colspan="8">2015-04 pre-Lenexa</th>
        </tr>
<!-- begin pre-Lenexa -->

	<tr >
		<td > N4381 </td>
		<td > Suggested Design for Customization Points </td>
		<td > Eric Niebler </td>
		<td > 2015-03-11 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4382 </td>
		<td > Working Draft, C++ extensions for Ranges </td>
		<td > Eric Niebler </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4383 </td>
		<td > C++ Standard Library Active Issues List (Revision R92) </td>
		<td > Marshall Clow </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4384 </td>
		<td > C++ Standard Library Defect Report List (Revision R92) </td>
		<td > Marshall Clow </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4385 </td>
		<td > C++ Standard Library Closed Issues List (Revision R92) </td>
		<td > Marshall Clow </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td > Revised P0214R0 </td>
	</tr>
	<tr >
		<td > N4386 </td>
		<td > Unspecialized std::tuple_size should be defined </td>
		<td > Nevin Liber </td>
		<td > 2015-02-24 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4387 </td>
		<td > Improving pair and tuple, revision 3 </td>
		<td > Daniel Kr&uuml;gler, Geoffrey Romer, Ville Voutilainen </td>
		<td > 2015-03-14 </td>
		<td > 2015-04 </td>
		<td > N4064 </td>
		<td > Library </td>
		<td > Adopted 2015-05  </td>
	</tr>
	<tr >
		<td > N4388 </td>
		<td > A Proposal to Add a Const-Propagating Wrapper to the Standard Library </td>
		<td > Jonathan Coe, Robert Mill </td>
		<td > 2015-02-25 </td>
		<td > 2015-04 </td>
		<td > N4372 </td>
		<td > Library </td>
		<td > Adopted 2015-05  </td>
	</tr>
	<tr >
		<td > N4389 </td>
		<td > Wording for bool_constant, revision 1 </td>
		<td > Zhihao Yuan </td>
		<td > 2015-02-23 </td>
		<td > 2015-04 </td>
		<td > N4334 </td>
		<td > Library </td>
		<td > Adopted 2015-05  </td>
	</tr>
	<tr >
		<td > N4390 </td>
		<td > Minimal incomplete type support for standard containers, revision 3 </td>
		<td > Zhihao Yuan </td>
		<td > 2015-02-24 </td>
		<td > 2015-04 </td>
		<td > N4371 </td>
		<td > Library </td>
		<td > Revised N4510 </td>
	</tr>
	<tr >
		<td > N4391 </td>
		<td > make_array, revision 4 </td>
		<td > Zhihao Yuan </td>
		<td > 2015-02-26 </td>
		<td > 2015-04 </td>
		<td > N4315 </td>
		<td > Library </td>
		<td > Adopted 2015-05  </td>
	</tr>
	<tr >
		<td > N4392 </td>
		<td > C++ Latches and Barriers </td>
		<td > Alasdair Mackintosh, Olivier Giroux </td>
		<td > 2015-03-03 </td>
		<td > 2015-04 </td>
		<td > N4204 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4393 </td>
		<td > Noop Constructors and Destructors </td>
		<td > Pablo Halpern </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4394 </td>
		<td > Agenda for Lenexa Meeting </td>
		<td > Clark Nelson </td>
		<td > 2015-03-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4395 </td>
		<td > SIMD Types: ABI Considerations </td>
		<td > Matthias Kretz </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency/Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4396 </td>
		<td > National Body Comments: PDTS 19841, Transactional Memory </td>
		<td > Barry Hedquist </td>
		<td > 2015-03-16 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4397 </td>
		<td > A low-level API for stackful coroutines </td>
		<td > Oliver Kowalke </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td > N3985 </td>
		<td > Concurrency </td>
		<td > Revised P0099R0  </td>
	</tr>
	<tr >
		<td > N4398 </td>
		<td > A unified syntax for stackless and stackful coroutines </td>
		<td > Oliver Kowalke </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4399 </td>
		<td > Proposed Working Draft, Technical Specification for C++ Extensions for Concurrency </td>
		<td > Artur Laksberg </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N4107 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4400 </td>
		<td > Concurrency TS Editor's Report, May 2015 </td>
		<td > Artur Laksberg </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4401 </td>
		<td > Defaulted comparison operator semantics should be uniform </td>
		<td > Michael Price </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4402 </td>
		<td > Resumable Functions (revision 4) </td>
		<td > Gor Nishanov </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4403 </td>
		<td > Draft Wording for Resumable Functions </td>
		<td > Gor Nishanov </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised N4499 </td>
	</tr>
	<tr >
		<td > N4404 </td>
		<td > Extension to aggregate initialization </td>
		<td > Oleg Smolsky </td>
		<td > 2015-03-31 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0017R0 </td>
	</tr>
	<tr >
		<td > N4405 </td>
		<td > Type of the accumulaters of standard algorithms std::accumulate
and std::inner_product </td>
		<td > Vladimir Grigoriev </td>
		<td > 2015-02-11 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4406 </td>
		<td > Integrating Executors with Parallel Algorithm Execution </td>
		<td > Jared Hoberock, Michael Garland, Oliver Giroux </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4407 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism </td>
		<td > Jared Hoberock </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > Revised N4505 </td>
	</tr>
	<tr >
		<td > N4408 </td>
		<td > Parallelism TS Editor's Report </td>
		<td > Jared Hoberock </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4409 </td>
		<td > Programming Languages -- Technical Specification for
C++ Extensions for Parallelism </td>
		<td > Jared Hoberock </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4410 </td>
		<td > Responses to PDTS comments on Transactional Memory </td>
		<td > Jens Maurer </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > Revised N4488 </td>
	</tr>
	<tr >
		<td > N4411 </td>
		<td > Task Block (formerly Task Region) R4 </td>
		<td > Pablo Halpern, Arch Robison, Hong Hong, Artur Laksberg, Gor Nishanov, Herb Sutter </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > Revised P0155R0 </td>
	</tr>
	<tr >
		<td > N4412 </td>
		<td > Shortcomings of iostreams </td>
		<td > Jens Maurer </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4413 </td>
		<td > Constexpr Lambas </td>
		<td > Faisal Vali </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4414 </td>
		<td > Executors and Schedulers Revision 5 </td>
		<td > Chris Mysen </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N4143 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4415 </td>
		<td > Simple Contracts for C++ </td>
		<td > Gabriel Dos Reis, J. Daniel Garcia, Francesco Logozzo, Manuel Fahndrich, Shuvendu Lahri </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4416 </td>
		<td > Don't Move: Vector Can Have Your Non-Moveable Types Covered </td>
		<td > Nevin Liber </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4417 </td>
		<td > Source-Code Information Capture </td>
		<td > Robert Douglas </td>
		<td > 2015-04-08 </td>
		<td > 2015-04 </td>
		<td > N4129 </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4418 </td>
		<td > Parameter Stringization </td>
		<td > Robert Douglas </td>
		<td > 2015-04-08 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4419 </td>
		<td > Potential extensions to Source-Code Information Capture </td>
		<td > Robert Douglas </td>
		<td > 2015-04-08 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4420 </td>
		<td > Defining Test Code </td>
		<td > Robert Douglas </td>
		<td > 2015-04-08 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4421 </td>
		<td > Evolution Active Issues List (Revision R11) </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4422 </td>
		<td > Evolution Completed Issues List (Revision R11) </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4423 </td>
		<td > Evolution Closed Issues List (Revision R11) </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4424 </td>
		<td > Inline Variables </td>
		<td > Hal Finkel, Richard Smith </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4425 </td>
		<td > Generalized Dynamic Assumptions </td>
		<td > Hal Finkel </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4426 </td>
		<td > Adding [nothrow-] swappable traits </td>
		<td > Daniel Kr&uuml;gler </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library </td>
		<td > Revised N4511 </td>
	</tr>
	<tr >
		<td > N4427 </td>
		<td > Agenda and Meeting Notice for WG21 Pre-Lenexa Telecon Meeting </td>
		<td > Herb Sutter </td>
		<td > 2015-04-08 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4428 </td>
		<td > Type Property Queries (rev 4) </td>
		<td > Andrew Tomazos, Christian Kaeser </td>
		<td > 2015-04-08 </td>
		<td > 2015-04 </td>
		<td > N4113 </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4429 </td>
		<td > Core issue 1941 - rewording inherited constructors </td>
		<td > Richard Smith </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0136R0  </td>
	</tr>
	<tr >
		<td > N4430 </td>
		<td > Core issue 1776 - replacement of class objects containing reference members </td>
		<td > Richard Smith </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N4303 </td>
		<td > Core </td>
		<td > Revised P0137R0  </td>
	</tr>
	<tr >
		<td > N4431 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N4296 </td>
		<td >  </td>
		<td > Revised N4527 </td>
	</tr>
	<tr >
		<td > N4432 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4433 </td>
		<td > Flexible static_assert messages </td>
		<td > Michael Price </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4434 </td>
		<td > Tweaks to Streamline Concepts Lite Syntax </td>
		<td > Walter Brown </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4435 </td>
		<td > Proposing Contract Attributes </td>
		<td > Walter Brown </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4436 </td>
		<td > Proposing Standard Library Support for the C++ Detection Idiom </td>
		<td > Walter Brown </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised N4502 </td>
	</tr>
	<tr >
		<td > N4437 </td>
		<td > Conditionally-supported Special Math Functions, v3 </td>
		<td > Walter Brown </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td > N3743 </td>
		<td > Library Evolution </td>
		<td > Revised P0226R0 </td>
	</tr>
	<tr >
		<td > N4438 </td>
		<td > Industrial Experience with Transactional Memory at Wyatt Technologies. </td>
		<td > Brett Hall </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4439 </td>
		<td > Light-Weight Execution Agents Revision 3 </td>
		<td > Torvald Riegel </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N4156 </td>
		<td > Concurrency </td>
		<td > Revised P0072R0  </td>
	</tr>
	<tr >
		<td > N4440 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2014-04-10 </td>
		<td > 2015-04 </td>
		<td > N4200 </td>
		<td > Feature Testing </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4441 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2015-03-23 and 2015-04-06 </td>
		<td > Michael Wong </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4442 </td>
		<td > Default argument for second parameter of std::advance (Rev. 1) </td>
		<td > Vladimir Grigoriev </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td > N4369 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4443 </td>
		<td > Introducing alias size_type for type size_t in class std::bitset (Rev. 1 ) </td>
		<td > Vladimir Grigoriev </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td > N4368 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4444 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N4374 </td>
		<td > Concurrency </td>
		<td > Revised P0124R0 </td>
	</tr>
	<tr >
		<td > N4445 </td>
		<td > Overly attached promise </td>
		<td > Agust&iacute;n Berg&eacute;, Hartmut Kaiser </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4446 </td>
		<td > The missing INVOKE related trait </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0077R0  </td>
	</tr>
	<tr >
		<td > N4447 </td>
		<td > From a type T, gather members name and type information, via variadic template expansion </td>
		<td > Cleiton Santoia Silva, Daniel Auresco </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N3987 </td>
		<td > Reflection </td>
		<td > Revised P0255R0 </td>
	</tr>
	<tr >
		<td > N4448 </td>
		<td > Rounding and Overflow in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0105R0  </td>
	</tr>
	<tr >
		<td > N4449 </td>
		<td > Message Digest Library for C++ </td>
		<td > Zhihao Yuan </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4450 </td>
		<td > Variant: a typesafe union (v2) </td>
		<td > Axel Naumann </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td > N4218 </td>
		<td > Library Evolution </td>
		<td > Revised N4516 </td>
	</tr>
	<tr >
		<td > N4451 </td>
		<td > Static reflection </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k </td>
		<td > 2014-04-11 </td>
		<td > 2015-04 </td>
		<td > N4111 </td>
		<td > Reflection </td>
		<td > Revised P0194R0 </td>
	</tr>
	<tr >
		<td > N4452 </td>
		<td > Use cases of reflection </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k </td>
		<td > 2014-04-11 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4453 </td>
		<td > Resumable Expressions </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0114R0  </td>
	</tr>
	<tr >
		<td > N4454 </td>
		<td > SIMD Types Example: Matrix Multiplication </td>
		<td > Matthias Kretz </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4455 </td>
		<td > No Sane Compiler Would Optimize Atomics </td>
		<td > JF Bastien </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4456 </td>
		<td > Towards improved support for games, graphics, real-time, low latency, embedded systems </td>
		<td > Michael Wong </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4457 </td>
		<td > C++ Standard Core Language Active Issues, Revision 93 </td>
		<td > William M. Miller </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4458 </td>
		<td > C++ Standard Core Language Defect Reports and Accepted Issues, Revision 93 </td>
		<td > William M. Miller </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4459 </td>
		<td > C++ Standard Core Language Closed Issues, Revision 93 </td>
		<td > William M. Miller </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4460 </td>
		<td > LWG 2424: Atomics, mutexes and condition variables should not be trivially copyable </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4461 </td>
		<td > Static if resurrected </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4462 </td>
		<td > LWG 2089, Towards more perfect forwarding </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4463 </td>
		<td > IO device requirements for C++ </td>
		<td > Cleiton Santoia Silva, Daniel Auresco </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > I/O </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4464 </td>
		<td > Pi-calculus syntax for C++ executors </td>
		<td > Cleiton Santoia Silva </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4465 </td>
		<td > A Module System for C++ (Revision 3) </td>
		<td > Gabriel Dos Reis, Mark Hall, Gor Nishanov </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4466 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4467 </td>
		<td > C++ Modules: Directions and Issues </td>
		<td > Gabriel Dos Reis </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4468 </td>
		<td > On Quantifying Memory-Allocation Strategies </td>
		<td > John Lakos, Jeffrey Mendelsohn, Alisdair Meredith, Nathan Myers </td>
		<td > 2015-04-11 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  Revised P0089R0 </td>
	</tr>
	<tr >
		<td > N4469 </td>
		<td > Template Argument Type Deduction </td>
		<td > James Touton, Mike Spertus </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td > N3601 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4470 </td>
		<td > Variadic lock_guard </td>
		<td > Mike Spertus </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > Revised N4498 </td>
	</tr>
	<tr >
		<td > N4471 </td>
		<td > Template parameter deduction for constructors (Rev 2) </td>
		<td > Mike Spertus </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td > N3602 </td>
		<td > Evolution </td>
		<td > Revised P0091R0  </td>
	</tr>
	<tr >
		<td > N4472 </td>
		<td > consexpr goto </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4473 </td>
		<td > noexcept(auto), again </td>
		<td > Ville Voutilainen </td>
		<td > 2015-04-10 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4474 </td>
		<td > Unified Call Syntax: x.f(y) and f(x,y)  </td>
		<td > Bjarne Stroustrup, Herb Sutter </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4475 </td>
		<td > Default comparisons (R2) </td>
		<td > Bjarne Stroustrup </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td > N4175 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4476 </td>
		<td > Thoughts about Comparisons (R2) </td>
		<td > Bjarne Stroustrup </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4477 </td>
		<td > Operator Dot (R2) </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2015-04-09 </td>
		<td > 2015-04 </td>
		<td > N4173 </td>
		<td > Evolution </td>
		<td > Revised P0416R0 </td>
	</tr>
	<tr >
		<td > N4478 </td>
		<td > Networking Library Proposal (Revision 5 </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td > N4370 </td>
		<td > Library Evoution </td>
		<td > Revised N4575 </td>
	</tr>
	<tr >
		<td > N4479 </td>
		<td > Merge Fundamentals V1 into v2 </td>
		<td > Jeffrey Yasskin </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Library Evoution </td>
		<td > Revised N4521 </td>
	</tr>
	<tr >
		<td > N4480 </td>
		<td > Programming Languages -- C++ Extensions for Library Fundamentals DTS </td>
		<td > Jeffrey Yasskin </td>
		<td > 2015-04-07 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4481 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Jeffrey Yasskin </td>
		<td > 2015-04-12 </td>
		<td > 2015-04 </td>
		<td > N4336 </td>
		<td > Library Evolution </td>
		<td > Revised N4529 </td>
	</tr>
	<tr >
		<td > N4482 </td>
		<td > Some notes on executors and the Networking Library Proposal </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-04-13 </td>
		<td > 2015-04 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>


<!-- end pre-Lenexa -->

        <tr>
            <th colspan="8">2015-05 post-Lenexa</th>
        </tr>
<!-- begin post-Lenexa -->

	<tr >
		<td > N4483 </td>
		<td > Read-copy-update </td>
		<td > Paul E. McKenney </td>
		<td > 2015-04-14 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4484 </td>
		<td > C++ Standard Library Active Issues List (Revision R93) </td>
		<td > Marshall Clow </td>
		<td > 2015-05-23 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4485 </td>
		<td > C++ Standard Library Defect Report List (Revision R93) </td>
		<td > Marshall Clow </td>
		<td > 2015-05-23 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4486 </td>
		<td > C++ Standard Library Closed Issues List (Revision R93) </td>
		<td > Marshall Clow </td>
		<td > 2015-05-23 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4487 </td>
		<td > Constexpr lambdas </td>
		<td > Faisal Vali, Ville Voutilainen </td>
		<td > 2015-04-28 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0170R0 </td>
	</tr>
	<tr >
		<td > N4488 </td>
		<td > Responses to PDTS comments on Transactional Memory, version 2 </td>
		<td > Jens Maurer </td>
		<td > 2015-05-07 </td>
		<td > 2015-05 </td>
		<td > N4410 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4489 </td>
		<td > WG21 2015-04-24 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2015-04-29 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4490 </td>
		<td > WG21 2015-05 Lenexa Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2015-05-29 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4491 </td>
		<td > PL22.16 2015-05 Lenexa Minutes (Draft) </td>
		<td > Jonathan Wakely </td>
		<td > 2015-05-30 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4492 </td>
		<td > Thoughts about C++17 </td>
		<td > Bjarne Stroustrup </td>
		<td > 2015-05-15 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4493 </td>
		<td > Thoughts on propagate_const </td>
		<td > Jonathan Coe </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4494 </td>
		<td > Multidimensional bounds, offset and array_view, revision 6 </td>
		<td > Lukasz Mendakiewicz, Herb Sutter </td>
		<td > 2015-05-01 </td>
		<td > 2015-05 </td>
		<td > N4346 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4495 </td>
		<td > Operator dot </td>
		<td > Mathias Gaunard, Dietmar K&uuml;hl </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4496 </td>
		<td > WG21 2014-11 Urbana Minutes (revision 1) </td>
		<td > Jonathan Wakely </td>
		<td > 2015-05-28 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4497 </td>
		<td > PL22.16 2014-11 Urbana Minutes (Final) </td>
		<td > Jonathan Wakely </td>
		<td > 2015-05-30 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4498 </td>
		<td > Variadic lock_guard (Rev. 2) </td>
		<td > Mike Spertus </td>
		<td > 2015-05-04 </td>
		<td > 2015-05 </td>
		<td > N4470 </td>
		<td > Concurrency </td>
		<td > Revised P0156R0</td>
	</tr>
	<tr >
		<td > N4499 </td>
		<td > Draft wording for Coroutines (Revision 2) </td>
		<td > Gor Nishanov, Daveed Vandevoorde </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td > N4403 </td>
		<td > Evolution </td>
		<td > Revised P0057R0 </td>
	</tr>
	<tr >
		<td > N4500 </td>
		<td > Withdrawn </td>
		<td >  </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4501 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Concurrency </td>
		<td > Artur Laksberg </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4502 </td>
		<td > Proposing Standard Library Support for the C++ Detection Idiom, V2 </td>
		<td > Walter E. Brown </td>
		<td > 2015-05-03 </td>
		<td > 2015-05 </td>
		<td > N4436 </td>
		<td > Library </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4503 </td>
		<td > Atomic View (V3) </td>
		<td > Carter Edwards </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4504 </td>
		<td > Atomic View - Floats </td>
		<td > Carter Edwards </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4505 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism </td>
		<td > Jared Hoberock </td>
		<td > 2015-05-05 </td>
		<td > 2015-05 </td>
		<td > N4407 </td>
		<td > Concurrency </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4506 </td>
		<td > Parallelism TS Editor's Report </td>
		<td > Jared Hoberock </td>
		<td > 2015-05-06 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4507 </td>
		<td > Technical Specification for C++ Extensions for Parallelism </td>
		<td > Jared Hoberock </td>
		<td > 2015-05-05 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4508 </td>
		<td > A proposal to add shared_mutex (untimed) (Revision 4) </td>
		<td > Gor Nishanov </td>
		<td > 2015-05-05 </td>
		<td > 2015-05 </td>
		<td > N4241 </td>
		<td > Concurrency </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4509 </td>
		<td > constexpr atomic&lt;T>::is_always_lock_free </td>
		<td > Olivier Giroux, JF Bastien, Jeff Snyder </td>
		<td > 2015-05-05 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > Revised P0152R0 </td>
	</tr>
	<tr >
		<td > N4510 </td>
		<td > Minimal incomplete type support for standard containers, revision 4 </td>
		<td > Zhihao Yuan </td>
		<td > 2015-05-05 </td>
		<td > 2015-05 </td>
		<td > N4390 </td>
		<td > Library </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4511 </td>
		<td > Adding [nothrow-]swappable traits, revision 1 </td>
		<td > Daniel Kr&uuml;gler </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td > N4426 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4512 </td>
		<td > Multidimensional bounds, offset and array_view, revision 7 </td>
		<td > _ukasz Mendakiewicz, Herb Sutter </td>
		<td > 2015-05-07 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4513 </td>
		<td > Working Draft Technical Specification for C++ Extensions for Transactional Memory </td>
		<td > Michael Wong </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td > N4301 </td>
		<td > Concurrency </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4514 </td>
		<td > Technical Specification for C++ Extensions for Transactional Memory </td>
		<td > Michael Wong </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4515 </td>
		<td > Editor's Report: Technical Specification for C++ Extensions for Transactional Memory </td>
		<td > Michael Wong </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td > N4338 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4516 </td>
		<td > Variant: a type-safe union (v3) </td>
		<td > Axel Naumann </td>
		<td > 2015-05-06 </td>
		<td > 2015-05 </td>
		<td > N4450 </td>
		<td > Library Evolution </td>
		<td > Revised N4542</td>
	</tr>
	<tr >
		<td > N4517 </td>
		<td > Record of Response: National Body Comments ISO/IEC PDTS 19841 </td>
		<td > Barry Hedquist </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4518 </td>
		<td > Make exception specifications be part of the type system, version 2 </td>
		<td > Jens Maurer </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td > N4320 </td>
		<td > Core </td>
		<td > Revised N4533</td>
	</tr>
	<tr >
		<td > N4519 </td>
		<td > Source-Code Information Capture </td>
		<td > Robert Douglas </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4520 </td>
		<td > Light-weight EAS rev. 5 </td>
		<td > Torvald Riegel </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4521 </td>
		<td > Merge Fundamentals V1 into V2 </td>
		<td > Jeffrey Yaskin </td>
		<td > 2015-04-12 </td>
		<td > 2015-05 </td>
		<td > N4479 </td>
		<td > Library Evolution </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4522 </td>
		<td > std::atomic_object_fence(mo, T&&...) </td>
		<td > Olivier Giroux, JF Bastien </td>
		<td > 2015-05-21 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > Revised P0153R0</td>
	</tr>
	<tr >
		<td > N4523 </td>
		<td > constexpr std::thread::hardware_{true,false}_sharing_size </td>
		<td > Olivier Giroux, JF Bastien </td>
		<td > 2015-05-21 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > Revised P0154R0</td>
	</tr>
	<tr >
		<td > N4524 </td>
		<td > Respect vector::reserve(request) Relative to Reallocation </td>
		<td > Nevin Liber </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4525 </td>
		<td > C++ Standard Library Issues Resolved Directly In Lenexa </td>
		<td > Marshall Clow </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2015-05 </td>
	</tr>
	<tr >
		<td > N4526 </td>
		<td > Towards improved support for games, graphics, real-time, low latency, embedded systems </td>
		<td > Michael Wong, Sean Middleditch, Nicolas Guillemot </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4527 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td > N4431 </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4528 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4529 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Jeffrey Yaskin </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td > N4481 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4530 </td>
		<td > Editor's Report for the Library Fundamentals TS </td>
		<td > Jeffrey Yaskin </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4531 </td>
		<td > std::rand replacement, revision 3 </td>
		<td > Zhihao Yuan </td>
		<td > 2015-05-08 </td>
		<td > 2015-05 </td>
		<td > N4316 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4532 </td>
		<td > Proposed wording for default comparisons </td>
		<td > Jens Maurer </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0221R0</td>
	</tr>
	<tr >
		<td > N4533 </td>
		<td > Make exception specifications be part of the type system, version 3 </td>
		<td > Jens Maurer </td>
		<td > 2015-05-20 </td>
		<td > 2015-05 </td>
		<td > N4518 </td>
		<td > Core </td>
		<td > Revised P0012R0 </td>
	</tr>
	<tr >
		<td > N4534 </td>
		<td > Data-Invariant Functions (revision 3) </td>
		<td > Jens Maurer </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td > N4314 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4535 </td>
		<td > Feature-testing preprocessor predicates for C++17 </td>
		<td > Clark Nelson, Richard Smith </td>
		<td > 2015-05-06 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4536 </td>
		<td > An algorithm to "clamp" a value between a pair of boundary values </td>
		<td > Martin Moene, Niels Dekker </td>
		<td > 2015-05-17 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0024R0 </td>
	</tr>
	<tr >
		<td > N4537 </td>
		<td > Adding Symmetry Between shared_ptr and weak_ptr </td>
		<td > Arthur O'Dwyer </td>
		<td > 2015-05-19 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4538 </td>
		<td > Technical Specification for C++ Extensions for
Concurrency </td>
		<td > Artur Laksberg </td>
		<td > 2015-05-20 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4539 </td>
		<td > Evolution Active Issues List (Revision R12) </td>
		<td > Ville Voutilainen </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4540 </td>
		<td > Evolution Completed Issues List (Revision R12) </td>
		<td > Ville Voutilainen </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4541 </td>
		<td > Evolution Closed Issues List (Revision R12) </td>
		<td > Ville Voutilainen </td>
		<td > 2015-05-22 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4542 </td>
		<td > Variant: a type-safe union (v4). </td>
		<td > Axel Naumann </td>
		<td > 2015-05-24 </td>
		<td > 2015-05 </td>
		<td > N4516 </td>
		<td > Library Evolution </td>
		<td > Revised P0087R0, P0088R0 </td>
	</tr>
	<tr >
		<td > N4543 </td>
		<td > A polymorphic wrapper for all Callable objects </td>
		<td > David Krauss </td>
		<td > 2015-05-26 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4544 </td>
		<td > October 2015 WG21 Meeting (Kona) </td>
		<td > Thomas Plum </td>
		<td > 2015-05-26 </td>
		<td > 2015-05 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>


<!-- end post-Lenexa -->

        <tr>
            <th colspan="8">2015-09 pre-Kona</th>
        </tr>
<!-- begin pre-Kond -->

	<tr >
		<td > N4545 </td>
		<td > PL22.16/WG21 draft agenda: 19-24 Oct 2015, Kona, HI/US </td>
		<td > Clark Nelson </td>
		<td > 2015-06-04 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4546 </td>
		<td > Agenda and Meeting Notice for WG21 Concepts Telecon </td>
		<td > Herb Sutter </td>
		<td > 2015-06-29 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4547 </td>
		<td > Business Plan and Convener's report </td>
		<td > Herb Sutter </td>
		<td > 2015-07-13 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4548 </td>
		<td > WG21 2015-07-20 Telecon Minutes </td>
		<td > Roger Orr </td>
		<td > 2015-07-20 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4549 </td>
		<td > Programming Languages -- C++ Extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2015-07-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td > Revised N4630 </td>
	</tr>
	<tr >
		<td > N4550 </td>
		<td > Record of Response: National Body Comments on ISO/IEC PDTS 19217, Technical Specification: C++ Extensions for Concepts </td>
		<td > Barry Hedquist </td>
		<td > 2015-07-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4551 </td>
		<td > National Body Comments, ISO/IEC PDTS 19571, C++ Extensions for Concurrency </td>
		<td > Barry Hedquist </td>
		<td > 2015-08-13 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4552 </td>
		<td > Pre-Kona WG21 Telecon </td>
		<td > Herb Sutter </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0001R0 </td>
		<td > Removing Deprecated Register Keyword </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Core </td>
		<td > Revised P0001R1 </td>
	</tr>
	<tr >
		<td > P0002R0 </td>
		<td > Removing Deprecated Operator++ for bool </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Core </td>
		<td > Revised P0002R1  </td>
	</tr>
	<tr >
		<td > P0003R0 </td>
		<td > Removing Deprecated Dynamic Exception Specifications </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0004R0 </td>
		<td > Removing Deprecated Aliases in iostreams </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0004R1  </td>
	</tr>
	<tr >
		<td > P0005R0 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td > Revised P0005R1  </td>
	</tr>
	<tr >
		<td > P0006R0 </td>
		<td > Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0007R0 </td>
		<td > Constant View: A proposal for a std::as_const helper function template </td>
		<td > Alisdair Meredith </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0007R1  </td>
	</tr>
	<tr >
		<td > P0008R0 </td>
		<td > C++ Executors </td>
		<td > Chris Mysen </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0009R0 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Christian Trott, Juan Alday, Jesse Perla, Mauro Bianco, Robin Maffeo, Ben Sander, Bryce Lelbach </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0011R0 </td>
		<td > Additions to Filesystem supporting Relative Paths </td>
		<td > Jamie Alsop, Nicolai Josuttis </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > File System </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0012R0 </td>
		<td > Make exception specifications be part of the type system, version 4 </td>
		<td > Jens Maurer </td>
		<td > 2015-09-08 </td>
		<td > 2015-09 </td>
		<td > N4533 </td>
		<td > Core </td>
		<td > Revised P0012R1  </td>
	</tr>
	<tr >
		<td > P0013R0 </td>
		<td > Logical Operator Type Traits </td>
		<td > Jonathan Wakely </td>
		<td > 2015-07-05 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0013R1  </td>
	</tr>
	<tr >
		<td > P0014R0 </td>
		<td > Proposal to add the multiline option to std::regex for its
ECMAScript engine </td>
		<td > Nozomu Kat&#x14d; </td>
		<td > 2015-07-11 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0014R1 </td>
	</tr>
	<tr >
		<td > P0015R0 </td>
		<td > A specialization-friendly std::common_type </td>
		<td > David Stone </td>
		<td > 2015-08-13 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0017R0 </td>
		<td > Extension to aggregate initialization </td>
		<td > Oleg Smolsky </td>
		<td > 2015-07-13 </td>
		<td > 2015-09 </td>
		<td > N4404 </td>
		<td > Evolution </td>
		<td > Revised P0017R1</td>
	</tr>
	<tr >
		<td > P0018R0 </td>
		<td > Lambda Capture of *this by Value </td>
		<td > H. Carter Edwards, Christian Trott, Hal Finkel, Jim Reus, Robin Maffeo, Ben Sander </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0018R1</td>
	</tr>
	<tr >
		<td > P0019R0 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0020R0 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0021R0 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0022R0 </td>
		<td > Proxy Iterators for the Ranges Extensions </td>
		<td > Eric Niebler </td>
		<td > 2015-06-30 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0022R1</td>
	</tr>
	<tr >
		<td > P0024R0 </td>
		<td > The Parallelism TS Should be Standardized </td>
		<td > Jared Hoberock </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0025R0 </td>
		<td > An algorithm to "clamp" a value between a pair of boundary values </td>
		<td > Martin Moene, Niels Dekker </td>
		<td > 2015-09-18 </td>
		<td > 2015-09 </td>
		<td > N4536 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0026R0 </td>
		<td > multi-range-based for loops </td>
		<td > Matthew McAtamney-Greenwood </td>
		<td > 2015-08-11 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0027R0 </td>
		<td > Named Types </td>
		<td > Troy Korjuslommi </td>
		<td >  </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0028R0 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Luis M. Sanchez, Massimo Torquati, Marco Danelutto,  Peter Sommerlad </td>
		<td > 2015-09-15 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0029R0 </td>

		<td > A Unified Proposal for Composable Hashing </td>
		<td > Geoff Romer, Chandler Carruth </td>
		<td > 2015-09-21 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0030R0 </td>
		<td > Proposal to Introduce a 3-Argument Overload to std::hypot </td>
		<td > Benson Ma </td>
		<td > 2015-09-08 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0030R1</td>
	</tr>
	<tr >
		<td > P0031R0 </td>
		<td > A Proposal to Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access </td>
		<td > Antony Polukhin  </td>
		<td > 2015-09-09 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0032R0 </td>
		<td > Homogeneous interface for variant<Ts...>, any and optional&lt;T> </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0032R1</td>
	</tr>
	<tr >
		<td > P0033R0 </td>
		<td > Re-enabling shared_from_this </td>
		<td > Jonathan Wakely, Peter Dimov </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0034R0 </td>
		<td > Civil Time for the Standard Library </td>
		<td > Bill Seymour </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0035R0 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2015-09-09 </td>
		<td > 2015-09 </td>
		<td > N3396 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0036R0 </td>
		<td > Unary Folds and Empty Parameter Packs (Revision 1) </td>
		<td > Thibaut Le Jehan </td>
		<td > 2015-09-10 </td>
		<td > 2015-09 </td>
		<td > N4358 </td>
		<td > Core </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0037R0 </td>
		<td > Fixed point real numbers </td>
		<td > John McFarlane </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0038R0 </td>
		<td > Flat Containers </td>
		<td > Sean Middleditch </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0039R0 </td>
		<td > Extending raw_storage_iterator </td>
		<td > Brent Friedman </td>
		<td > 2015-09-11 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0040R0 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2015-09-11 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0041R0 </td>
		<td > Unstable remove algorithms </td>
		<td > Brent Friedman </td>
		<td > 2015-09-11 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0042R0 </td>
		<td > std::recover: undoing type erasure </td>
		<td > David Krauss </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0043R0 </td>
		<td > Function wrappers with allocators and noexcept </td>
		<td > David Krauss </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0044R0 </td>
		<td > unwinding_state: safe exception relativity </td>
		<td > David Krauss </td>
		<td > 2015-09-17 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0045R0 </td>
		<td > Overloaded and qualified std::function </td>
		<td > David Krauss </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0046R0 </td>
		<td > Change is_transparent to metafunction </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2015-09-10 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0047R0 </td>
		<td > Transactional Memory (TM) Meeting Minutes 2015/06/01-2015/09/21 </td>
		<td > Michael Wong </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0048R0 </td>
		<td > Games Dev/Low Latency/Financial Trading/Banking Meeting Minutes 2015/08/12-2015/09/23 </td>
		<td > Michael Wong </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0050R0 </td>
		<td > C++ generic match function </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0051R0 </td>
		<td > C++ generic overload function </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2015-09-22 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0051R1</td>
	</tr>
	<tr >
		<td > P0052R0 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4189 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0053R0 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td > N4187 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0054R0 </td>
		<td > Coroutines: reports from the fields </td>
		<td > Gor Nishanov </td>
		<td > 2015-09-12 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0055R0 </td>
		<td > On Interactions Between Coroutines and Networking Library </td>
		<td > Gor Nishanov </td>
		<td > 2015-09-12 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0056R0 </td>
		<td > Soft Keywords </td>
		<td > Gor Nishanov </td>
		<td > 2015-09-12 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R0 </td>
		<td > Wording for Coroutines (Revision 3) </td>
		<td > Gor Nishanov </td>
		<td > 2015-09-26 </td>
		<td > 2015-09 </td>
		<td > N4499 </td>
		<td > Core, Library Evolution </td>
		<td > Revised P0057R1</td>
	</tr>
	<tr >
		<td > P0058R0 </td>
		<td > An Interface for Abstracting Execution </td>
		<td > Jared Hoberock, Michael Garland, Olivier Girioux </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R0 </td>
		<td > Add rings to the Standard Library </td>
		<td > Guy Davidson </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0060R0 </td>
		<td > Function Object-Based Overloading of Operator Dot </td>
		<td > Mathias Gaunard, Dietmar K&uuml;hl </td>
		<td > 2015-09-18 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0061R0 </td>
		<td > Feature-testing preprocessor predicates for C++17 </td>
		<td > Clark Nelson </td>
		<td > 2015-09-16 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Feature Testing </td>
		<td > Revised P0061R1</td>
	</tr>
	<tr >
		<td > P0062R0 </td>
		<td > When should compilers optimize atomics? </td>
		<td > Hans Boehm, JF Bastien, Peter Dimov, Hal Finkel, Paul McKenney, Michael Wong, Jeffrey Yasskin </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0063R0 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Hans Boehm, Clark Nelson </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0065R0 </td>
		<td > Movable initializer lists, rev. 2 </td>
		<td > David Krauss </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4166 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0066R0 </td>
		<td > Accessors and views with lifetime extension </td>
		<td > David Krauss </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td > N4221 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0067R0 </td>
		<td > Elementary string conversions </td>
		<td > Jens Maurer </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0068R0 </td>
		<td > Proposal of [[unused]], [[nodiscard]] and [[fallthrough]] attributes </td>
		<td > Andrew Tomazos </td>
		<td > 2015-09-03 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Revised P0188R0, P0189R0</td>
	</tr>
	<tr >
		<td > P0069R0 </td>
		<td > A C++ Compiler for Heterogeneous Computing </td>
		<td > Ben Sander, Greg Stoner, Siu-chi Chan, Wen-Heng (Jack) Chung </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0070R0 </td>
		<td > Coroutines: Return Before Await </td>
		<td > Gor Nishanov </td>
		<td > 2015-09-12 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0071R0 </td>
		<td > Coroutines: Keyword alternatives </td>
		<td > Gor Nishanov </td>
		<td > 2015-09-12 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0072R0 </td>
		<td > Light-Weight Execution Agents </td>
		<td > Torvald Riegel </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N4439 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0073R0 </td>
		<td > On unifying the coroutines and resumable
functions proposals </td>
		<td > Torvald Riegel </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0074R0 </td>
		<td > Making std::owner_less more flexible </td>
		<td > Jonathan Wakely </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0075R0 </td>
		<td > Template Library for Index-Based Loops </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R0 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0077R0 </td>
		<td > is_callable, the missing INVOKE related trait </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2015-09-22 </td>
		<td > 2015-09 </td>
		<td > N4446 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0078R0 </td>
		<td > The [[pure]] attribute </td>
		<td > Karl-&Eacute;tienne Perron </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > N3744 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0079R0 </td>
		<td > Extension methods in C++ </td>
		<td > Jonathan Coe, Roger Orr </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0080R0 </td>
		<td > Variant: Discriminated Union with Value Semantics </td>
		<td > Michael Park </td>
		<td > 2015-07-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0081R0 </td>
		<td > A proposal to add sincos to the standard library </td>
		<td > Paul Dreik </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0082R0 </td>
		<td > For Loop Exit Strategies (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N3587 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0083R0 </td>
		<td > Splicing Maps and Sets (Revision 2) </td>
		<td > Alan Talbot </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N3645 </td>
		<td > Library Evolution </td>
		<td > Revised P0083R1</td>
	</tr>
	<tr >
		<td > P0084R0 </td>
		<td > Emplace Return Type </td>
		<td > Alan Talbot </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0085R0 </td>
		<td > Oo... adding a coherent character sequence to begin octal-literals </td>
		<td > Michael Jonker, Axel Naumann </td>
		<td > 2015-05-08 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0086R0 </td>
		<td > Variant design review </td>
		<td > Axel Naumann </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0087R0 </td>
		<td > Variant: a type-safe union without undefined behavior (v2) </td>
		<td > Axel Naumann </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td > N4542 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0088R0 </td>
		<td > Variant: a type-safe union that is rarely invalid (v5) </td>
		<td > Axel Naumann </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4542 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0089R0 </td>
		<td > Quantifying Memory-Allocatiom Strategies </td>
		<td > John Lakos, Jeffrey Mendelsohn, Alisdair Meredith, Nathan Myers </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td > N4468 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0090R0 </td>
		<td > Removing result_type, etc. </td>
		<td > Stephan T. Lavavej  </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0091R0 </td>
		<td > Template parameter deduction for constructors (Rev. 3) </td>
		<td > Mike Spertus, Richard Smith </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N4471 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0092R0 </td>
		<td > Polishing &lt;chrono&gt; </td>
		<td > Howard Hinnant </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0092R1</td>
	</tr>
	<tr >
		<td > P0093R0 </td>
		<td > Simply a strong variant </td>
		<td > David Sankel </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0094R0 </td>
		<td > Simply a basic variant </td>
		<td > David Sankel </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0095R0 </td>
		<td > The case for a language based variant </td>
		<td > David Sankel </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0096R0 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2014-09-16 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0097R0 </td>
		<td > Use Cases for Thread-Local Storage </td>
		<td > Paul E. McKenney, JF Bastien, Pablo Halpern, Michael Wong, Thomas Richard William Scogland, Robert Geva </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N4376 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0098R0 </td>
		<td > Towards Implementation and Use of memory order consume </td>
		<td > Paul E. McKenney, Torvald Riegel, Jeff Preshing,
Hans Boehm, Clark Nelson, Olivier Giroux, Lawrence Crowl </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N4321 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0099R0 </td>
		<td > A low-level API for stackful context switching </td>
		<td > Oliver Kowalke, Nat Goodspeed </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4397 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0100R0 </td>
		<td > Comparison in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4367 </td>
		<td > Library Evolution </td>
		<td > Revised P0100R1</td>
	</tr>
	<tr >
		<td > P0101R0 </td>
		<td > An Outline of a C++ Numbers Technical Specification, </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0102R0 </td>
		<td > C++ Parametric Number Type Aliases </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0103R0 </td>
		<td > Overflow-Detecting and Double-Wide Arithmetic Operations </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0104R0 </td>
		<td > Multi-Word Integer Operations and Types </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0105R0 </td>
		<td > Rounding and Overflow in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4448 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0106R0 </td>
		<td > C++ Binary Fixed-Point Arithmetic </td>
		<td > Lawrence Crowl </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N3352 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0107R0 </td>
		<td > Better support for constexpr in std::array </td>
		<td > Louis Dionne </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0108R0 </td>
		<td > Skeleton Proposal for Thread-Local Storage (TLS) </td>
		<td > Paul E. McKenney, JF Bastien </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0109R0 </td>
		<td > Function Aliases + Extended Inheritance = Opaque Typedefs </td>
		<td > Walter E. Brown </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > N3471 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0110R0 </td>
		<td > Implementing the strong guarantee for variant<> assignment </td>
		<td > Anthony Williams  </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0112R0 </td>
		<td > Networking Library (Revision 6) </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Revised P0112R1</td>
	</tr>
	<tr >
		<td > P0113R0 </td>
		<td > Executors and Asynchronous Operations, Revision 2 </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > N4242 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0114R0 </td>
		<td > Resumable Expressions (revision 1) </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > N4453 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0116R0 </td>
		<td > Boolean conversion for Standard Library types </td>
		<td > Robert Kawulak </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0117R0 </td>
		<td > Generic to_string/to_wstring functions </td>
		<td > Robert Kawulak </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0118R0 </td>
		<td > Concepts-TS editors report </td>
		<td > Andrew Sutton </td>
		<td > 2015-09-26 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concepts </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0119R0 </td>
		<td > Overload sets as function arguments </td>
		<td > Andrew Sutton </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0120R0 </td>
		<td > constexpr unions and common initial sequences </td>
		<td > Anthony Williams  </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0121R0 </td>
		<td > Working Draft, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Concepts </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R0 </td>
		<td > array_view: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0123R0 </td>
		<td > Unifying the interfaces of string_view and array_view </td>
		<td > Neil MacIntosh </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R0 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > N4444 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0125R0 </td>
		<td > std::bitset inclusion test methods </td>
		<td > Vittorio Romeo </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0126R0 </td>
		<td > std::synchronic&lt;T> </td>
		<td > Olivier Giroux </td>
		<td > 2015-09-24 </td>
		<td > 2015-09 </td>
		<td > N4195 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0127R0 </td>
		<td > Declaring non-type template arguments with auto </td>
		<td > James Touton </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0128R0 </td>
		<td > constexpr_if </td>
		<td > Ville Voutilainen </td>
		<td > 2015-09-26 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0129R0 </td>
		<td > We cannot (realistically) get rid of throwing moves </td>
		<td > Ville Voutilainen </td>
		<td > 2015-09-26 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0130R0 </td>
		<td > Comparing virtual functions </td>
		<td > Scott Wardle, Roberto Parolin </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0131R0 </td>
		<td > Unified call syntax concerns </td>
		<td > Bjarne Stroustrup </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0132R0 </td>
		<td > Non-throwing container operations </td>
		<td > Ville Voutilainen </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0133R0 </td>
		<td > Putting noexcept(auto) on hold, again </td>
		<td > Ville Voutilainen </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0134R0 </td>
		<td > Introducing a name for brace-or-equal-initializers for non-static data members </td>
		<td > Richard Smith </td>
		<td > 2015-09-23 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0135R0 </td>
		<td > Guaranteed copy elision through simplified value categories </td>
		<td > Richard Smith </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0136R0 </td>
		<td > Rewording inheriting constructors (core issue 1941 et al) </td>
		<td > Richard Smith </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > N4429 </td>
		<td > Core </td>
		<td > Revised P0136R1</td>
	</tr>
	<tr >
		<td > P0137R0 </td>
		<td > Core Issue 1776: Replacement of class objects containing reference members </td>
		<td > Richard Smith </td>
		<td > 2015-09-27 </td>
		<td > 2015-09 </td>
		<td > N4430 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0138R0 </td>
		<td > Construction Rules for enum class Values </td>
		<td > Gabriel Dos Reis </td>
		<td > 2015-09-28 </td>
		<td > 2015-09 </td>
		<td > N4430 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0146R0 </td>
		<td > Regular Void </td>
		<td > Matt Calabrese </td>
		<td > 2015-09-25 </td>
		<td > 2015-09 </td>
		<td > </td>
		<td > Evolution </td>
		<td > </td>
	</tr>


<!-- end pre-Kona -->

        <tr>
            <th colspan="8">2015-11 post-Kona</th>
        </tr>
<!-- begin post-Kona -->

	<tr >
		<td > N4553 </td>
		<td > Working Draft, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2015-10-02 </td>
		<td > 2015-11 </td>
		<td > N4549 </td>
		<td > Concepts </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4554 </td>
		<td > Editor's report for the Concepts TS </td>
		<td > Andrew Sutton </td>
		<td > 2015-10-02 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Concepts </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4555 </td>
		<td > February 2016 WG21 Meeting </td>
		<td > Barry Hedquist </td>
		<td > 2015-10-09 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4556 </td>
		<td > WG21 telecon minutes </td>
		<td > Marhsall Clow </td>
		<td > 2015-10-09 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4557 </td>
		<td > WG21 2015-07-20 Telecon (revised) </td>
		<td > Roger Orr </td>
		<td > 2015-10-24 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4558 </td>
		<td > Kona WG21 Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2015-11-16 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4559 </td>
		<td > Kona PL22.16 Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2015-11-16 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4560 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4561 </td>
		<td > Ranges Editor's Report </td>
		<td > Eric Niebler </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4562 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Geoffrey Romer </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td > N4529 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4563 </td>
		<td > Editor's Report for the Library Fundamentals TS </td>
		<td > Geoffrey Romer </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4564 </td>
		<td > C++ Extensions for Library Fundamentals, Version 2 PDTS </td>
		<td > Geoffrey Romer </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4565 </td>
		<td > Record of Response: National Body Comments
ISO/IEC PDTS 19571
Technical Specification: C++ Extensions for Concurrency </td>
		<td > Barry Hedquist </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4566 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2015-11-09 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4567 </td>
		<td > Working Draft, Standard for Programming
Language C++
Note: </td>
		<td > Richard Smith </td>
		<td > 2015-11-09 </td>
		<td > 2015-11 </td>
		<td > N4527 </td>
		<td >  </td>
		<td >  </td>
	</tr>


	<tr >
		<td > P0001R1 </td>
		<td > Removing Deprecated Register Keyword </td>
		<td > Alisdair Meredith </td>
		<td > 2015-10-21 </td>
		<td > 2015-11 </td>
		<td > P0001R0 </td>
		<td > Core </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0002R1 </td>
		<td > Removing Deprecated Operator++ for bool </td>
		<td > Alisdair Meredith </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td > P0002R0 </td>
		<td > Core </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0004R1 </td>
		<td > Removing Deprecated Aliases in iostreams </td>
		<td > Alisdair Meredith </td>
		<td > 2015-10-19 </td>
		<td > 2015-11 </td>
		<td > P0004R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0005R1 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej, Tomasz Kamin&#x301;ski </td>
		<td > 2015-10-18 </td>
		<td > 2015-11 </td>
		<td > P0005R0 </td>
		<td > Library </td>
		<td > Revised P0005R2  </td>
	</tr>
	<tr >
		<td > P0005R2 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej, Tomasz Kamin&#x301;ski </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td > P0005R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0007R1 </td>
		<td > Constant View: A proposal for a std::as_const helper function template </td>
		<td > ADAM David Alan Martin, Alisdair Meredith </td>
		<td > 2015-10-22 </td>
		<td > 2015-11 </td>
		<td > P0007R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0012R1 </td>
		<td > Make exception specifications be part of the type system, version 5 </td>
		<td > Jens Maurer </td>
		<td > 2015-10-22 </td>
		<td > 2015-11 </td>
		<td > P0012R0 </td>
		<td >  </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0013R1 </td>
		<td > Logical Operator Type Traits (revison 1) </td>
		<td > Jonathan Wakely </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td > P0013R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0014R1 </td>
		<td > Proposal to add the multiline option to std::regex for its
ECMAScript engine </td>
		<td > Nozomu Kat&#x14d; </td>
		<td > 2015-10-30 </td>
		<td > 2015-11 </td>
		<td > P0014R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0017R1 </td>
		<td > Extension to aggregate initialization </td>
		<td > Oleg Smolsky </td>
		<td > 2015-10-24 </td>
		<td > 2015-11 </td>
		<td > P0017R0 </td>
		<td > Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0018R1 </td>
		<td > Lambda Capture of *this by Value </td>
		<td > H. Carter Edwards, Christian Trott, Hal Finkel, Jim Reus, Robin Maffeo, Ben Sander </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td > P0018R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0022R1 </td>
		<td > Proxy Iterators for the Ranges Extensions </td>
		<td > Eric Niebler </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td > P0022R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0025R1 </td>
		<td > An algorithm to "clamp" a value between a pair of boundary values </td>
		<td > Martin Moene, Niels Dekker </td>
		<td > 2015-10-29 </td>
		<td > 2015-11 </td>
		<td > P0025R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0030R1 </td>
		<td > Proposal to Introduce a 3-Argument Overload to std::hypot </td>
		<td > Benson Ma </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td > P0030R0 </td>
		<td > Library </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0032R1 </td>
		<td > Homogeneous interface for variant<Ts...>, any and optional&lt;T> (Revision 1) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td > P0032R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0051R1 </td>
		<td > C++ generic overload function (Revision 1) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td > P0051R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0057R1 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td > P0057R0 </td>
		<td > Core, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0061R1 </td>
		<td > __has_include for C++17 </td>
		<td > Clark Nelson </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td > P0061R0 </td>
		<td >  </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0083R1 </td>
		<td > Splicing Maps and Sets (Revision 3) </td>
		<td > Alan Talbot, Jonathan Wakely, Howard Hinnant, James Dennett </td>
		<td > 2015-11-07 </td>
		<td > 2015-11 </td>
		<td > P0083R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0092R1 </td>
		<td > Polishing <chrono> </td>
		<td > Howard Hinnant </td>
		<td > 2015-10-20 </td>
		<td > 2015-11 </td>
		<td > P0092R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0100R1 </td>
		<td > Comparison in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2015-11-07 </td>
		<td > 2015-11 </td>
		<td > P0100R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0112R1 </td>
		<td > Networking Library (Revision 7) </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td > P0112R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0136R1 </td>
		<td > Rewording inheriting constructors (core issue 1941 et al) </td>
		<td > Richard Smith </td>
		<td > 2015-10-19 </td>
		<td > 2015-11 </td>
		<td > P0136R0 </td>
		<td > Core </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0144R0 </td>
		<td > Structured Bindings </td>
		<td > Herb Sutter </td>
		<td > 2015-10-14 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0145R0 </td>
		<td > Expression Order of Evaluation </td>
		<td > Gabriel Dos Reis, Herb Sutter, Jonathan Caves </td>
		<td > 2015-10-01 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0147R0 </td>
		<td > The Use and Implementation of Contracts </td>
		<td > Lawrence Crowl </td>
		<td > 2015-11-08 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0148R0 </td>
		<td > memory_resource_ptr: A Limited Smart Pointer for memory_resource Correctness </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2015-10-14 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0151R0 </td>
		<td > Proposal of Multi-Declarators </td>
		<td > Andrew Tomazos </td>
		<td > 2015-10-16 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0152R0 </td>
		<td > constexpr atomic::is_always_lock_free </td>
		<td > Olivier Giroux, JF Bastien, Jeff Snyder </td>
		<td > 2015-10-21 </td>
		<td > 2015-11 </td>
		<td > N4509 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0153R0 </td>
		<td > std::atomic_object_fence(mo, T&&...) </td>
		<td > Olivier Giroux, JF Bastien </td>
		<td > 2015-11-05 </td>
		<td > 2015-11 </td>
		<td > N4522 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0154R0 </td>
		<td > constexpr std::thread::hardware_{true,false}_sharing_size </td>
		<td > JF Bastien, Olivier Giroux </td>
		<td > 2015-10-24 </td>
		<td > 2015-11 </td>
		<td > N4523 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0155R0 </td>
		<td > Task Block R5 </td>
		<td > Pablo Halpern, Arch Robison, Hong Hong, Artur Laksberg, Gor Nishanov, Herb Sutter </td>
		<td > 2015-10-22 </td>
		<td > 2015-11 </td>
		<td > N4411 </td>
		<td > Library </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0156R0 </td>
		<td > Variadic lock_guard (Rev. 3) </td>
		<td > Mike Spertus </td>
		<td > 2015-10-21 </td>
		<td > 2015-11 </td>
		<td > N4498 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0157R0 </td>
		<td > Handling Disappointment in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2015-11-07 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0158R0 </td>
		<td > Couroutines belong in a TS </td>
		<td > Jamie Allsop, Jonathan Wakely, Christopher Kohlhoff, Anthony Williams, Roger Orr, Andy Sawyer, Jonathan Coe, Arash Partow </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0159R0 </td>
		<td > Draft of Technical Specification for C++ Extensions for Concurrency </td>
		<td > Artur Laksberg </td>
		<td > 2015-10-22 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0160R0 </td>
		<td > Wording for removing defaults for unary folds </td>
		<td > Jens Maurer </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0162R0 </td>
		<td > A response to "P0055R0: On Interactions Between Coroutines and Networking Library" </td>
		<td > Christopher Kohlhoff </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0163R0 </td>
		<td > shared_ptr::weak_type </td>
		<td > Arthur O'Dwyer </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06  </td>
	</tr>
	<tr >
		<td > P0164R0 </td>
		<td > Core Language Working Group "ready" Issues </td>
		<td > William M. Miller </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0165R0 </td>
		<td > C++ Standard Library Issues to be moved in Kona </td>
		<td > Marshall Clow </td>
		<td > 2015-10-23 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2015-10 </td>
	</tr>
	<tr >
		<td > P0166R0 </td>
		<td > Three interesting questions about contracts </td>
		<td > J. Daniel Garcia </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0167R0 </td>
		<td > Core Language Working Group "ready" Issues after the October, 2015 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2015-11-10 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0169R0 </td>
		<td > regex and Unicode character types </td>
		<td > Nozomu Kat&#x14d; </td>
		<td > 2015-11-03 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Library evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0170R0 </td>
		<td > Wording for Constexpr Lambda </td>
		<td > Faisal Vali </td>
		<td > 2015-11-01 </td>
		<td > 2015-11 </td>
		<td > N4487 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0171R0 </td>
		<td > Response To: Resumable Expressions P0114R0 </td>
		<td > Gor Nishanov </td>
		<td > 2015-11-06 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0172R0 </td>
		<td > Abominable Function Types </td>
		<td > Alisdair Meredith </td>
		<td > 2015-11-10 </td>
		<td > 2015-11 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>


<!-- end post-Kona -->

        <tr>
            <th colspan="8">2016-02 pre-Jacksonville</th>
        </tr>
<!-- begin pre-Jacksonville -->

	<tr >
		<td > N4568 </td>
		<td > PL22.16/WG21 draft agenda: 29 Feb-05 Mar 2016, Jacksonville, FL/US </td>
		<td > Clark Nelson </td>
		<td > 2015-12-01 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4569 </td>
		<td > Proposed Ranges TS working draft </td>
		<td > Eric Niebler </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4570 </td>
		<td > Oulu Meeting Information </td>
		<td > Ville Voutilainen </td>
		<td > 2016-01-08 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4571 </td>
		<td > 2016-11 Issaquah meeting information </td>
		<td > Herb Sutter </td>
		<td > 2016-01-21 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4572 </td>
		<td > WG21 telecon meeting: Pre-Jacksonville </td>
		<td > Herb Sutter </td>
		<td > 2016-01-27 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4573 </td>
		<td > 2017-02 Kona WG21 Meeting Information </td>
		<td > Thomas Plum </td>
		<td > 2016-02-02 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4574 </td>
		<td > Withdrawn </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4575 </td>
		<td > Networking TS Working Draft </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4576 </td>
		<td > Networking TS Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4577 </td>
		<td > Technical Specification for C++ Extensions for
Concurrency </td>
		<td > Artur Laksberg </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0003R1 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td > P0003R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0005R3 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej,  Tomasz Kamin&#x301;ski </td>
		<td > 2016-11-10 </td>
		<td > 2016-02 </td>
		<td > P0005R2 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0009R1 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Christian Trott, Juan Alday, Jesse Perla, Mauro Bianco, Robin Maffeo, Ben Sander, Bryce Lelbach </td>
		<td > 2016-02-04 </td>
		<td > 2016-02 </td>
		<td > P0009R0 </td>
		<td > Library Evolution, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0010R0 </td>
		<td > Adding a subsection for
concurrent random number generation in C++17 </td>
		<td > Pattabhi Raman </td>
		<td > 2015-11-25 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0018R2 </td>
		<td > Lambda Capture of *this by Value </td>
		<td > H. Carter Edwards, Daveed Vandevoorde, Christian Trott, Hal Finkel, Jim Reus, Robin Maffeo, Ben Sander </td>
		<td > 2015-11-30 </td>
		<td > 2016-02 </td>
		<td > P0018R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0019R1 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2015-02-04 </td>
		<td > 2016-02 </td>
		<td > P0019R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0020R1 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2015-02-04 </td>
		<td > 2016-02 </td>
		<td > P0020R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0024R1 </td>
		<td > The Parallelism TS Should be Standardized </td>
		<td > Jared Hoberock </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0024R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0028R1 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Luis M. Sanchez, Massimo Torquati, Marco Danelutto,  Peter Sommerlad </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0028R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0033R1 </td>
		<td > Re-enabling shared_from_this (revision 1) </td>
		<td > Jonathan Wakely, Peter Dimov </td>
		<td > 2015-10-24 </td>
		<td > 2016-02 </td>
		<td > P0033R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0035R1 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2015-12-29 </td>
		<td > 2016-02 </td>
		<td > P0035R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R1 </td>
		<td > Fixed point real numbers </td>
		<td > John McFarlane </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0037R0 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0040R1 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2016-01-10 </td>
		<td > 2016-02 </td>
		<td > P0040R0 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0046R1 </td>
		<td > Change is_transparent to metafunction </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-01-30 </td>
		<td > 2016-02 </td>
		<td > P0046R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0052R1 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0052R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0055R1 </td>
		<td > On Interactions Between Coroutines and Networking Library </td>
		<td > Gor Nishanov </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0055R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R2 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0057R1 </td>
		<td > Core, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0058R1 </td>
		<td > An Interface for Abstracting Execution </td>
		<td > Jared Hoberock, Michael Garland, Olivier Girioux </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0058R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R1 </td>
		<td > Add rings to the Standard Library </td>
		<td > Guy Davidson, Arthur O'Dwyer </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td > P0059R0 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0063R1 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Clark Nelson, Hans Boehm </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0063R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0067R1 </td>
		<td > Elementary string conversions </td>
		<td > Jens Maurer </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0067R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0072R1 </td>
		<td > Light-Weight Execution Agents </td>
		<td > Torvald Riegel </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0072R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0073R1 </td>
		<td > On unifying the coroutines and resumable
functions proposals </td>
		<td > Torvald Riegel </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0073R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0075R1 </td>
		<td > Template Library for Index-Based Loops </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0075R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R1 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0076R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0077R1 </td>
		<td > is_callable, the missing INVOKE related trai </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0077R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0082R1 </td>
		<td > For Loop Exit Strategies (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td > P0082R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0088R1 </td>
		<td > Variant: a type-safe union that is rarely invalid (v6) </td>
		<td > Axel Naumann </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td > P0088R0 </td>
		<td > Library</td>
		<td > </td>
	</tr>
	<tr >
		<td > P0089R1 </td>
		<td > Quantifying Memory-Allocation Strategies </td>
		<td > John Lakos, Jeffrey Mendelsohn, Alisdair Meredith, Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0089R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0091R1 </td>
		<td > Template parameter deduction for constructors (Rev. 3) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td > P0091R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0096R1 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2016-01-19 </td>
		<td > 2016-02 </td>
		<td > P0096R0 </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0119R1 </td>
		<td > Overload sets as function arguments </td>
		<td > Andrew Sutton </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0119R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R1 </td>
		<td > span: bounds-safe views of objects for sequences </td>
		<td > Neil MacIntosh </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0122R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0123R1 </td>
		<td > string_span: bounds-safe views for sequences of characters </td>
		<td > Neil MacIntosh </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0123R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R1 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri </td>
		<td > 2016-01-27 </td>
		<td > 2016-02 </td>
		<td > P0124R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0126R1 </td>
		<td > std::synchronic&lt;T> </td>
		<td > Olivier Giroux </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0126R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0128R1 </td>
		<td > constexpr_if </td>
		<td > Ville Voutilainen </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td > P0128R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0138R1 </td>
		<td > Construction Rules for enum class Values </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td > P0138R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0142R0 </td>
		<td > A Module System for C++ (Revision 4) </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0143R0 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2015-11-30 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0143R1 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td > P0143R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0144R1 </td>
		<td > Structured Bindings </td>
		<td > Herb Sutter, Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-02-03 </td>
		<td > 2016-02 </td>
		<td > P0144R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0145R1 </td>
		<td > Refining Expression Evaluation Order for Idiomatic C++ (Revision 2) </td>
		<td > Gabriel Dos Reis, Herb Sutter, Jonathan Caves </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0145R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0146R1 </td>
		<td > Regular Void </td>
		<td > Matt Calabrese  </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0146R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0149R0 </td>
		<td > Generalised member pointers </td>
		<td > Jeff Snyder </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0161R0 </td>
		<td > Bitset Iterators, Masks, and Container Operations </td>
		<td > Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R1 </td>
		<td > C++ Standard Library Issues to be moved in Jacksonville </td>
		<td > Marshall Clow </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0165R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0167R1 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Jacksonville) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td > P0167R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0174R0 </td>
		<td > Deprecating Vestigial Library Parts in C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0175R0 </td>
		<td > Synopses for the C library </td>
		<td > Thomas Koeppe, Richard Smith </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0177R0 </td>
		<td > Cleaning up allocator_traits </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0178R0 </td>
		<td > Allocators and swap </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0180R0 </td>
		<td > Reserve a New Library Namespace Future Standardization </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0181R0 </td>
		<td > Ordered By Default </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-17 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0184R0 </td>
		<td > Generalizing the Range-Based For Loop </td>
		<td > Eric Niebler </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0185R0 </td>
		<td > Adding [nothrow-] swappable traits </td>
		<td > Daniel Krugler </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0186R0 </td>
		<td > Iterator Facade Library Proposal for Ranges </td>
		<td > Beman Dawes, Eric Niebler, Casey Carter </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0187R0 </td>
		<td > Proposal of Bitfield
Default Member
Initializers </td>
		<td > Andrew Tomazos </td>
		<td > 2015-11-20 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0188R0 </td>
		<td > Wording for [[fallthrough]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-01-03 </td>
		<td > 2016-02 </td>
		<td > P0068R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0189R0 </td>
		<td > Wording for [[nodiscard]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-01-03 </td>
		<td > 2016-02 </td>
		<td > P0068R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0190R0 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm, Jens Maurer </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0192R0 </td>
		<td > Adding a Fundamental Type for Short Float </td>
		<td > Boris Fomitchev, Sergei Nikolaev, Oliver Giroux </td>
		<td > 2015-11-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0193R0 </td>
		<td > Where is Vectorization in C++&#8253; </td>
		<td > JF Bastien, Hans Boehm </td>
		<td > 2016-01-21 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R0 </td>
		<td > Static reflection (revision 4) </td>
		<td > Matus Chochlik, Axel Naumann </td>
		<td > 2016-02-08 </td>
		<td > 2016-02 </td>
		<td > N4451 </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0195R0 </td>
		<td > Modernizing using-declarations </td>
		<td > Robert Haberlach </td>
		<td > 2015-12-23 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R0 </td>
		<td > A generic none_t literal type for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0197R0 </td>
		<td > Default Tuple-like access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0198R0 </td>
		<td > Default Swap </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0199R0 </td>
		<td > Default Hash </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0200R0 </td>
		<td > A Proposal to Add Y Combinator to the Standard Library </td>
		<td > Yegor Derevenets </td>
		<td > 2016-01-22 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0201R0 </td>
		<td > A cloning pointer-class for C++ </td>
		<td > Jonathan Coe </td>
		<td > 2016-02-01 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0202R0 </td>
		<td > Add Constexpr Modifiers to Functions in &lt;algorithm> and &lt;cstring> Headers </td>
		<td > Antony Polukhin </td>
		<td > 2016-01-31 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0203R0 </td>
		<td > Considerations for the design of expressive portable SIMD vectors </td>
		<td > Mathias Gaunard </td>
		<td > 2016-01-26 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0205R0 </td>
		<td > Allow Seeding Random Number Engines With std::random_device </td>
		<td > Moritz Klammler </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Numerics, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0206R0 </td>
		<td > Discussion about std::thread and RAII </td>
		<td > Ville Voutilainen </td>
		<td > 2016-01-27 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0207R0 </td>
		<td > Ruminations on lambda captures </td>
		<td > Ville Voutilainen </td>
		<td > 2016-01-28 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0208R0 </td>
		<td > Copy-swap helper </td>
		<td > Pablo Halpern </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0209R0 </td>
		<td > make_from_tuple: apply for construction </td>
		<td > Pablo Halpern </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0210R0 </td>
		<td > A light-weight, dynamic array </td>
		<td > Thomas Koeppe </td>
		<td > 2016-01-29 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0211R0 </td>
		<td > Allocator-aware library wrappers for dynamic allocation </td>
		<td > Thomas Koeppe </td>
		<td > 2016-01-30 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0212R0 </td>
		<td > Wording for [[maybe_unused]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-01-31 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0213R0 </td>
		<td > Reexamining the Performance of Memory-Allocation Strategies </td>
		<td > Graham Bleaney </td>
		<td > 2016-01-24 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R0 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > N4385 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0215R0 </td>
		<td > A Civil-Time Library </td>
		<td > Greg Miller, Bradley White </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0216R0 </td>
		<td > A Time-Zone Library </td>
		<td > Greg Miller, Bradley White </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0217R0 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0218R0 </td>
		<td > Adopt File System TS for C++17 </td>
		<td > Beman Dawes </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library, File System </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0219R0 </td>
		<td > Relative Paths for Filesystem </td>
		<td > Beman Dawes, Jamie Allsop, Nicolai Josuttis </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library, File System </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0220R0 </td>
		<td > Adopt Library Fundamentals TS for C++17 </td>
		<td > Beman Dawes </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0221R0 </td>
		<td > Proposed wording for default comparisons, revision 2 </td>
		<td > Jens Maurer </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td > N4532 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0222R0 </td>
		<td > Allowing Anonymous Structs as Return Values </td>
		<td > Matthew Woehlke </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0223R0 </td>
		<td > Class Namespace </td>
		<td > Matthew Woehlke </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0224R0 </td>
		<td > Implicit Return Type </td>
		<td > Matthew Woehlke </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0225R0 </td>
		<td > Why I want Concepts, and why I want them sooner rather than later </td>
		<td > Ville Voutilainen </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0226R0 </td>
		<td > Mathematical Special Functions for C++17, v4 </td>
		<td > Walter E. Brown, Axel Naumann, Edward Smith-Rowland </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td > N4437 </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0227R0 </td>
		<td > Weakening the iterator categories of some standard algorithms </td>
		<td > Thibaut Le Jehan </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0228R0 </td>
		<td > A Proposal to Add Safe Integer Types to the Standard Library Technical Report </td>
		<td > Robert Ramey </td>
		<td > 2016-02-16 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0229R0 </td>
		<td > SG5 Transactional Memory Meeting minutes 2015/11/02-2016/02/08 </td>
		<td > Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0230R0 </td>
		<td > SG14 Games Dev/Low Latency/Financial Meeting Minutes 2015/10/14-2015/02/10 </td>
		<td > Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0231R0 </td>
		<td > Extending the Transactional Memory Technical Specification to Support Commit Actions </td>
		<td > Victor Luchangco, Michael Spear, Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0232R0 </td>
		<td > A Concurrency ToolKit for Structured Deferral/Optimistic Speculation </td>
		<td > Paul McKenney, Michael Wong, Maged Michael </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R0 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0234R0 </td>
		<td > Towards Massive Parallelism(aka Heterogeneous Devices/Accelerators/GPGPU) support in C++ </td>
		<td > Michael Wong, Hartmut Kaiser, Thomas Heller </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0235R0 </td>
		<td > A Packaging System for C++ </td>
		<td > Guy Somberg, Brian Fitzgerald </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0236R0 </td>
		<td > Khronos's OpenCL SYCL to support
Heterogeneous Devices for C++ </td>
		<td > Michael Wong, Andrew Richards, Maria Rovatsou, Ruyman Reyes </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R0 </td>
		<td > On the standardization of fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0238R0 </td>
		<td > Return type deduction and SFINAE </td>
		<td > Tomasz Kamin&#x301;sk </td>
		<td > 2016-02-07 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0239R0 </td>
		<td > valueless_by_exception </td>
		<td > Tony Van Eerd </td>
		<td > 2015-11-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0240R0 </td>
		<td > Why I want Concepts, but why they should come later rather than sooner </td>
		<td > Matt Calabrese </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0241R0 </td>
		<td > Remove Future-Related Explicit Specializations for Void </td>
		<td > Matt Calabrese </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0242R0 </td>
		<td > Standard Library Support For Void </td>
		<td > Matt Calabrese </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0244R0 </td>
		<td > Text_view: A C++ concepts and range based character encoding
and code point enumeration library </td>
		<td > Tom Honermann </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0245R0 </td>
		<td > Hexadecimal float literals for C++ </td>
		<td > Thomas Koeppe </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0246R0 </td>
		<td > Contract Assert Support Merged Proposal </td>
		<td > Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0247R0 </td>
		<td > Criteria for Contract Support </td>
		<td > Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0248R0 </td>
		<td > Concepts in C++17 </td>
		<td > Andrew Sutton </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0249R0 </td>
		<td > Input Devices For 2D Graphics </td>
		<td > Brett Searles </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0250R0 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046) </td>
		<td > Hans Boehm </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0251R0 </td>
		<td > Unified Call Syntax Wording </td>
		<td > Bjarne Stroustrup, Herb Sutter </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0252R0 </td>
		<td > Operator Dot Wording </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0253R0 </td>
		<td > Fixing a design mistake in the searchers
interface in Library Fundamentals </td>
		<td > Marshall Clow </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0255R0 </td>
		<td > C++ Static Reflection via template pack expansion </td>
		<td > Cleiton Santoia Silva, Daniel Auresco </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > N4447 </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0256R0 </td>
		<td > C++ Reflection Light </td>
		<td > Cleiton Santoia Silva </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0257R0 </td>
		<td > A byte type for the standard library. </td>
		<td > Neil MacIntosh </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0258R0 </td>
		<td > is_contiguous_layout </td>
		<td > Michael Spencer </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0259R0 </td>
		<td > fixed_string: a compile-time string </td>
		<td > Michael Price, Andrew Tomazos </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0260R0 </td>
		<td > C++ Concurrent Queues </td>
		<td > Lawrence Crowl, Chris Mysen </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0261R0 </td>
		<td > C++ Distributed Counters </td>
		<td > Lawrence Crowl </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0262R0 </td>
		<td > A Class for Status and Optional Value </td>
		<td > Lawrence Crowl </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0263R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the February, 2016 (Jacksonville) Meeting </td>
		<td > William M. Miller </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0264R0 </td>
		<td > auto operator= considered dangerous </td>
		<td > Michael Price </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0265R0 </td>
		<td > SG5 is NOT proposing Transactional Memory for C++17 </td>
		<td > Michael Wong </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0266R0 </td>
		<td > Removing Restrictions on requires-Expressions </td>
		<td > Walter E. Brown </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R0 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > N4073 </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0268R0 </td>
		<td > up-to expression </td>
		<td > Mike Spertus, Andrew Tomazos </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0269R0 </td>
		<td > Allocator-aware regular expressions </td>
		<td > Mike Spertus </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td > N4245 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0270R0 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0271R0 </td>
		<td > std::direct_init&lt;T> for plugging the metaprogramming constructor hole </td>
		<td > Richard Smith, Tony Van Eerd, David Sankel </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0272R0 </td>
		<td > Give 'std::string' a non-const '.data()' member function </td>
		<td > David Sankel </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0273R0 </td>
		<td > Proposed modules changes from implementation and deployment experience </td>
		<td > Richard Smith, Chandler Carruth, David Jones </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0274R0 </td>
		<td > Clump - A Vector-like Sequence Container with Embedded Storage </td>
		<td > Nevin Liber </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0277R0 </td>
		<td > const Inheritance </td>
		<td > David Wilson  </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0278R0 </td>
		<td > volatile solutions </td>
		<td > Jon Kalb, Dan Saks </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0279R0 </td>
		<td > Read-Copy Update (RCU) for C++ </td>
		<td > Paul E. McKenney </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0280R0 </td>
		<td > Initialize unspecified aggregate members with direct list initialization </td>
		<td > James Touton </td>
		<td > 2016-02-08 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0281R0 </td>
		<td > Remove comma elision in variadic function declarations </td>
		<td > James Touton </td>
		<td > 2016-01-23 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0282R0 </td>
		<td > Const-preserving overloads for the strtox family of functions </td>
		<td > James Touton </td>
		<td > 2016-02-07 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0283R0 </td>
		<td > Standard and non-standard attributes </td>
		<td > J. Daniel Garcia </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0284R0 </td>
		<td > Unqualified enumerators in case labels </td>
		<td > James Touton </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0285R0 </td>
		<td > Using customization points to unify executors </td>
		<td > Christopher Kohlhoff </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0286R0 </td>
		<td > A networking library extension to support co_await-based coroutines </td>
		<td > Christopher Kohlhoff </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0287R0 </td>
		<td > Simple Contracts for C++ </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0288R0 </td>
		<td > A polymorphic wrapper for all Callable objects </td>
		<td > David Krauss </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0289R0 </td>
		<td > Forward declarations of nested classes </td>
		<td > Matt Austern </td>
		<td > 2016-02-16 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>

        <tr>
            <th colspan="8">2016-03 post-Jacksonville</th>
        </tr>

<!-- begin post-Jacksonville -->

	<tr >
		<td > N4578 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2016-02-22 </td>
		<td > 2016-03 </td>
		<td > N4505 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4579 </td>
		<td > Parallelism TS Editor's Report, pre-Jacksonville
mailing </td>
		<td > Jared Hoberock </td>
		<td > 2016-02-22 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4580 </td>
		<td > WG21 2016-02-19 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-23 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4581 </td>
		<td > Revised WG21 2016-02-19 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4582 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-03-19 </td>
		<td > 2016-03 </td>
		<td > N4567 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4583 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4584 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Geoffrey Romer </td>
		<td > 2016-03-08 </td>
		<td > 2016-03 </td>
		<td > N4562 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4585 </td>
		<td > Editor's Report for the Library Fundamentals TS </td>
		<td > Geoffrey Romer </td>
		<td > 2016-03-08 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4586 </td>
		<td > WG21 2016-02 Jacksonville Min </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-30 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4587 </td>
		<td > PL22.16 2016-02 Jacksonville Minutes (Draft) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-30 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4588 </td>
		<td > Working Draft, C++ extensions for Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > N4575 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4589 </td>
		<td > Networking TS Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0003R2 </td>
		<td > Removing Deprecated Dynamic Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0003R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0005R4 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0005R3 </td>
		<td > Library </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0018R3 </td>
		<td > Lambda Capture of *this by Value as [=,*this] </td>
		<td > H. Carter Edwards, Daveed Vandevoorde, Christian Trott, Hal Finkel, Jim Reus, Robin Maffeo, Ben Sander </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0018R2 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0019R2 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2016-03-14 </td>
		<td > 2016-03 </td>
		<td > P0019R1 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0020R2 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-03-14 </td>
		<td > 2016-03 </td>
		<td > P0020R1 </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0024R2 </td>
		<td > The Parallelism TS Should be Standardized </td>
		<td > Jared Hoberock </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0024R1 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0028R2 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Luis M. Sanchez, Massimo Torquati, Marco Danelutto,  Peter Sommerlad </td>
		<td > 2016-03-15 </td>
		<td > 2016-03 </td>
		<td > P0028R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0028R3 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Daveed Vandevoorde </td>
		<td > 2016-03-15 </td>
		<td > 2016-03 </td>
		<td > P0028R2 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0035R2 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0035R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0052R2 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0052R1 </td>
		<td > Library, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0057R3 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov, Jens Maurer, Richard Smith, Daveed Vandevoorde </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0057R2 </td>
		<td > Core, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0063R2 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Clark Nelson, Hans Boehm </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0063R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0077R2 </td>
		<td > is_callable, the missing INVOKE related trai </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2016-03-03 </td>
		<td > 2016-03 </td>
		<td > P0077R1 </td>
		<td > Library </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0083R2 </td>
		<td > Splicing Maps and Sets (Revision 4) </td>
		<td > Alan Talbot, Jonathan Wakely, Howard Hinnant, James Dennett </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0083R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0088R2 </td>
		<td > Variant: a type-safe union for C++17 (v7) </td>
		<td > Axel Naumann </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0088R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0096R2 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2016-02-23 </td>
		<td > 2016-03 </td>
		<td > P0096R1 </td>
		<td > Feature Testing </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0126R2 </td>
		<td > std::synchronic&lt;T> </td>
		<td > Olivier Giroux, Torvald Riegel </td>
		<td > 2016-03-13 </td>
		<td > 2016-03 </td>
		<td > P0126R1 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0127R1 </td>
		<td > Declaring non-type template arguments with auto </td>
		<td > James Touton, Mike Spertus </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0127R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0138R2 </td>
		<td > Construction Rules for enum class Values </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0138R1 </td>
		<td > WG21 </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0143R2 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0143R1 </td>
		<td > Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0144R2 </td>
		<td > Structured Bindings </td>
		<td > Herb Sutter </td>
		<td > 2016-03-16 </td>
		<td > 2016-03 </td>
		<td > P0144R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0152R1 </td>
		<td > constexpr atomic&lt;T>::is_always_lock_free </td>
		<td > Olivier Giroux, JF Bastien, Jeff Snyder </td>
		<td > 2016-03-02 </td>
		<td > 2016-03 </td>
		<td > P0152R0 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0154R1 </td>
		<td > constexpr std::thread::hardware_{true,false}_sharing_size </td>
		<td > JF Bastien, Olivier Giroux </td>
		<td > 2016-03-03 </td>
		<td > 2016-03 </td>
		<td > P0154R0 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0167R2 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Jacksonville) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0167R1 </td>
		<td > WG21 </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0170R1 </td>
		<td > Wording for Constexpr Lambda </td>
		<td > Faisal Vali </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0170R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0174R1 </td>
		<td > Deprecating Vestigial Library Parts in C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0174R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0177R1 </td>
		<td > Cleaning up allocator_traits </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0177R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0177R2 </td>
		<td > Cleaning up allocator_traits </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0177R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0180R1 </td>
		<td > Reserve a New Library Namespace Future Standardization </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0180R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0185R1 </td>
		<td > Adding [nothrow-]swappable traits, revision 3 </td>
		<td > Daniel Krugler </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0185R0 </td>
		<td > Library </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0188R1 </td>
		<td > Wording for [[fallthrough]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td > P0188R0 </td>
		<td > Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0189R1 </td>
		<td > Wording for [[nodiscard]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td > P0189R0 </td>
		<td > Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0190R1 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm, Jens Maurer </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0190R0 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0191R1 </td>
		<td > C++ virtual member function pointer comparison </td>
		<td > Daniel Markus </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0191R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0193R1 </td>
		<td > Where is Vectorization in C++&#8253; </td>
		<td > JF Bastien, Hans Boehm </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0193R0 </td>
		<td > Concurrency, SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0206R1 </td>
		<td > A joining thread </td>
		<td > Ville Voutilainen </td>
		<td > 2016-03-09 </td>
		<td > 2016-03 </td>
		<td > P0206R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0212R1 </td>
		<td > Wording for [[maybe_unused]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0212R0 </td>
		<td > Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0217R1 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0217R0 </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0218R1 </td>
		<td > Adopt File System TS for C++17 </td>
		<td > Beman Dawes </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td > P0218R0 </td>
		<td > Library, File System </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0220R1 </td>
		<td > Adopt Library Fundamentals V1 TS Components for C++17 (R1) </td>
		<td > Beman Dawes </td>
		<td > 2016-03-03 </td>
		<td > 2016-03 </td>
		<td > P0220R0 </td>
		<td > Library, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0221R1 </td>
		<td > Proposed wording for default comparisons, revision 3 </td>
		<td > Jens Maurer </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td > P0221R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0226R1 </td>
		<td > Mathematical Special Functions for C++17, v5 </td>
		<td > Walter E. Brown, Axel Naumann, Edward Smith-Rowland  </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td > P0226R0 </td>
		<td > Library, Library Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0244R1 </td>
		<td > Text_view: A C++ concepts and range based character encoding
and code point enumeration library </td>
		<td > Tom Honermann </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0244R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0245R1 </td>
		<td > Hexadecimal float literals for C++ </td>
		<td > Thomas Koeppe </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0245R0 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0250R1 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046) </td>
		<td > Hans Boehm </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0250R0 </td>
		<td > Concurrency, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0253R1 </td>
		<td > Fixing a design mistake in the searchers
interface in Library Fundamentals </td>
		<td > Marshall Clow </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0253R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0254R0 </td>
		<td > Integrating std::string_view and
std::string </td>
		<td > Marshall Clow </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0258R1 </td>
		<td > is_contiguous_layout </td>
		<td > Michael Spencer </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td > P0258R0 </td>
		<td > Library, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0263R1 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the February, 2016 (Jacksonville) Meeting </td>
		<td > William M. Miller </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0263R0 </td>
		<td > WG21 </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0267R1 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0267R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0272R1 </td>
		<td > Give 'std::string' a non-const '.data()' member function </td>
		<td > David Sankel </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0272R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0275R0 </td>
		<td > A Proposal to add Classes and Functions Required for Dynamic Library Load </td>
		<td > Antony Polukhin </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0276R0 </td>
		<td > A Proposal to add Attribute [[visible]] </td>
		<td > Antony Polukhin </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0277R1 </td>
		<td > const Inheritance </td>
		<td > David Wilson  </td>
		<td > 2016-02-22 </td>
		<td > 2016-03 </td>
		<td > P0277R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0283R1 </td>
		<td > Standard and non-standard attributes </td>
		<td > J. Daniel Garcia </td>
		<td > 2016-03-15 </td>
		<td > 2016-03 </td>
		<td > P0283R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0290R0 </td>
		<td > apply() for synchronized_value&lt;T> </td>
		<td > Anthony Williams  </td>
		<td > 2016-02-19 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0292R0 </td>
		<td > constexpr if: A slightly different syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0295R0 </td>
		<td > Adopt Selected Library Fundamentals V2 Components for C++17 </td>
		<td > Walter E. Brown </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0296R0 </td>
		<td > Forward progress guarantees: Base definitions </td>
		<td > Torvald Riegel </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0299R0 </td>
		<td > Forward progress guarantees for the Parallelism TS v2 </td>
		<td > Torvald Riegel </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0301R0 </td>
		<td > Wording for Unified Call Syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0301R1 </td>
		<td > Wording for Unified Call Syntax (revision 1) </td>
		<td > Jens Maurer </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0301R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0302R0 </td>
		<td > Deprecating Allocator Support in std::function </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0304R0 </td>
		<td > C++ Standard Library Issues Resolved Directly In Jacksonville </td>
		<td > Marshall Clow </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0305R0 </td>
		<td > If statement with initializer </td>
		<td > Thomas Koeppe </td>
		<td > 2016-03-14 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0306R0 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution, Core, WG14 liason </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0308R0 </td>
		<td > Valueless Variants Considered Harmful </td>
		<td > Peter Dimov </td>
		<td > 2016-03-16 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0309R0 </td>
		<td > Partial class </td>
		<td > Daniele Bordes, Markus Hosch </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0310R0 </td>
		<td > Splitting node and array allocation in allocators </td>
		<td > Marcelo Zimbres </td>
		<td > 2016-03-19 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0311R0 </td>
		<td > A Unified Vision for Manipulating Tuple-like Objects </td>
		<td > Matthew Woehlke </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0312R0 </td>
		<td > Make Pointers to Members Callable </td>
		<td > Barry Revzin </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0313R0 </td>
		<td > Comparison operators in fold-expressions </td>
		<td > Ville Voutilainen </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>


<!-- end post-Jacksonville -->

        <tr>
            <th colspan="8">2016-06 pre-Oulu</th>
        </tr>

<!-- begin pre-Oulu -->

	<tr >
		<td > N4590 </td>
		<td > PL22.16/WG21 draft agenda: 20-25 Jun 2016, Oulu, FI </td>
		<td > Clark Nelson </td>
		<td > 2016-04-07 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4591 </td>
		<td > WG21 telecon meeting: Pre-Oulu </td>
		<td > Herb Sutter </td>
		<td > 2016-05-19 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4592 </td>
		<td > Modules TS Working Draft </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4593 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4594 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0009R2 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0009R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0023R0 </td>
		<td > Relocator: Efficiently moving objects </td>
		<td > Denis Bider </td>
		<td > 2016-04-08 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0032R2 </td>
		<td > Homogeneous interface for variant, any and optional
(Revision 2) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-03-13 </td>
		<td > 2016-06 </td>
		<td > P0032R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0035R3 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0035R2 </td>
		<td > Core, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R2 </td>
		<td > Fixed-point real numbers </td>
		<td > John McFarlane </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0037R1 </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0040R2 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0040R1 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R4 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0057R3 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0062R1 </td>
		<td > When should compilers optimize atomics? </td>
		<td > Hans Boehm, JF Bastien, Peter Dimov, Hal Finkel, Paul McKenney, Michael Wong, Jeffrey Yasskin </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0062R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0067R2 </td>
		<td > Elementary string conversions, revision 2 </td>
		<td > Jens Maurer </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0067R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0073R2 </td>
		<td > On unifying the coroutines and resumable
functions proposals </td>
		<td > Torvald Riegel </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0073R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R2 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0076R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0084R1 </td>
		<td > Emplace Return Type (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0084R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0091R2 </td>
		<td > Template argument deduction for class templates (Rev. 5) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0091R1 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0095R1 </td>
		<td > Pattern Matching and Language Variants </td>
		<td > David Sankel </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0095R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0096R3 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2016-04-29 </td>
		<td > 2016-06 </td>
		<td > P0096R2 </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0108R1 </td>
		<td > Skeleton Proposal for Thread-Local Storage (TLS) </td>
		<td > Paul E. McKenney, JF Bastien </td>
		<td > 2016-04-14 </td>
		<td > 2016-06 </td>
		<td > P0108R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0119R2 </td>
		<td > Overload sets as function arguments </td>
		<td > Andrew Sutton </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0119R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R2 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0122R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0123R2 </td>
		<td > string_span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0123R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0141R0 </td>
		<td > Modules, Componentization, and Transitional Paths </td>
		<td > Gabriel Dos Reis,  Pavel Curtis </td>
		<td > 2015-10-05 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Modules </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0145R2 </td>
		<td > Refining Expression Evaluation Order for Idiomatic C++ </td>
		<td > Gabriel Dos Reis,  Herb Sutter, Jonathan Caves </td>
		<td > 2016-03-03 </td>
		<td > 2016-06 </td>
		<td > P0145R1 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R2 </td>
		<td > C++ Standard Library Issues to be moved in Oulu </td>
		<td > Marshall Clow </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0165R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0190R2 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm,
Jens Maurer, Jeffrey Yasskin, JF Bastien </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td > P0190R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R1 </td>
		<td > Static reflection</td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann </td>
		<td > 2016-05-17 </td>
		<td > 2016-06 </td>
		<td > P0194R0 </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R1 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td > P0196R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0202R1 </td>
		<td > Add Constexpr Modifiers to Functions in &lt;algorithm> and &lt;cstring> Headers </td>
		<td > Antony Polukhin </td>
		<td > 2016-05-21 </td>
		<td > 2016-06 </td>
		<td > P0202R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0209R1 </td>
		<td > make_from_tuple: apply for construction </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0209R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0211R1 </td>
		<td > Allocator-aware library wrappers for dynamic allocation </td>
		<td > Thomas Koeppe </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0211R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R1 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0214R0 </td>
		<td > Library evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0217R2 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0217R1 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R1 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0233R0 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R1 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0237R0 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0252R1 </td>
		<td > Operator Dot Wording </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-03-02 </td>
		<td > 2016-06 </td>
		<td > P0252R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0254R1 </td>
		<td > Integrating std::string_view and std::string </td>
		<td > Marshall Clow </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0254R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0257R1 </td>
		<td > A byte type for increased type safety </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0257R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0292R1 </td>
		<td > constexpr if: A slightly different syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0292R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0296R1 </td>
		<td > Forward progress guarantees: Base definitions </td>
		<td > Torvald Riegel </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0296R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0298R0 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0306R1 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2016-05-08 </td>
		<td > 2016-06 </td>
		<td > P0306R0 </td>
		<td > Evolution, Core, WG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0307R0 </td>
		<td > Making Optional Greater Equal Again </td>
		<td > Tony Van Eerd </td>
		<td > 2016-03-15 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0315R0 </td>
		<td > Lambdas in unevaluated context </td>
		<td > Louis Dionne </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0317R0 </td>
		<td > Directory Entry Caching for Filesystem </td>
		<td > Beman Dawes </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0318R0 </td>
		<td > decay_unwrap and unwrap_reference </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0319R0 </td>
		<td > Adding Emplace functions for
promise&lt;T>/future&lt;T> </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0320R0 </td>
		<td > Thread Constructor Attributes </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0322R0 </td>
		<td > exception_list </td>
		<td > Bryce Adelstein Lelbach, Alisdair Meredith, Jared Hoberock </td>
		<td > 2016-04-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution. Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R0 </td>
		<td > A proposal to add a utility class to represent expected monad (Revision 2) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0324R0 </td>
		<td > One Concept Definition Syntax </td>
		<td > Zhihao Yuan </td>
		<td > 2016-05-04 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0325R0 </td>
		<td > Propose to adopt make_array in C++17 </td>
		<td > Zhihao Yuan </td>
		<td > 2016-03-31 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0326R0 </td>
		<td > Structured binding: customization point issues </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0327R0 </td>
		<td > Product types access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, Reflection, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0329R0 </td>
		<td > Designated Initialization </td>
		<td > Tim Shen, Richard Smith, Zhihao Yuan, Chandler Carruth </td>
		<td > 2016-05-09 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0330R0 </td>
		<td > User-Defined Literals for size_t </td>
		<td > Rein Halbersma </td>
		<td > 2016-05-15 </td>
		<td > 2016-06 </td>
		<td > N4254 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0331R0 </td>
		<td > Motivation and Examples for Multidimensional Array </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0332R0 </td>
		<td > Relaxed Incomplete Multidimensional Array Type Declaration </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0333R0 </td>
		<td > Improving Parallel Algorithm Exception Handling </td>
		<td > Bryce Lelbach </td>
		<td > 2016-05-15 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0334R0 </td>
		<td > Immutable Persistent Containers </td>
		<td > Bryce Lelbach </td>
		<td > 2016-04-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0335R0 </td>
		<td > Context Tokens for Parallel Algorithms </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0336R0 </td>
		<td > Better Names for Parallel Execution Policies in C++17 </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0337R0 </td>
		<td > Delete operator= for polymorphic_allocator </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0338R0 </td>
		<td > C++ generic factories </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R0 </td>
		<td > polymorphic_allocator&lt;void> as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2016-05-31 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0340R0 </td>
		<td > Making std::underlying_type SFINAE-friendly </td>
		<td > R. "Tim" Song </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0341R0 </td>
		<td > parameter packs outside of templates </td>
		<td > Mike Spertus </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0342R0 </td>
		<td > Timing barriers </td>
		<td > Mike Spertus </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0343R0 </td>
		<td > Meta-programming High-Order Functions </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0345R0 </td>
		<td > Allowing any unsigned integral type as parameter type for literal operators </td>
		<td > Michael Dominiak </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0346R0 </td>
		<td > A &lt;random> Nomenclature Tweak </td>
		<td > Walter E. Brown </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0347R0 </td>
		<td > Simplifying simple uses of &lt;random> </td>
		<td > R. "Tim" Song, Melissa O'Neill </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0348R0 </td>
		<td > Validity testing issues </td>
		<td > Andrzej Krzemienski </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0349R0 </td>
		<td > Assumptions about the size of datapar </td>
		<td > Matthias Kretz </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0350R0 </td>
		<td > Integrating datapar with parallel algorithms and executors </td>
		<td > Matthias Kretz </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0352R0 </td>
		<td > Smart References through Delegation: An
Alternative to N4477's Operator Dot </td>
		<td > Hubert Tong, Faisal Vali </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0353R0 </td>
		<td > Unicode Encoding Conversions for the Standard Library </td>
		<td > Beman Dawes </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0354R0 </td>
		<td > default == is >, default &lt; is &lt; so </td>
		<td > Tony Van Eerd </td>
		<td > 2016-05-15 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R0 </td>
		<td > Extending <code>&lt;chrono&gt;</code> to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0356R0 </td>
		<td > Simplified partial function application </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0357R0 </td>
		<td > reference_wrapper for incomplete types </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0358R0 </td>
		<td > Fixes for not_fn </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0359R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2016/02/22-2016/05/23 </td>
		<td > Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Transaction Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0360R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2016/02/17-2015/05/25 </td>
		<td > Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0361R0 </td>
		<td > Invoking Algorithms asynchronously </td>
		<td > Hartmut Kaiser, Thomas Heller, Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0362R0 </td>
		<td > Towards support for Heterogeneous
Devices in C++ (Concurrency aspects) </td>
		<td > Michael Wong, Andrew Richards, Maria Rovatsou, Ruyman Reyes, Lee Howes, Gordon Brown </td>
		<td > 2016-05-23 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14, Concurrency </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0363R0 </td>
		<td > Towards support for Heterogeneous
Devices in C++ (Language aspects) </td>
		<td > Michael Wong, Andrew Richards, Maria Rovatsou, Ruyman Reyes, Lee Howes, Gordon Brown </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0364R0 </td>
		<td > Report on Exception Handling Lite
(Disappointment) from SG14 </td>
		<td > Michael Wong, Sunil Srivastava, Sean Middleditch, Patrice Roy </td>
		<td > 2016-05-23 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14, Concurrency </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0365R0 </td>
		<td > Report on SG14, a year later and future directions </td>
		<td > Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14, Concurrency, Library Evolution, Numerics, Reflection </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0366R0 </td>
		<td > Extending the Transactional Memory Technical Specification with an in_transaction Statemen </td>
		<td > Victor Luchangco, Michael Spear, Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0367R0 </td>
		<td > a C++ standard library class to qualify data accesses </td>
		<td > Ronan Keryell, Jo&euml;l Falcou </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, SG14, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0369R0 </td>
		<td > 2017-07 Toronto ISO WG21 C++ Standard Meeting information </td>
		<td > Michael Wong, Botond Ballo, JF Bastien, Hubert Tong, Patrice Roy, Tony Van Eerd,
Duncan Smith </td>
		<td > 2016-05-23 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0370R0 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0371R0 </td>
		<td > Temporarily deprecate memory_order_consume </td>
		<td > Hans Boehm </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0372R0 </td>
		<td > A type for utf-8 data </td>
		<td > Michael Spencer, Davide C. C. Italiano </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0373R0 </td>
		<td > Proposal of File Literals </td>
		<td > Andrew Tomazos </td>
		<td > 2016-05-21 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0374R0 </td>
		<td > Stream parallelism patterns </td>
		<td > J. Daniel Garcia, David del Rio, Manuel F. Dolz, Javier Garcia-Blas, Luis M. Sanchez, Marco Danelutto, Massimo Torquati </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0375R0 </td>
		<td > [[exhaustive]] attribute for enums </td>
		<td > David Sankel </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0376R0 </td>
		<td > A Single Generalization of std::invoke, std::apply, and std::visit </td>
		<td > Matt Calabrese </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0377R0 </td>
		<td > std::integral_constant with a Deduced Value Type </td>
		<td > Matt Calabrese </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0379R0 </td>
		<td > Why a joining thread from P0206 is a Bad Idea </td>
		<td > Detlef Vollman </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0380R0 </td>
		<td > A Contract Design </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0381R0 </td>
		<td > Numeric Width </td>
		<td > John McFarlane </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0382R0 </td>
		<td > Comments on P0119: Overload sets as function arguments </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0384R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the June, 2016 (Oulu) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0385R0 </td>
		<td > Static reflection: 
Rationale, design and evolution </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0386R0 </td>
		<td > Inline Variables </td>
		<td > Hal Finkel, Richard Smith </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>


<!-- end pre-Oulu -->

        <tr>
            <th colspan="8">2016-07 post-Oulu</th>
        </tr>

<!-- begin post-Oulu -->

	<tr >
		<td > N4595 </td>
		<td > WG21 2016-06-10 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-06-15 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4596 </td>
		<td > PL22.16 Jacksonville Minutes (revised) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-04-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4597 </td>
		<td > WG21 2016-06 Oulu Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4598 </td>
		<td > PL22.16 2016-06 Oulu Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4599 </td>
		<td > 2016-08 LWG Meeting </td>
		<td > Robert Douglas </td>
		<td > 2016-07-02 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4600 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Geoffrey Romer </td>
		<td > 2016-07-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4601 </td>
		<td > Editor's Report for the Library Fundamentals TS </td>
		<td > Geoffrey Romer </td>
		<td > 2016-07-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4602 </td>
		<td > WG21 telecon minutes - pre-Oulu (revised) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4603 </td>
		<td > Editor's Report -- Committee Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-07-12 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4604 </td>
		<td > C++17 CD Ballot Document </td>
		<td > Richard Smith </td>
		<td > 2016-07-12 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4605 </td>
		<td > </td>
		<td > </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4606 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-07-12 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > Revised N4618 </td>
	</tr>


	<tr >
		<td > P0003R3 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0003R2 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0003R4 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-25 </td>
		<td > 2016-07 </td>
		<td > P0003R3 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0028R4 </td>
		<td > Using attribute namespaces without repetition </td>
		<td > J. Daniel Garcia, Daveed Vandevoorde </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0028R3 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0032R3 </td>
		<td > Homogeneous interface for variant, any and optional
(Revision 3) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-24 </td>
		<td > 2016-07 </td>
		<td > P0032R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0035R4 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0035R3 </td>
		<td > Core, Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0040R3 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0040R2 </td>
		<td > Library Evolution, SG14 </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0053R1 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolia Josuttis </td>
		<td > 2015-10-24 </td>
		<td > 2016-07 </td>
		<td > P0053R0 </td>
		<td > Library evolution, Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0053R2 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolia Josuttis </td>
		<td > 2016-07-05 </td>
		<td > 2016-07 </td>
		<td > P0053R1 </td>
		<td > Library evolution, Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R5 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0057R4 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0063R3 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Clark Nelson, Hans Boehm </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0063R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0067R3 </td>
		<td > Elementary string conversions, revision 2 </td>
		<td > Jens Maurer </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0067R2 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0067R4 </td>
		<td > Elementary string conversions, revision 4 </td>
		<td > Jens Maurer </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td > P0067R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R3 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td > P0076R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0083R3 </td>
		<td > Splicing Maps and Sets (Revision 5) </td>
		<td > Alan Talbot, Jonathan Wakely, Howard Hinnant, James Dennett </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0083R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0084R2 </td>
		<td > Emplace Return Type (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0084R1 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0088R3 </td>
		<td > Variant: a type-safe union for C++17 (v8) </td>
		<td > Axel Naumann </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0088R2 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0091R3 </td>
		<td > Template argument deduction for class templates (Rev. 6) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0091R2 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0122R3 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0122R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R2 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri, Boqun Feng </td>
		<td > 2016-06-26 </td>
		<td > 2016-07 </td>
		<td > P0124R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0127R2 </td>
		<td > Declaring non-type template arguments with auto </td>
		<td > James Touton, Mike Spertus </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0127R1 </td>
		<td > Evolution </td>
		<td >  Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0135R1 </td>
		<td > Wording for guaranteed copy elision through simplified value categories </td>
		<td > Richard Smith </td>
		<td > 2016-06-20 </td>
		<td > 2016-07 </td>
		<td > P0135R0 </td>
		<td >  </td>
		<td > Adopted 2016-06  </td>
	</tr>
	<tr >
		<td > P0137R1 </td>
		<td > Core Issue 1776: Replacement of class objects containing reference members </td>
		<td > Richard Smith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0137R0 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0145R3 </td>
		<td > Refining Expression Evaluation Order for Idiomatic C++ </td>
		<td > Gabriel Dos Reis,  Herb Sutter, Jonathan Caves </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0145R2 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0174R2 </td>
		<td > Deprecating Vestigial Library Parts in C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0174R1 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0175R1 </td>
		<td > Synopses for the C library </td>
		<td > Thomas Koeppe, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0175R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0180R2 </td>
		<td > Reserve a New Library Namespace Future Standardization </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0180R1 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0181R1 </td>
		<td > Ordered By Default </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0181R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0192R1 </td>
		<td > Adding a Fundamental Type for Short Float </td>
		<td > Boris Fomitchev, Sergei Nikolaev, Olivier Giroux, Lawrence Crowl </td>
		<td > 2016-02-14 </td>
		<td > 2016-07 </td>
		<td > P0192R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0209R2 </td>
		<td > make_from_tuple: apply for construction </td>
		<td > Pablo Halpern </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0209R1 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0217R3 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0217R2 </td>
		<td > Evolution, Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0219R1 </td>
		<td > Relative Paths for Filesystem </td>
		<td > Beman Dawes </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0219R0 </td>
		<td > Library, File System </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0221R2 </td>
		<td > Proposed wording for default comparisons, revision 4 </td>
		<td > Jens Maurer </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0221R1 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R2 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner, Nathan Myers </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td > P0237R1 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0250R2 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046, 1784) </td>
		<td > Hans Boehm </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0250R1 </td>
		<td > Concurrency, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0254R2 </td>
		<td > Integrating std::string_view and std::string </td>
		<td > Marshall Clow </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0254R1 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0258R2 </td>
		<td > has_unique_object_representations - wording </td>
		<td > Michael Spencer </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0258R1 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0266R1 </td>
		<td > Removing Restrictions on requires-Expressions </td>
		<td > Walter E. Brown </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0266R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R2 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0267R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0270R1 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0270R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0283R2 </td>
		<td > Standard and non-standard attributes </td>
		<td > J. Daniel Garcia </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0283R1 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0292R2 </td>
		<td > constexpr if: A slightly different syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-06-20 </td>
		<td > 2016-07 </td>
		<td > P0292R1 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0296R2 </td>
		<td > Forward progress guarantees: Base definitions </td>
		<td > Torvald Riegel </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0296R1 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0298R1 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0298R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0299R1 </td>
		<td > Forward progress guarantees for the Parallelism TS features </td>
		<td > Torvald Riegel </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0299R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0302R1 </td>
		<td > Removing Allocator Support in std::function (rev 1) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0302R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0304R1 </td>
		<td > C++ Standard Library Issues Resolved Directly In Oulu </td>
		<td > Marshall Clow </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0304R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0305R1 </td>
		<td > Selection statements with initializer </td>
		<td > Thomas Koeppe </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0305R0 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0307R2 </td>
		<td > Making Optional Greater Equal Again </td>
		<td > Tony Van Eerd </td>
		<td > 2016-03-15 </td>
		<td > 2016-07 </td>
		<td > P0307R1 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0314R0 </td>
		<td > Querying the alignment of an object </td>
		<td > Robert Haberlach  </td>
		<td > 2016-03-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0325R1 </td>
		<td > Propose to adopt make_array into the IS </td>
		<td > Zhihao Yuan </td>
		<td > 2016-06-29 </td>
		<td > 2016-07 </td>
		<td > P0325R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0336R1 </td>
		<td > Better Names for Parallel Execution Policies in C++17 </td>
		<td > Pablo Halpern </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0336R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0346R1 </td>
		<td > A &lt;random> Nomenclature Tweak </td>
		<td > Walter E. Brown </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0346R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0358R1 </td>
		<td > Fixes for not_fn </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0358R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0370R1 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-07-05 </td>
		<td > 2016-07 </td>
		<td > P0370R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0371R1 </td>
		<td > Temporarily discourage memory_order_consume </td>
		<td > Hans Boehm </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0371R0 </td>
		<td > Library, Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0380R1 </td>
		<td > A Contract Design </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td > P0380R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0386R2 </td>
		<td > Inline Variables </td>
		<td > Hal Finkel, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0386R1 </td>
		<td >  </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0387R0 </td>
		<td > Memory Model Issues for Concurrent Data Structures </td>
		<td > Hans Boehm </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0388R0 </td>
		<td > Permit conversions to arrays of unknown bound </td>
		<td > Robert Haberlach  </td>
		<td > 2016-06-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0389R0 </td>
		<td > template keyword in unqualified-ids </td>
		<td > Robert Haberlach  </td>
		<td > 2016-06-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0390R0 </td>
		<td > A Proposal to Add Pointer Cast Functions with Move Semantics to
the Standard Library </td>
		<td > Nickolas Pokhylets </td>
		<td > 2016-06-04 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0391R0 </td>
		<td > Introducing the term "templated entity" </td>
		<td > Jens Maurer </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0392R0 </td>
		<td > Adapting string_view by filesystem paths </td>
		<td > Nicolai Josuttis </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0393R3 </td>
		<td > Making Variant Greater Equal </td>
		<td > Tony Van Eerd </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0393R2 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0394R4 </td>
		<td > Hotel Parallelifornia: terminate() for Parallel Algorithms Exception Handling </td>
		<td > JF Bastien, Bryce Adelstein Lelbach </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0394R3 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0396R0 </td>
		<td > C++ Concepts Active Issues List (Snapshot of Revision 4) </td>
		<td > Andrew Sutton </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0397R0 </td>
		<td > C++ Standard Library Priority 1 Issues Resolved Directly In Oulu </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0398R0 </td>
		<td > Core issue 1518: Explicit default constructors and copy-list-initialization </td>
		<td > Jens Maurer </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06  </td>
	</tr>
	<tr >
		<td > P0400R0 </td>
		<td > Wording for Order of Evaluation of Function Arguments </td>
		<td > William M. Miller </td>
		<td > 2016-06-25 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0401R0 </td>
		<td > Extensions to the Allocator interface </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-08 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0404R0 </td>
		<td > Matching Types: 404 Syntax Not found </td>
		<td > Hubert Tong, James Touton </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0405R0 </td>
		<td > Wording for Networking TS changes from Kona </td>
		<td > Jonathan Wakely </td>
		<td > 2016-06-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0407R0 </td>
		<td > Allocator-aware basic stringbuf </td>
		<td > Peter Sommerlad </td>
		<td > 2016-07-05 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0408R0 </td>
		<td > Efficient Access to basic stringbuf's Buffer </td>
		<td > Peter Sommerlad </td>
		<td > 2016-07-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0409R0 </td>
		<td > Allow lambda capture [=, this] </td>
		<td > Thomas Koeppe </td>
		<td > 2016-06-27 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0411R0 </td>
		<td > Separating Library Requirements and Preconditions </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0413R0 </td>
		<td > Updating Parallel Execution Policy Names in the Parallelism TS </td>
		<td > Pablo Halpern </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0414R0 </td>
		<td > Merging shared_ptr changes from Library Fundamentals to C++17 </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0416R0 </td>
		<td > Operator Dot (R3) </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > N4477 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0417R0 </td>
		<td > C++17 should refer to ISO/IEC 10646 2014 instead of 1994 </td>
		<td > Beman Dawes </td>
		<td > 2016-07-13 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>


<!-- end pre-Issaquah -->

        <tr>
            <th colspan="8">2016-10 pre-Issaquah</th>
        </tr>

<!-- begin pre-Issaquah -->

	<tr >
		<td > N4607 </td>
		<td > Toronto Meeting Information </td>
		<td > Michael Wong </td>
		<td > 2016-07-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4608 </td>
		<td > PL22.16/WG21 draft agenda: 7-12 Nov 2016, Issaquah, WA, US </td>
		<td > Clark Nelson </td>
		<td > 2016-07-21 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4609 </td>
		<td > Business Plan and Convener's Report </td>
		<td > Herb Sutter </td>
		<td > 2016-08-11 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4610 </td>
		<td > Working Draft, Extensions to C++ for
Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4611 </td>
		<td > Editor's Report for the Modules TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4612 </td>
		<td > Working Draft, C++ extensions for
Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Revised N4626 </td>
	</tr>
	<tr >
		<td > N4613 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > N4614 </td>
		<td > WG21 telecon meeting: Pre-Issaquah </td>
		<td > Herb Sutter </td>
		<td > 2016-10-01 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0009R3 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0009R2 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0019R3 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0019R2 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0020R3 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0020R2 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0022R2 </td>
		<td > Proxy Iterators for the Ranges Extensions </td>
		<td > Eric Niebler </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0022R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R3 </td>
		<td > Fixed-point real numbers </td>
		<td > John McFarlane, Michael Wong </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0037R2 </td>
		<td > Numerics, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0051R2 </td>
		<td > C++ generic overload function </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0051R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R6 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0057R5 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R2 </td>
		<td > Add rings to the Standard Library </td>
		<td > Guy Davidson, Arthur O'Dwyer, Joe Best-Rotheray </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0059R1 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0098R1 </td>
		<td > Towards Implementation and Use of memory order consume </td>
		<td > Paul E. McKenney, Torvald Riegel, Jeff  Preshing,
Hans Boehm, Clark Nelson, Olivier Giroux, Lawrence Crowl </td>
		<td > 2016-01-04 </td>
		<td > 2016-10 </td>
		<td > P0098R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0099R1 </td>
		<td > A low-level API for stackful context switching </td>
		<td > Oliver Kowalke, Nat Goodspeed </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0099R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R3 </td>
		<td > C++ Standard Library Issues to be moved in Issaquah </td>
		<td > Marshall Clow </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0165R2 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0187R1 </td>
		<td > Proposal/Wording for Bit-field Default
Member Initializer Syntax </td>
		<td > Andrew Tomazos </td>
		<td > 2016-06-28 </td>
		<td > 2016-10 </td>
		<td > P0187R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R2 </td>
		<td > Static reflection </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0194R1 </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0195R1 </td>
		<td > Modernizing using-declarations </td>
		<td > Robert Haberlach </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0195R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R2 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0196R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0201R1 </td>
		<td > An indirect value-type for C++ </td>
		<td > Jonathan Coe </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0201R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R2 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0214R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R2 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong, Paul McKenney, Arthur O'Dwyer </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0233R1 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R3 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0237R2 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0249R2 </td>
		<td > Input Devices For 2D Graphics </td>
		<td > Brett Searles, Michael McLaughlin, Jason Zink </td>
		<td > 2016-10-07 </td>
		<td > 2016-10 </td>
		<td > P0249R1 </td>
		<td > SG13 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0252R2 </td>
		<td > Operator Dot Wording </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0252R1 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0261R1 </td>
		<td > C++ Distributed Counters </td>
		<td > Lawrence Crowl </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0261R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0262R1 </td>
		<td > A Class for Status and Optional Value </td>
		<td > Lawrence Crowl, Chris Mysen </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0262R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0273R1 </td>
		<td > Proposed modules changes from implementation and deployment experience </td>
		<td > Richard Smith, Chandler Carruth, David Jones </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0273R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0279R1 </td>
		<td > Read-Copy Update (RCU) for C++ </td>
		<td > Paul E. McKenney </td>
		<td > 2016-08-25 </td>
		<td > 2016-10 </td>
		<td > P0279R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0290R1 </td>
		<td > apply() for synchronized_value&lt;T> </td>
		<td > Anthony Williams  </td>
		<td > 2016-06-23 </td>
		<td > 2016-10 </td>
		<td > P0290R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0293R0 </td>
		<td > Template deduction for nested classes </td>
		<td > S. Davis Herring </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0315R1 </td>
		<td > Lambdas in unevaluated context </td>
		<td > Louis Dionne </td>
		<td > 2016-08-01 </td>
		<td > 2016-10 </td>
		<td > P0315R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0317R1 </td>
		<td > Directory Entry Caching for Filesystem </td>
		<td > Beman Dawes </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0317R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0320R1 </td>
		<td > Thread Constructor Attributes </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0320R0 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R1 </td>
		<td > A proposal to add a utility class to represent expected object (Revision 3) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0323R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0327R1 </td>
		<td > Product types access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0327R0 </td>
		<td > Evolution, Reflection, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0329R1 </td>
		<td > Designated Initialization Wording </td>
		<td > Tim Shen, Richard Smith </td>
		<td > 2016-09-26 </td>
		<td > 2016-10 </td>
		<td > P0329R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0338R1 </td>
		<td > C++ generic factories </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0338R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R1 </td>
		<td > polymorphic_allocator&lt;void> as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0339R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0347R1 </td>
		<td > Simplifying simple uses of &lt;random> </td>
		<td > R. "Tim" Song, Melissa O'Neill </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0347R0 </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0353R1 </td>
		<td > Unicode Friendly Encoding Conversions for the Standard Library </td>
		<td > Beman Dawes </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0353R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R1 </td>
		<td > Extending &lt;code>&lt;chrono&gt;&lt;/code> to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0355R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0356R1 </td>
		<td > Simplified partial function application </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0356R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0357R1 </td>
		<td > reference_wrapper for incomplete types </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-09-29 </td>
		<td > 2016-10 </td>
		<td > P0357R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0361R1 </td>
		<td > Invoking Algorithms asynchronously </td>
		<td > Hartmut Kaiser, Thomas Heller, Bryce Adelstein Lelbach, John Biddiscombe, Michael Wong </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0361R0 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0370R2 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0370R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0381R1 </td>
		<td > Numeric Width </td>
		<td > John McFarlane, Michael Wong </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0381R0 </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0385R1 </td>
		<td > Static reflection: 
Rationale, design and evolution </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0385R0 </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0403R0 </td>
		<td > Literal suffixes for basic_string_view </td>
		<td > Marshall Clow </td>
		<td > 2016-09-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0406R1 </td>
		<td > Intrusive Containers </td>
		<td > Hal Finkel </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0406R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0409R1 </td>
		<td > Allow lambda capture [=, this] </td>
		<td > Thomas Koeppe </td>
		<td > 2016-10-11 </td>
		<td > 2016-10 </td>
		<td > P0409R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0412R0 </td>
		<td > Benchmarking primitives </td>
		<td > Mikhail Maltsev </td>
		<td > 2016-07-05 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0414R1 </td>
		<td > Merging shared_ptr changes from Library Fundamentals to C++17 </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-06 </td>
		<td > 2016-10 </td>
		<td > P0414R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0415R0 </td>
		<td > Constexpr for std::complex </td>
		<td > Antony Polukhin </td>
		<td > 2016-08-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0416R1 </td>
		<td > Operator Dot (R3) </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0416R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0418R1 </td>
		<td > Fail or succeed: there is no atomic lattice </td>
		<td > JF Bastien </td>
		<td > 2016-08-02 </td>
		<td > 2016-10 </td>
		<td > P0418R0 </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0421R0 </td>
		<td > Static class constructor </td>
		<td > Mariusz Moczala </td>
		<td > 2016-09-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0422R0 </td>
		<td > Out-of-Thin-Air Execution is Vacuous </td>
		<td > Paul E. McKenney, Alan Jeffrey, Ali Sezgin, Tony Tye </td>
		<td > 2016-07-27 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0423R0 </td>
		<td > Variable templates for Networking TS traits </td>
		<td > Jonathan Wakely </td>
		<td > 2016-08-04 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0424R0 </td>
		<td > Reconsidering literal operator templates for strings </td>
		<td > Louis Dionne </td>
		<td > 2016-08-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0426R0 </td>
		<td > Constexpr for std::char_traits </td>
		<td > Antony Polukhin </td>
		<td > 2016-08-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0428R0 </td>
		<td > Familiar template syntax for generic lambdas </td>
		<td > Louis Dionne </td>
		<td > 2016-09-08 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0429R0 </td>
		<td > A Standard flat_map </td>
		<td > Zach Laine </td>
		<td > 2016-08-31 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0430R0 </td>
		<td > File system library on non-POSIX-like operating systems </td>
		<td > Jason Liu, Hubert Tong </td>
		<td > 2016-09-12 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0432R0 </td>
		<td > Implicit and Explicit Default Comparison Operators </td>
		<td > David Stone </td>
		<td > 2016-09-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0433R0 </td>
		<td > Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library </td>
		<td > Mike Spertus, Walter E. Brown </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0434R0 </td>
		<td > Portable Interrupt Library </td>
		<td > Brett Searies </td>
		<td > 2016-10-09 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG13 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0435R0 </td>
		<td > Resolving LWG Issues re common_type </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0436R0 </td>
		<td > An Extensible Approach to Obtaining Selected Operators </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0437R0 </td>
		<td > Numeric Traits for the Next Standard Library </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0438R0 </td>
		<td > Toward a &lt;random> Technical Specification </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-05 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0439R0 </td>
		<td > Make memory_order a scoped
enumeration </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-06 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0440R0 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0441R0 </td>
		<td > Ranges: Merging Writable and MoveWritable </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0443R0 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0444R0 </td>
		<td > Unifying suspend-by-call and suspend-by-return </td>
		<td > Nat Goodspeed </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0445R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2016/09/21-2016/10/13 </td>
		<td > Michael Wong </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0446R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2016/07/18-2016/10/10 </td>
		<td > Michael Wong </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG5 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0447R0 </td>
		<td > Introduction of std::colony to the standard library </td>
		<td > Matthew Bentley </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0448R0 </td>
		<td > A strstream replacement using span&lt;charT> as </td>
		<td > Peter Sommerlad </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0451R0 </td>
		<td > Future-Proofing Parallel Algorithms Exception Handling </td>
		<td > Bryce Adelstein Lelbach, Alisdair Meredith </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0452R0 </td>
		<td > Binary transform_reduce(): The Missing Overload </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0454R0 </td>
		<td > Wording for a Minimal mdspan </td>
		<td > Bryce Adelstein Lelbach, H. Carter Edwards </td>
		<td > 2016-10-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0457R0 </td>
		<td > String Prefix and Suffix Checking </td>
		<td > Mikhail Maltsev </td>
		<td > 2016-10-09 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0458R0 </td>
		<td > Checking for Existence of an Element in Associative Containers </td>
		<td > Mikhail Maltsev </td>
		<td > 2016-10-09 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0459R0 </td>
		<td > C++ Extensions for Ranges,
Speculative Combined Proposal Document </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0460R0 </td>
		<td > Flat containers wording </td>
		<td > Sean Middleditch </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0461R0 </td>
		<td > Proposed RCU C++ API </td>
		<td > Paul E. McKenney, Maged Michael, Michael Wong, Isabella Muerte, Arthur O'Dwyer </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0462R0 </td>
		<td > Marking memory order consume Dependency Chains </td>
		<td > Hans Boehm, Clark Nelson, Olivier Giroux, Lawrence Crowl, JF Bastien, Micheal Wong </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0463R0 </td>
		<td > endian, Just endian </td>
		<td > Howard Hinnant </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0464R0 </td>
		<td > Revisiting the meaning of "foo(ConceptName,ConceptName)" </td>
		<td > Tony Van Eerd, Botond Ballo  </td>
		<td > 2016-10-11 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0465R0 </td>
		<td > Procedural Function Interfaces </td>
		<td > Lisa Lippincott </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0466R0 </td>
		<td > Layout-compatibility and Pointer-interconvertibility Traits </td>
		<td > Lisa Lippincott </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0467R0 </td>
		<td > Iterator Concerns for Parallel Algorithms </td>
		<td > Alisdair Meredith </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0468R0 </td>
		<td > A Proposal to Add an Intrusive Smart Pointer to the C++ Standard Library </td>
		<td > Isabella Muerte </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0469R0 </td>
		<td > Sample in place </td>
		<td > R. "Tim" Song </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0471R0 </td>
		<td > Single argument std::inserter </td>
		<td > David Sankel </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0472R0 </td>
		<td > Move 'std::monostate' to &lt;utility> </td>
		<td > David Sankel </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0473R0 </td>
		<td > + for std::vector concatenation </td>
		<td > David Sankel </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0474R0 </td>
		<td > Comparison in C++: Basic Facilities </td>
		<td > Lawrence Crowl </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0475R0 </td>
		<td > LWG 2511: guaranteed copy elision for piecewise construction </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0476R0 </td>
		<td > Bit-casting object representations </td>
		<td > JF Bastien </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0477R0 </td>
		<td > std::monostate_function&lt;> </td>
		<td > Matt Calabrese </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0478R0 </td>
		<td > Template argument deduction for non-terminal function parameter packs </td>
		<td > Bruno Manganelli, Michael Wong, Simon Brand </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0479R0 </td>
		<td > Attributes for Likely and Unlikely Branches </td>
		<td > Clay Trychta  </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0480R0 </td>
		<td > Explicit type checking with structured bindings </td>
		<td > Ville Voutilainen </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0481R0 </td>
		<td > Bravely Default </td>
		<td > Tony Van Eerd </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0482R0 </td>
		<td > char8_t: A type for UTF-8 characters and strings </td>
		<td > Tom Honermann </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0483R0 </td>
		<td > Extending Memory Management Tools, And a Bit More </td>
		<td > Patrice Roy </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0484R0 </td>
		<td > Enhancing Thread Constructor Attributes </td>
		<td > Patrice Roy, Billy Baker, Arthur O'Dwyer </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0485R0 </td>
		<td > Amended rules for Partial Ordering of function templates </td>
		<td > Bruno Manganelli, Michael Wong, Simon Brand </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0486R0 </td>
		<td > for_each_iter algorithm proposal </td>
		<td > Ildus Nezametdinov, Patrice Roy, </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0487R0 </td>
		<td > Fixing operator>> (basic_istream&, CharT*) (LWG 2499) </td>
		<td > Zhihao Yuan </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
 	<tr >
		<td > P0488R0 </td>
		<td > WG21 Working paper: NB Comments, ISO/IEC CD 14882 </td>
		<td > Barry Hedquist </td>
		<td > 2016-10-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
 	<tr >
		<td > P0489R0 </td>
		<td > WG21 Working paper: Late Comments on CD 14882 </td>
		<td > Barry Hedquist </td>
		<td > 2016-10-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>


<!-- end pre-Issaquah -->


        <tr>
            <th colspan="8">2016-11 post-Issaquah</th>
        </tr>

<!-- begin post-Issaquah -->

	<tr >
		<td > N4615 </td>
		<td > WG21 2016-10-28 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4616 </td>
		<td > Response to NB Comments: SC22 N5097, ISO/IEC PDTS 19568 Part 2, Library Fundamentals, Part 2 </td>
		<td > Barry Hedquist </td>
		<td > 2016-11-12 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4617 </td>
		<td > Programming Languages -- C++ Extensions for Library Fundamentals,
Version 2 DTS </td>
		<td > Geoffrey Romer </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4618 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > N4606 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4619 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4620 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4621 </td>
		<td > Editor's Report for the Ranges TS </td>
		<td > Casey Carter </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4622 </td>
		<td > Programming Languages -- C++ Extensions for Ranges PDTS </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4623 </td>
		<td > WG21 2016-11 Issaquah Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4624 </td>
		<td > PL22.16 2016-11 Issaquah Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4625 </td>
		<td > Programming Languages -- C++ Extensions for Networking PDTS </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4626 </td>
		<td > Working Draft, C++ Extensions for
Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > N4612 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4627 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4628 </td>
		<td > Working Draft, Technical Specification on C++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4629 </td>
		<td > Editor's report for the Coroutines TS </td>
		<td > Gor Nishanov </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4630 </td>
		<td > Working Draft, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > N4549 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4631 </td>
		<td > Editor's report for the Concepts TS </td>
		<td > Andrew Sutton </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0003R5 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0003R4 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0019R4 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0019R3 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0020R4 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0020R3 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0053R3 </td>
		<td > DRAFT C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolia Josuttis </td>
		<td > 2016-11-12 </td>
		<td > 2016-11 </td>
		<td > P0053R2 </td>
		<td > Library Evolution, Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0057R7 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0057R6 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0067R5 </td>
		<td > Elementary string conversions, revision 5 </td>
		<td > Jens Maurer </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0067R4 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0100R2 </td>
		<td > Comparison in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td > P0100R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0156R1 </td>
		<td > Variadic lock_guard (Rev. 4) </td>
		<td > Mike Spertus </td>
		<td > 2016-10-21 </td>
		<td > 2016-11 </td>
		<td > P0156R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0195R2 </td>
		<td > Pack expansions in using-declarations </td>
		<td > Robert Haberlach, Richard Smith </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td > P0195R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0237R4 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > P0237R3 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0266R2 </td>
		<td > Lifting Restrictions on requires-Expressions </td>
		<td > Walter E. Brown </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td > P0266R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0270R2 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td > P0270R1 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0298R2 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0298R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0304R1 </td>
		<td > C++ Standard Library Issues Resolved Directly In Issaquah </td>
		<td > Marshall Clow </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0304R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0306R2 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td > P0306R1 </td>
		<td > Evolution, Core, WG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0329R2 </td>
		<td > Designated Initialization Wording </td>
		<td > Tim Shen, Richard Smith </td>
		<td > 2016-11-21 </td>
		<td > 2016-11 </td>
		<td > P0329R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0370R3 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-11-17 </td>
		<td > 2016-11 </td>
		<td > P0370R2 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0403R1 </td>
		<td > Literal suffixes for basic_string_view </td>
		<td > Marshall Clow </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0403R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0414R2 </td>
		<td > Merging shared_ptr changes from Library Fundamentals to C++17 </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td > P0414R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0417R1 </td>
		<td > C++17 should refer to ISO/IEC 10646 2014 instead of 1994 (R1) </td>
		<td > Beman Dawes </td>
		<td > 2016-11-25 </td>
		<td > 2016-11 </td>
		<td > P0417R0 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0418R2 </td>
		<td > Fail or succeed: there is no atomic lattice </td>
		<td > JF Bastien </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0418R1 </td>
		<td > Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0426R1 </td>
		<td > Constexpr for std::char_traits </td>
		<td > Antony Polukhin </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td > P0426R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0430R1 </td>
		<td > File system library on non-POSIX-like operating systems </td>
		<td > Jason Liu, Hubert Tong </td>
		<td > 2016-11-24 </td>
		<td > 2016-11 </td>
		<td > P0430R0 </td>
		<td > Library, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0431R0 </td>
		<td > Correcting Evaluation Order for C++ </td>
		<td > Hyman Rosen </td>
		<td > 2016-09-14 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0435R1 </td>
		<td > Resolving LWG Issues re common_type </td>
		<td > Walter E. Brown </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0435R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0436R1 </td>
		<td > An Extensible Approach to Obtaining Selected Operators </td>
		<td > Walter E. Brown </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0436R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0440R1 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0440R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0441R1 </td>
		<td > Ranges: Merging Writable and MoveWritable </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-11-17 </td>
		<td > 2016-11 </td>
		<td > P0441R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0464R1 </td>
		<td > Revisiting the meaning of "foo(ConceptName,ConceptName)" </td>
		<td > Tony Van Eerd, Botond Ballo  </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td > P0464R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0476R1 </td>
		<td > Bit-casting object representations </td>
		<td > JF Bastien </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0476R0 </td>
		<td > Library Evolution, Library, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0490R0 </td>
		<td > Core language changes addressing National Body comments for CD C++17 </td>
		<td > Jens Maurer </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0492R0 </td>
		<td > Proposed Resolution of C++17 National Body Comments for Filesystem </td>
		<td > Beman Dawes, S. Davis Herring, Nicolai Josuttis, Jason Liu, Billy O'Neal, P.J. Plauger, Jonathan Wakely </td>
		<td > 2016-11-26 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0493R0 </td>
		<td > Atomic maximum/minimum </td>
		<td > Al Grant, Bronek Kozicki </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0494R0 </td>
		<td > contiguous_container proposal </td>
		<td > Ildus Nezametdinov </td>
		<td > 2016-11-05 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0495R0 </td>
		<td > Concurrency Safety in C++ Data Structures </td>
		<td > Lawrence Crowl </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0497R0 </td>
		<td > Fixes to shared_ptr support for arrays </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0500R0 </td>
		<td > Resolved Module TS (N4610) Issues </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0502R0 </td>
		<td > Throwing out of a parallel algorithm terminates--but how? </td>
		<td > JF Bastien, Bryce Adelstein Lelbach, H. Carter Edwards </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0503R0 </td>
		<td > Correcting library usage of "literal type" </td>
		<td > Erich Keane </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0504R0 </td>
		<td > Revisiting in-place tag types for any/optional/variant </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0505R0 </td>
		<td > Wording for GB 50 </td>
		<td > Howard Hinnant </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0507R0 </td>
		<td > Core Issue 1343: Sequencing of non-class initialization </td>
		<td > Jens Maurer </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0508R0 </td>
		<td > Wording for GB 58 </td>
		<td > Howard Hinnant </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0509R1 </td>
		<td > Updating "Restrictions on exception handling" </td>
		<td > James Dennett </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0510R0 </td>
		<td > Disallowing references, incomplete types, arrays, and empty variants </td>
		<td > Erich Keane </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0511R0 </td>
		<td > Deduction guide for std::array </td>
		<td > Zhihao Yuan </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0512R0 </td>
		<td > Class Template Argument Deduction
Assorted NB resolution and issues </td>
		<td > Mike Spertus, Richard Smith, Faisal Vali </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0513R0 </td>
		<td > Poisoning the Hash </td>
		<td > Lisa Lippincott </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0514R0 </td>
		<td > Enhancing std::atomic_flag for waiting </td>
		<td > Olivier Giroux </td>
		<td > 2016-11-15 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0516R0 </td>
		<td > Clarify That shared_future's Copy Operations have Wide Contracts </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0517R0 </td>
		<td > Make future_error Constructible </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0519R0 </td>
		<td > Core Language Working Group "ready" Issues for the November, 2016 (Issaquah) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0520R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the November, 2016 (Issaquah) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0521R0 </td>
		<td > Proposed Resolution for CA 14 (shared_ptr use_count/unique) </td>
		<td > Stephan T. Lavavej </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0522R0 </td>
		<td > DR: Matching of template template-arguments excludes compatible templates </td>
		<td > James Touton, Hubert Tong </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0523R0 </td>
		<td > Wording for CH 10: Complexity of parallel algorithms </td>
		<td > Detlef Vollmann </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0528R0 </td>
		<td > The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </td>
		<td > JF Bastien, Michael Spencer </td>
		<td > 2016-11-12 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0529R0 </td>
		<td > Wording changes for proposed
Modules TS extensions </td>
		<td > Richard Smith </td>
		<td > 2016-11-23 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>



<!-- end post-Issaquah -->

        <!--
		<tr style="display: none">
			<th colspan="8">After the pre-meeting mailing: Minutes for the next meeting</th>
		</tr>
		-->
    </table>
</body>
</html>
