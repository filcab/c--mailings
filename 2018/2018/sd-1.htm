<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
    "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us">
<head>
    <meta http-equiv="content-type" content="text/html; charset=us-ascii" />
    <title>SD-1: 2018 PL22.16/WG21 Document List</title>
</head>
<body>
    <table border="1" summary="This table provides identifying information for this document.">
        <tr>
            <th>Doc. No.:</th>
            <td>WG21/SD-1</td>
        </tr>
        <tr>
            <th>Date:</th>
            <td>2018-05-07</td>
        </tr>
        <tr>
            <th>Reply to:</th>
            <td>Hal Finkel</td>
        </tr>
        <tr>
            <th>Email:</th>
            <td>hfinkel@anl.gov</td>
        </tr>
        <tr>
            <th>Title:</th>
            <td>2018 PL22.16/WG21 document list</td>
        </tr>
    </table>
    <h1>2018 PL22.16/WG21 document list</h1>
    <p>Accredited Standards Committee*<br />
        INCITS, InterNational Committee for Information Technology Standards<br />
        *Operating under the procedures of the American National Standards Institute<br />
        INCITS Secretariat, Information Technology Industry Council (ITI)<br />
        110 K Street NW, Suite 610; Washington DC 20005<br />
        Telephone 202-737-8888; Fax 202-638-4922;<br />
        Email: <a href="mailto:incits@incits.org">INCITS@itic.org</a></p>
    <p>This table lists all C++ committee documents for 2016, 2017, and 2018. Each document is
		identified by its WG21 document number, title, author (or authors) and date. The
		month of the mailing in which the document was distributed is also given. For a
		revised document, the numbers of the previous revision are given. Technical papers
		are classified by working group. Finally, when a technical paper (other than an
		issue list) is revised or formally adopted, an indication is provided.</p>
    <table border="1" summary="See previous paragraph.">
        <tr>
            <th>WG21 Number</th>
            <th>Title</th>
            <th>Author</th>
            <th>Document Date</th>
            <th>Mailing Date</th>
            <th>Previous Version</th>
            <th>Subgroup</th>
            <th>Disposition</th>
        </tr>
        <tr>
            <td>SD-1</td>
            <td>2018 PL22.16/WG21 document list</td>
            <td>Hal Finkel</td>
            <td>2018-05-07</td>
            <td>2018-05</td>
            <td></td>
            <td></td>
            <td></td>
        </tr>

        <tr>
            <th colspan="8">2016-02 pre-Jacksonville</th>
        </tr>
<!-- begin pre-Jacksonville -->

	<tr >
		<td > N4568 </td>
		<td > PL22.16/WG21 draft agenda: 29 Feb-05 Mar 2016, Jacksonville, FL/US </td>
		<td > Clark Nelson </td>
		<td > 2015-12-01 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4569 </td>
		<td > Proposed Ranges TS working draft </td>
		<td > Eric Niebler </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4570 </td>
		<td > Oulu Meeting Information </td>
		<td > Ville Voutilainen </td>
		<td > 2016-01-08 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4571 </td>
		<td > 2016-11 Issaquah meeting information </td>
		<td > Herb Sutter </td>
		<td > 2016-01-21 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4572 </td>
		<td > WG21 telecon meeting: Pre-Jacksonville </td>
		<td > Herb Sutter </td>
		<td > 2016-01-27 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4573 </td>
		<td > 2017-02 Kona WG21 Meeting Information </td>
		<td > Thomas Plum </td>
		<td > 2016-02-02 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4574 </td>
		<td > Withdrawn </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4575 </td>
		<td > Networking TS Working Draft </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4576 </td>
		<td > Networking TS Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4577 </td>
		<td > Technical Specification for C++ Extensions for
Concurrency </td>
		<td > Artur Laksberg </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0003R1 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td > P0003R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0005R3 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej,  Tomasz Kamin&#x301;ski </td>
		<td > 2016-11-10 </td>
		<td > 2016-02 </td>
		<td > P0005R2 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0009R1 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Christian Trott, Juan Alday, Jesse Perla, Mauro Bianco, Robin Maffeo, Ben Sander, Bryce Lelbach </td>
		<td > 2016-02-04 </td>
		<td > 2016-02 </td>
		<td > P0009R0 </td>
		<td > Library Evolution, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0010R0 </td>
		<td > Adding a subsection for
concurrent random number generation in C++17 </td>
		<td > Pattabhi Raman </td>
		<td > 2015-11-25 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0018R2 </td>
		<td > Lambda Capture of *this by Value </td>
		<td > H. Carter Edwards, Daveed Vandevoorde, Christian Trott, Hal Finkel, Jim Reus, Robin Maffeo, Ben Sander </td>
		<td > 2015-11-30 </td>
		<td > 2016-02 </td>
		<td > P0018R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0019R1 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2015-02-04 </td>
		<td > 2016-02 </td>
		<td > P0019R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0020R1 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2015-02-04 </td>
		<td > 2016-02 </td>
		<td > P0020R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0024R1 </td>
		<td > The Parallelism TS Should be Standardized </td>
		<td > Jared Hoberock </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0024R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0028R1 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Luis M. Sanchez, Massimo Torquati, Marco Danelutto,  Peter Sommerlad </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0028R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0033R1 </td>
		<td > Re-enabling shared_from_this (revision 1) </td>
		<td > Jonathan Wakely, Peter Dimov </td>
		<td > 2015-10-24 </td>
		<td > 2016-02 </td>
		<td > P0033R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0035R1 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2015-12-29 </td>
		<td > 2016-02 </td>
		<td > P0035R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R1 </td>
		<td > Fixed point real numbers </td>
		<td > John McFarlane </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0037R0 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0040R1 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2016-01-10 </td>
		<td > 2016-02 </td>
		<td > P0040R0 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0046R1 </td>
		<td > Change is_transparent to metafunction </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-01-30 </td>
		<td > 2016-02 </td>
		<td > P0046R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0052R1 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0052R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0055R1 </td>
		<td > On Interactions Between Coroutines and Networking Library </td>
		<td > Gor Nishanov </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0055R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R2 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0057R1 </td>
		<td > Core, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0058R1 </td>
		<td > An Interface for Abstracting Execution </td>
		<td > Jared Hoberock, Michael Garland, Olivier Girioux </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0058R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R1 </td>
		<td > Add rings to the Standard Library </td>
		<td > Guy Davidson, Arthur O'Dwyer </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td > P0059R0 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0063R1 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Clark Nelson, Hans Boehm </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0063R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0067R1 </td>
		<td > Elementary string conversions </td>
		<td > Jens Maurer </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0067R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0072R1 </td>
		<td > Light-Weight Execution Agents </td>
		<td > Torvald Riegel </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0072R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0073R1 </td>
		<td > On unifying the coroutines and resumable
functions proposals </td>
		<td > Torvald Riegel </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0073R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0075R1 </td>
		<td > Template Library for Index-Based Loops </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0075R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R1 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0076R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0077R1 </td>
		<td > is_callable, the missing INVOKE related trai </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0077R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0082R1 </td>
		<td > For Loop Exit Strategies (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td > P0082R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0088R1 </td>
		<td > Variant: a type-safe union that is rarely invalid (v6) </td>
		<td > Axel Naumann </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td > P0088R0 </td>
		<td > Library</td>
		<td > </td>
	</tr>
	<tr >
		<td > P0089R1 </td>
		<td > Quantifying Memory-Allocation Strategies </td>
		<td > John Lakos, Jeffrey Mendelsohn, Alisdair Meredith, Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0089R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0091R1 </td>
		<td > Template parameter deduction for constructors (Rev. 3) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td > P0091R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0096R1 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2016-01-19 </td>
		<td > 2016-02 </td>
		<td > P0096R0 </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0119R1 </td>
		<td > Overload sets as function arguments </td>
		<td > Andrew Sutton </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0119R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R1 </td>
		<td > span: bounds-safe views of objects for sequences </td>
		<td > Neil MacIntosh </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0122R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0123R1 </td>
		<td > string_span: bounds-safe views for sequences of characters </td>
		<td > Neil MacIntosh </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0123R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R1 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri </td>
		<td > 2016-01-27 </td>
		<td > 2016-02 </td>
		<td > P0124R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0126R1 </td>
		<td > std::synchronic&lt;T> </td>
		<td > Olivier Giroux </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0126R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0128R1 </td>
		<td > constexpr_if </td>
		<td > Ville Voutilainen </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td > P0128R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0138R1 </td>
		<td > Construction Rules for enum class Values </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td > P0138R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0142R0 </td>
		<td > A Module System for C++ (Revision 4) </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0143R0 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2015-11-30 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0143R1 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td > P0143R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0144R1 </td>
		<td > Structured Bindings </td>
		<td > Herb Sutter, Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-02-03 </td>
		<td > 2016-02 </td>
		<td > P0144R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0145R1 </td>
		<td > Refining Expression Evaluation Order for Idiomatic C++ (Revision 2) </td>
		<td > Gabriel Dos Reis, Herb Sutter, Jonathan Caves </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0145R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0146R1 </td>
		<td > Regular Void </td>
		<td > Matt Calabrese  </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td > P0146R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0149R0 </td>
		<td > Generalised member pointers </td>
		<td > Jeff Snyder </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0161R0 </td>
		<td > Bitset Iterators, Masks, and Container Operations </td>
		<td > Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R1 </td>
		<td > C++ Standard Library Issues to be moved in Jacksonville </td>
		<td > Marshall Clow </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > P0165R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0167R1 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Jacksonville) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td > P0167R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0174R0 </td>
		<td > Deprecating Vestigial Library Parts in C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0175R0 </td>
		<td > Synopses for the C library </td>
		<td > Thomas Koeppe, Richard Smith </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0177R0 </td>
		<td > Cleaning up allocator_traits </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0178R0 </td>
		<td > Allocators and swap </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0180R0 </td>
		<td > Reserve a New Library Namespace Future Standardization </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0181R0 </td>
		<td > Ordered By Default </td>
		<td > Alisdair Meredith </td>
		<td > 2016-02-17 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0184R0 </td>
		<td > Generalizing the Range-Based For Loop </td>
		<td > Eric Niebler </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0185R0 </td>
		<td > Adding [nothrow-] swappable traits </td>
		<td > Daniel Krugler </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0186R0 </td>
		<td > Iterator Facade Library Proposal for Ranges </td>
		<td > Beman Dawes, Eric Niebler, Casey Carter </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0187R0 </td>
		<td > Proposal of Bitfield
Default Member
Initializers </td>
		<td > Andrew Tomazos </td>
		<td > 2015-11-20 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0188R0 </td>
		<td > Wording for [[fallthrough]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-01-03 </td>
		<td > 2016-02 </td>
		<td > P0068R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0189R0 </td>
		<td > Wording for [[nodiscard]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-01-03 </td>
		<td > 2016-02 </td>
		<td > P0068R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0190R0 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm, Jens Maurer </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0192R0 </td>
		<td > Adding a Fundamental Type for Short Float </td>
		<td > Boris Fomitchev, Sergei Nikolaev, Oliver Giroux </td>
		<td > 2015-11-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0193R0 </td>
		<td > Where is Vectorization in C++&#8253; </td>
		<td > JF Bastien, Hans Boehm </td>
		<td > 2016-01-21 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R0 </td>
		<td > Static reflection (revision 4) </td>
		<td > Matus Chochlik, Axel Naumann </td>
		<td > 2016-02-08 </td>
		<td > 2016-02 </td>
		<td > N4451 </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0195R0 </td>
		<td > Modernizing using-declarations </td>
		<td > Robert Haberlach </td>
		<td > 2015-12-23 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R0 </td>
		<td > A generic none_t literal type for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0197R0 </td>
		<td > Default Tuple-like access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0198R0 </td>
		<td > Default Swap </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0199R0 </td>
		<td > Default Hash </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0200R0 </td>
		<td > A Proposal to Add Y Combinator to the Standard Library </td>
		<td > Yegor Derevenets </td>
		<td > 2016-01-22 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0201R0 </td>
		<td > A cloning pointer-class for C++ </td>
		<td > Jonathan Coe </td>
		<td > 2016-02-01 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0202R0 </td>
		<td > Add Constexpr Modifiers to Functions in &lt;algorithm> and &lt;cstring> Headers </td>
		<td > Antony Polukhin </td>
		<td > 2016-01-31 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0203R0 </td>
		<td > Considerations for the design of expressive portable SIMD vectors </td>
		<td > Mathias Gaunard </td>
		<td > 2016-01-26 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0205R0 </td>
		<td > Allow Seeding Random Number Engines With std::random_device </td>
		<td > Moritz Klammler </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Numerics, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0206R0 </td>
		<td > Discussion about std::thread and RAII </td>
		<td > Ville Voutilainen </td>
		<td > 2016-01-27 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0207R0 </td>
		<td > Ruminations on lambda captures </td>
		<td > Ville Voutilainen </td>
		<td > 2016-01-28 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0208R0 </td>
		<td > Copy-swap helper </td>
		<td > Pablo Halpern </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0209R0 </td>
		<td > make_from_tuple: apply for construction </td>
		<td > Pablo Halpern </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0210R0 </td>
		<td > A light-weight, dynamic array </td>
		<td > Thomas Koeppe </td>
		<td > 2016-01-29 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0211R0 </td>
		<td > Allocator-aware library wrappers for dynamic allocation </td>
		<td > Thomas Koeppe </td>
		<td > 2016-01-30 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0212R0 </td>
		<td > Wording for [[maybe_unused]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-01-31 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0213R0 </td>
		<td > Reexamining the Performance of Memory-Allocation Strategies </td>
		<td > Graham Bleaney </td>
		<td > 2016-01-24 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R0 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > N4385 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0215R0 </td>
		<td > A Civil-Time Library </td>
		<td > Greg Miller, Bradley White </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0216R0 </td>
		<td > A Time-Zone Library </td>
		<td > Greg Miller, Bradley White </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0217R0 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0218R0 </td>
		<td > Adopt File System TS for C++17 </td>
		<td > Beman Dawes </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library, File System </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0219R0 </td>
		<td > Relative Paths for Filesystem </td>
		<td > Beman Dawes, Jamie Allsop, Nicolai Josuttis </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library, File System </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0220R0 </td>
		<td > Adopt Library Fundamentals TS for C++17 </td>
		<td > Beman Dawes </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0221R0 </td>
		<td > Proposed wording for default comparisons, revision 2 </td>
		<td > Jens Maurer </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td > N4532 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0222R0 </td>
		<td > Allowing Anonymous Structs as Return Values </td>
		<td > Matthew Woehlke </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0223R0 </td>
		<td > Class Namespace </td>
		<td > Matthew Woehlke </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0224R0 </td>
		<td > Implicit Return Type </td>
		<td > Matthew Woehlke </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0225R0 </td>
		<td > Why I want Concepts, and why I want them sooner rather than later </td>
		<td > Ville Voutilainen </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0226R0 </td>
		<td > Mathematical Special Functions for C++17, v4 </td>
		<td > Walter E. Brown, Axel Naumann, Edward Smith-Rowland </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td > N4437 </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0227R0 </td>
		<td > Weakening the iterator categories of some standard algorithms </td>
		<td > Thibaut Le Jehan </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0228R0 </td>
		<td > A Proposal to Add Safe Integer Types to the Standard Library Technical Report </td>
		<td > Robert Ramey </td>
		<td > 2016-02-16 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0229R0 </td>
		<td > SG5 Transactional Memory Meeting minutes 2015/11/02-2016/02/08 </td>
		<td > Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0230R0 </td>
		<td > SG14 Games Dev/Low Latency/Financial Meeting Minutes 2015/10/14-2015/02/10 </td>
		<td > Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0231R0 </td>
		<td > Extending the Transactional Memory Technical Specification to Support Commit Actions </td>
		<td > Victor Luchangco, Michael Spear, Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0232R0 </td>
		<td > A Concurrency ToolKit for Structured Deferral/Optimistic Speculation </td>
		<td > Paul McKenney, Michael Wong, Maged Michael </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R0 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0234R0 </td>
		<td > Towards Massive Parallelism(aka Heterogeneous Devices/Accelerators/GPGPU) support in C++ </td>
		<td > Michael Wong, Hartmut Kaiser, Thomas Heller </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0235R0 </td>
		<td > A Packaging System for C++ </td>
		<td > Guy Somberg, Brian Fitzgerald </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0236R0 </td>
		<td > Khronos's OpenCL SYCL to support
Heterogeneous Devices for C++ </td>
		<td > Michael Wong, Andrew Richards, Maria Rovatsou, Ruyman Reyes </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R0 </td>
		<td > On the standardization of fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0238R0 </td>
		<td > Return type deduction and SFINAE </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-02-07 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0239R0 </td>
		<td > valueless_by_exception </td>
		<td > Tony Van Eerd </td>
		<td > 2015-11-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0240R0 </td>
		<td > Why I want Concepts, but why they should come later rather than sooner </td>
		<td > Matt Calabrese </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0241R0 </td>
		<td > Remove Future-Related Explicit Specializations for Void </td>
		<td > Matt Calabrese </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0242R0 </td>
		<td > Standard Library Support For Void </td>
		<td > Matt Calabrese </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0244R0 </td>
		<td > Text_view: A C++ concepts and range based character encoding
and code point enumeration library </td>
		<td > Tom Honermann </td>
		<td > 2016-02-10 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0245R0 </td>
		<td > Hexadecimal float literals for C++ </td>
		<td > Thomas Koeppe </td>
		<td > 2016-02-09 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0246R0 </td>
		<td > Contract Assert Support Merged Proposal </td>
		<td > Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0247R0 </td>
		<td > Criteria for Contract Support </td>
		<td > Nathan Myers </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0248R0 </td>
		<td > Concepts in C++17 </td>
		<td > Andrew Sutton </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0249R0 </td>
		<td > Input Devices For 2D Graphics </td>
		<td > Brett Searles </td>
		<td > 2016-02-05 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0250R0 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046) </td>
		<td > Hans Boehm </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0251R0 </td>
		<td > Unified Call Syntax Wording </td>
		<td > Bjarne Stroustrup, Herb Sutter </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0252R0 </td>
		<td > Operator Dot Wording </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0253R0 </td>
		<td > Fixing a design mistake in the searchers
interface in Library Fundamentals </td>
		<td > Marshall Clow </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0255R0 </td>
		<td > C++ Static Reflection via template pack expansion </td>
		<td > Cleiton Santoia Silva, Daniel Auresco </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > N4447 </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0256R0 </td>
		<td > C++ Reflection Light </td>
		<td > Cleiton Santoia Silva </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0257R0 </td>
		<td > A byte type for the standard library. </td>
		<td > Neil MacIntosh </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0258R0 </td>
		<td > is_contiguous_layout </td>
		<td > Michael Spencer </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0259R0 </td>
		<td > fixed_string: a compile-time string </td>
		<td > Michael Price, Andrew Tomazos </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0260R0 </td>
		<td > C++ Concurrent Queues </td>
		<td > Lawrence Crowl, Chris Mysen </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0261R0 </td>
		<td > C++ Distributed Counters </td>
		<td > Lawrence Crowl </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0262R0 </td>
		<td > A Class for Status and Optional Value </td>
		<td > Lawrence Crowl </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0263R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the February, 2016 (Jacksonville) Meeting </td>
		<td > William M. Miller </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0264R0 </td>
		<td > auto operator= considered dangerous </td>
		<td > Michael Price </td>
		<td > 2016-02-11 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0265R0 </td>
		<td > SG5 is NOT proposing Transactional Memory for C++17 </td>
		<td > Michael Wong </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Transactional Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0266R0 </td>
		<td > Removing Restrictions on requires-Expressions </td>
		<td > Walter E. Brown </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R0 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td > N4073 </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0268R0 </td>
		<td > up-to expression </td>
		<td > Mike Spertus, Andrew Tomazos </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0269R0 </td>
		<td > Allocator-aware regular expressions </td>
		<td > Mike Spertus </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td > N4245 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0270R0 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0271R0 </td>
		<td > std::direct_init&lt;T> for plugging the metaprogramming constructor hole </td>
		<td > Richard Smith, Tony Van Eerd, David Sankel </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0272R0 </td>
		<td > Give 'std::string' a non-const '.data()' member function </td>
		<td > David Sankel </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0273R0 </td>
		<td > Proposed modules changes from implementation and deployment experience </td>
		<td > Richard Smith, Chandler Carruth, David Jones </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0274R0 </td>
		<td > Clump - A Vector-like Sequence Container with Embedded Storage </td>
		<td > Nevin Liber </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0277R0 </td>
		<td > const Inheritance </td>
		<td > David Wilson  </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0278R0 </td>
		<td > volatile solutions </td>
		<td > Jon Kalb, Dan Saks </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0279R0 </td>
		<td > Read-Copy Update (RCU) for C++ </td>
		<td > Paul E. McKenney </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0280R0 </td>
		<td > Initialize unspecified aggregate members with direct list initialization </td>
		<td > James Touton </td>
		<td > 2016-02-08 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0281R0 </td>
		<td > Remove comma elision in variadic function declarations </td>
		<td > James Touton </td>
		<td > 2016-01-23 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0282R0 </td>
		<td > Const-preserving overloads for the strtox family of functions </td>
		<td > James Touton </td>
		<td > 2016-02-07 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0283R0 </td>
		<td > Standard and non-standard attributes </td>
		<td > J. Daniel Garcia </td>
		<td > 2016-02-12 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0284R0 </td>
		<td > Unqualified enumerators in case labels </td>
		<td > James Touton </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0285R0 </td>
		<td > Using customization points to unify executors </td>
		<td > Christopher Kohlhoff </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0286R0 </td>
		<td > A networking library extension to support co_await-based coroutines </td>
		<td > Christopher Kohlhoff </td>
		<td > 2016-02-14 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0287R0 </td>
		<td > Simple Contracts for C++ </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-02-15 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0288R0 </td>
		<td > A polymorphic wrapper for all Callable objects </td>
		<td > David Krauss </td>
		<td > 2016-02-13 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0289R0 </td>
		<td > Forward declarations of nested classes </td>
		<td > Matt Austern </td>
		<td > 2016-02-16 </td>
		<td > 2016-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>

        <tr>
            <th colspan="8">2016-03 post-Jacksonville</th>
        </tr>

<!-- begin post-Jacksonville -->

	<tr >
		<td > N4578 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2016-02-22 </td>
		<td > 2016-03 </td>
		<td > N4505 </td>
		<td >  </td>
		<td > Revised N4669 </td>
	</tr>
	<tr >
		<td > N4579 </td>
		<td > Parallelism TS Editor's Report, pre-Jacksonville
mailing </td>
		<td > Jared Hoberock </td>
		<td > 2016-02-22 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4580 </td>
		<td > WG21 2016-02-19 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-23 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4581 </td>
		<td > Revised WG21 2016-02-19 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4582 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-03-19 </td>
		<td > 2016-03 </td>
		<td > N4567 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4583 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4584 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Geoffrey Romer </td>
		<td > 2016-03-08 </td>
		<td > 2016-03 </td>
		<td > N4562 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4585 </td>
		<td > Editor's Report for the Library Fundamentals TS </td>
		<td > Geoffrey Romer </td>
		<td > 2016-03-08 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4586 </td>
		<td > WG21 2016-02 Jacksonville Min </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-30 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4587 </td>
		<td > PL22.16 2016-02 Jacksonville Minutes (Draft) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-30 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4588 </td>
		<td > Working Draft, C++ extensions for Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > N4575 </td>
		<td >  </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4589 </td>
		<td > Networking TS Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td >  </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0003R2 </td>
		<td > Removing Deprecated Dynamic Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0003R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0005R4 </td>
		<td > Adopt not_fn from Library Fundamentals 2 for C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0005R3 </td>
		<td > Library </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0018R3 </td>
		<td > Lambda Capture of *this by Value as [=,*this] </td>
		<td > H. Carter Edwards, Daveed Vandevoorde, Christian Trott, Hal Finkel, Jim Reus, Robin Maffeo, Ben Sander </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0018R2 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0019R2 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2016-03-14 </td>
		<td > 2016-03 </td>
		<td > P0019R1 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0020R2 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-03-14 </td>
		<td > 2016-03 </td>
		<td > P0020R1 </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0024R2 </td>
		<td > The Parallelism TS Should be Standardized </td>
		<td > Jared Hoberock </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0024R1 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-02 </td>
	</tr>
	<tr >
		<td > P0028R2 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Luis M. Sanchez, Massimo Torquati, Marco Danelutto,  Peter Sommerlad </td>
		<td > 2016-03-15 </td>
		<td > 2016-03 </td>
		<td > P0028R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0028R3 </td>
		<td > Using non-standard attributes </td>
		<td > J. Daniel Garcia, Daveed Vandevoorde </td>
		<td > 2016-03-15 </td>
		<td > 2016-03 </td>
		<td > P0028R2 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0035R2 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0035R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0052R2 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0052R1 </td>
		<td > Library, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0057R3 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov, Jens Maurer, Richard Smith, Daveed Vandevoorde </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0057R2 </td>
		<td > Core, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0063R2 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Clark Nelson, Hans Boehm </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0063R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0077R2 </td>
		<td > is_callable, the missing INVOKE related trai </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2016-03-03 </td>
		<td > 2016-03 </td>
		<td > P0077R1 </td>
		<td > Library </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0083R2 </td>
		<td > Splicing Maps and Sets (Revision 4) </td>
		<td > Alan Talbot, Jonathan Wakely, Howard Hinnant, James Dennett </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0083R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0088R2 </td>
		<td > Variant: a type-safe union for C++17 (v7) </td>
		<td > Axel Naumann </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0088R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0096R2 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2016-02-23 </td>
		<td > 2016-03 </td>
		<td > P0096R1 </td>
		<td > Feature Testing </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0126R2 </td>
		<td > std::synchronic&lt;T> </td>
		<td > Olivier Giroux, Torvald Riegel </td>
		<td > 2016-03-13 </td>
		<td > 2016-03 </td>
		<td > P0126R1 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0127R1 </td>
		<td > Declaring non-type template arguments with auto </td>
		<td > James Touton, Mike Spertus </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0127R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0138R2 </td>
		<td > Construction Rules for enum class Values </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0138R1 </td>
		<td > WG21 </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0143R2 </td>
		<td > Wording for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0143R1 </td>
		<td > Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0144R2 </td>
		<td > Structured Bindings </td>
		<td > Herb Sutter </td>
		<td > 2016-03-16 </td>
		<td > 2016-03 </td>
		<td > P0144R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0152R1 </td>
		<td > constexpr atomic&lt;T>::is_always_lock_free </td>
		<td > Olivier Giroux, JF Bastien, Jeff Snyder </td>
		<td > 2016-03-02 </td>
		<td > 2016-03 </td>
		<td > P0152R0 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0154R1 </td>
		<td > constexpr std::thread::hardware_{true,false}_sharing_size </td>
		<td > JF Bastien, Olivier Giroux </td>
		<td > 2016-03-03 </td>
		<td > 2016-03 </td>
		<td > P0154R0 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0167R2 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Jacksonville) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0167R1 </td>
		<td > WG21 </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0170R1 </td>
		<td > Wording for Constexpr Lambda </td>
		<td > Faisal Vali </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0170R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0174R1 </td>
		<td > Deprecating Vestigial Library Parts in C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0174R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0177R1 </td>
		<td > Cleaning up allocator_traits </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0177R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0177R2 </td>
		<td > Cleaning up allocator_traits </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0177R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0180R1 </td>
		<td > Reserve a New Library Namespace Future Standardization </td>
		<td > Alisdair Meredith </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0180R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0185R1 </td>
		<td > Adding [nothrow-]swappable traits, revision 3 </td>
		<td > Daniel Krugler </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0185R0 </td>
		<td > Library </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0188R1 </td>
		<td > Wording for [[fallthrough]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td > P0188R0 </td>
		<td > Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0189R1 </td>
		<td > Wording for [[nodiscard]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td > P0189R0 </td>
		<td > Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0190R1 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm, Jens Maurer </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td > P0190R0 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0191R1 </td>
		<td > C++ virtual member function pointer comparison </td>
		<td > Daniel Markus </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0191R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0193R1 </td>
		<td > Where is Vectorization in C++&#8253; </td>
		<td > JF Bastien, Hans Boehm </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0193R0 </td>
		<td > Concurrency, SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0206R1 </td>
		<td > A joining thread </td>
		<td > Ville Voutilainen </td>
		<td > 2016-03-09 </td>
		<td > 2016-03 </td>
		<td > P0206R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0212R1 </td>
		<td > Wording for [[maybe_unused]] attribute </td>
		<td > Andrew Tomazos </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0212R0 </td>
		<td > Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0217R1 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0217R0 </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0218R1 </td>
		<td > Adopt File System TS for C++17 </td>
		<td > Beman Dawes </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td > P0218R0 </td>
		<td > Library, File System </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0220R1 </td>
		<td > Adopt Library Fundamentals V1 TS Components for C++17 (R1) </td>
		<td > Beman Dawes </td>
		<td > 2016-03-03 </td>
		<td > 2016-03 </td>
		<td > P0220R0 </td>
		<td > Library, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0221R1 </td>
		<td > Proposed wording for default comparisons, revision 3 </td>
		<td > Jens Maurer </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td > P0221R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0226R1 </td>
		<td > Mathematical Special Functions for C++17, v5 </td>
		<td > Walter E. Brown, Axel Naumann, Edward Smith-Rowland  </td>
		<td > 2016-02-29 </td>
		<td > 2016-03 </td>
		<td > P0226R0 </td>
		<td > Library, Library Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0244R1 </td>
		<td > Text_view: A C++ concepts and range based character encoding
and code point enumeration library </td>
		<td > Tom Honermann </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0244R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0245R1 </td>
		<td > Hexadecimal float literals for C++ </td>
		<td > Thomas Koeppe </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0245R0 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0250R1 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046) </td>
		<td > Hans Boehm </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > P0250R0 </td>
		<td > Concurrency, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0253R1 </td>
		<td > Fixing a design mistake in the searchers
interface in Library Fundamentals </td>
		<td > Marshall Clow </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td > P0253R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0254R0 </td>
		<td > Integrating std::string_view and
std::string </td>
		<td > Marshall Clow </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td > </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0258R1 </td>
		<td > is_contiguous_layout </td>
		<td > Michael Spencer </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td > P0258R0 </td>
		<td > Library, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0263R1 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the February, 2016 (Jacksonville) Meeting </td>
		<td > William M. Miller </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0263R0 </td>
		<td > WG21 </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0267R1 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0267R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0272R1 </td>
		<td > Give 'std::string' a non-const '.data()' member function </td>
		<td > David Sankel </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td > P0272R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0275R0 </td>
		<td > A Proposal to add Classes and Functions Required for Dynamic Library Load </td>
		<td > Antony Polukhin </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0276R0 </td>
		<td > A Proposal to add Attribute [[visible]] </td>
		<td > Antony Polukhin </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0277R1 </td>
		<td > const Inheritance </td>
		<td > David Wilson  </td>
		<td > 2016-02-22 </td>
		<td > 2016-03 </td>
		<td > P0277R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0283R1 </td>
		<td > Standard and non-standard attributes </td>
		<td > J. Daniel Garcia </td>
		<td > 2016-03-15 </td>
		<td > 2016-03 </td>
		<td > P0283R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0290R0 </td>
		<td > apply() for synchronized_value&lt;T> </td>
		<td > Anthony Williams  </td>
		<td > 2016-02-19 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0292R0 </td>
		<td > constexpr if: A slightly different syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0295R0 </td>
		<td > Adopt Selected Library Fundamentals V2 Components for C++17 </td>
		<td > Walter E. Brown </td>
		<td > 2016-03-01 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0296R0 </td>
		<td > Forward progress guarantees: Base definitions </td>
		<td > Torvald Riegel </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0299R0 </td>
		<td > Forward progress guarantees for the Parallelism TS v2 </td>
		<td > Torvald Riegel </td>
		<td > 2016-03-05 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0301R0 </td>
		<td > Wording for Unified Call Syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0301R1 </td>
		<td > Wording for Unified Call Syntax (revision 1) </td>
		<td > Jens Maurer </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td > P0301R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0302R0 </td>
		<td > Deprecating Allocator Support in std::function </td>
		<td > Jonathan Wakely </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0304R0 </td>
		<td > C++ Standard Library Issues Resolved Directly In Jacksonville </td>
		<td > Marshall Clow </td>
		<td > 2016-03-04 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2016-02  </td>
	</tr>
	<tr >
		<td > P0305R0 </td>
		<td > If statement with initializer </td>
		<td > Thomas Koeppe </td>
		<td > 2016-03-14 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0306R0 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution, Core, WG14 liason </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0308R0 </td>
		<td > Valueless Variants Considered Harmful </td>
		<td > Peter Dimov </td>
		<td > 2016-03-16 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0309R0 </td>
		<td > Partial class </td>
		<td > Daniele Bordes, Markus Hosch </td>
		<td > 2016-03-17 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0310R0 </td>
		<td > Splitting node and array allocation in allocators </td>
		<td > Marcelo Zimbres </td>
		<td > 2016-03-19 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0311R0 </td>
		<td > A Unified Vision for Manipulating Tuple-like Objects </td>
		<td > Matthew Woehlke </td>
		<td > 2016-03-18 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0312R0 </td>
		<td > Make Pointers to Members Callable </td>
		<td > Barry Revzin </td>
		<td > 2016-03-20 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0313R0 </td>
		<td > Comparison operators in fold-expressions </td>
		<td > Ville Voutilainen </td>
		<td > 2016-03-21 </td>
		<td > 2016-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>


<!-- end post-Jacksonville -->

        <tr>
            <th colspan="8">2016-06 pre-Oulu</th>
        </tr>

<!-- begin pre-Oulu -->

	<tr >
		<td > N4590 </td>
		<td > PL22.16/WG21 draft agenda: 20-25 Jun 2016, Oulu, FI </td>
		<td > Clark Nelson </td>
		<td > 2016-04-07 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4591 </td>
		<td > WG21 telecon meeting: Pre-Oulu </td>
		<td > Herb Sutter </td>
		<td > 2016-05-19 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4592 </td>
		<td > Modules TS Working Draft </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4593 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4594 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0009R2 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0009R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0023R0 </td>
		<td > Relocator: Efficiently moving objects </td>
		<td > Denis Bider </td>
		<td > 2016-04-08 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0032R2 </td>
		<td > Homogeneous interface for variant, any and optional
(Revision 2) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-03-13 </td>
		<td > 2016-06 </td>
		<td > P0032R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0035R3 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0035R2 </td>
		<td > Core, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R2 </td>
		<td > Fixed-point real numbers </td>
		<td > John McFarlane </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0037R1 </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0040R2 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0040R1 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R4 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0057R3 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0062R1 </td>
		<td > When should compilers optimize atomics? </td>
		<td > Hans Boehm, JF Bastien, Peter Dimov, Hal Finkel, Paul McKenney, Michael Wong, Jeffrey Yasskin </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0062R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0067R2 </td>
		<td > Elementary string conversions, revision 2 </td>
		<td > Jens Maurer </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0067R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0073R2 </td>
		<td > On unifying the coroutines and resumable
functions proposals </td>
		<td > Torvald Riegel </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0073R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R2 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0076R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0084R1 </td>
		<td > Emplace Return Type (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0084R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0091R2 </td>
		<td > Template argument deduction for class templates (Rev. 5) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0091R1 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0095R1 </td>
		<td > Pattern Matching and Language Variants </td>
		<td > David Sankel </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0095R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0096R3 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2016-04-29 </td>
		<td > 2016-06 </td>
		<td > P0096R2 </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0108R1 </td>
		<td > Skeleton Proposal for Thread-Local Storage (TLS) </td>
		<td > Paul E. McKenney, JF Bastien </td>
		<td > 2016-04-14 </td>
		<td > 2016-06 </td>
		<td > P0108R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0119R2 </td>
		<td > Overload sets as function arguments </td>
		<td > Andrew Sutton </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0119R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R2 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0122R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0123R2 </td>
		<td > string_span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0123R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0141R0 </td>
		<td > Modules, Componentization, and Transitional Paths </td>
		<td > Gabriel Dos Reis,  Pavel Curtis </td>
		<td > 2015-10-05 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Modules </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0145R2 </td>
		<td > Refining Expression Evaluation Order for Idiomatic C++ </td>
		<td > Gabriel Dos Reis,  Herb Sutter, Jonathan Caves </td>
		<td > 2016-03-03 </td>
		<td > 2016-06 </td>
		<td > P0145R1 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R2 </td>
		<td > C++ Standard Library Issues to be moved in Oulu </td>
		<td > Marshall Clow </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0165R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0190R2 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm,
Jens Maurer, Jeffrey Yasskin, JF Bastien </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td > P0190R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R1 </td>
		<td > Static reflection</td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann </td>
		<td > 2016-05-17 </td>
		<td > 2016-06 </td>
		<td > P0194R0 </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R1 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td > P0196R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0202R1 </td>
		<td > Add Constexpr Modifiers to Functions in &lt;algorithm> and &lt;cstring> Headers </td>
		<td > Antony Polukhin </td>
		<td > 2016-05-21 </td>
		<td > 2016-06 </td>
		<td > P0202R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0209R1 </td>
		<td > make_from_tuple: apply for construction </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0209R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0211R1 </td>
		<td > Allocator-aware library wrappers for dynamic allocation </td>
		<td > Thomas Koeppe </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0211R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R1 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td > P0214R0 </td>
		<td > Library evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0217R2 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0217R1 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R1 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0233R0 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R1 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td > P0237R0 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0252R1 </td>
		<td > Operator Dot Wording </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-03-02 </td>
		<td > 2016-06 </td>
		<td > P0252R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0254R1 </td>
		<td > Integrating std::string_view and std::string </td>
		<td > Marshall Clow </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td > P0254R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0257R1 </td>
		<td > A byte type for increased type safety </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0257R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0292R1 </td>
		<td > constexpr if: A slightly different syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td > P0292R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0296R1 </td>
		<td > Forward progress guarantees: Base definitions </td>
		<td > Torvald Riegel </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td > P0296R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0298R0 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0306R1 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2016-05-08 </td>
		<td > 2016-06 </td>
		<td > P0306R0 </td>
		<td > Evolution, Core, WG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0307R0 </td>
		<td > Making Optional Greater Equal Again </td>
		<td > Tony Van Eerd </td>
		<td > 2016-03-15 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0315R0 </td>
		<td > Lambdas in unevaluated context </td>
		<td > Louis Dionne </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0317R0 </td>
		<td > Directory Entry Caching for Filesystem </td>
		<td > Beman Dawes </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0318R0 </td>
		<td > decay_unwrap and unwrap_reference </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0319R0 </td>
		<td > Adding Emplace functions for
promise&lt;T>/future&lt;T> </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0320R0 </td>
		<td > Thread Constructor Attributes </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0322R0 </td>
		<td > exception_list </td>
		<td > Bryce Adelstein Lelbach, Alisdair Meredith, Jared Hoberock </td>
		<td > 2016-04-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution. Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R0 </td>
		<td > A proposal to add a utility class to represent expected monad (Revision 2) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0324R0 </td>
		<td > One Concept Definition Syntax </td>
		<td > Zhihao Yuan </td>
		<td > 2016-05-04 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0325R0 </td>
		<td > Propose to adopt make_array in C++17 </td>
		<td > Zhihao Yuan </td>
		<td > 2016-03-31 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0326R0 </td>
		<td > Structured binding: customization point issues </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0327R0 </td>
		<td > Product types access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, Reflection, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0329R0 </td>
		<td > Designated Initialization </td>
		<td > Tim Shen, Richard Smith, Zhihao Yuan, Chandler Carruth </td>
		<td > 2016-05-09 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0330R0 </td>
		<td > User-Defined Literals for size_t </td>
		<td > Rein Halbersma </td>
		<td > 2016-05-15 </td>
		<td > 2016-06 </td>
		<td > N4254 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0331R0 </td>
		<td > Motivation and Examples for Multidimensional Array </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0332R0 </td>
		<td > Relaxed Incomplete Multidimensional Array Type Declaration </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0333R0 </td>
		<td > Improving Parallel Algorithm Exception Handling </td>
		<td > Bryce Lelbach </td>
		<td > 2016-05-15 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0334R0 </td>
		<td > Immutable Persistent Containers </td>
		<td > Bryce Lelbach </td>
		<td > 2016-04-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0335R0 </td>
		<td > Context Tokens for Parallel Algorithms </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0336R0 </td>
		<td > Better Names for Parallel Execution Policies in C++17 </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0337R0 </td>
		<td > Delete operator= for polymorphic_allocator </td>
		<td > Pablo Halpern </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0338R0 </td>
		<td > C++ generic factories </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R0 </td>
		<td > polymorphic_allocator&lt;void> as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2016-05-31 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0340R0 </td>
		<td > Making std::underlying_type SFINAE-friendly </td>
		<td > R. "Tim" Song </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0341R0 </td>
		<td > parameter packs outside of templates </td>
		<td > Mike Spertus </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0342R0 </td>
		<td > Timing barriers </td>
		<td > Mike Spertus </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0343R0 </td>
		<td > Meta-programming High-Order Functions </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0345R0 </td>
		<td > Allowing any unsigned integral type as parameter type for literal operators </td>
		<td > Michael Dominiak </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0346R0 </td>
		<td > A &lt;random> Nomenclature Tweak </td>
		<td > Walter E. Brown </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0347R0 </td>
		<td > Simplifying simple uses of &lt;random> </td>
		<td > R. "Tim" Song, Melissa O'Neill </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0348R0 </td>
		<td > Validity testing issues </td>
		<td > Andrzej Krzemienski </td>
		<td > 2016-05-25 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0349R0 </td>
		<td > Assumptions about the size of datapar </td>
		<td > Matthias Kretz </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0350R0 </td>
		<td > Integrating datapar with parallel algorithms and executors </td>
		<td > Matthias Kretz </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0352R0 </td>
		<td > Smart References through Delegation: An
Alternative to N4477's Operator Dot </td>
		<td > Hubert Tong, Faisal Vali </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0353R0 </td>
		<td > Unicode Encoding Conversions for the Standard Library </td>
		<td > Beman Dawes </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0354R0 </td>
		<td > default == is >, default &lt; is &lt; so </td>
		<td > Tony Van Eerd </td>
		<td > 2016-05-15 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R0 </td>
		<td > Extending &lt;chrono&gt; to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0356R0 </td>
		<td > Simplified partial function application </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-22 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0357R0 </td>
		<td > reference_wrapper for incomplete types </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-24 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0358R0 </td>
		<td > Fixes for not_fn </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0359R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2016/02/22-2016/05/23 </td>
		<td > Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Transaction Memory </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0360R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2016/02/17-2015/05/25 </td>
		<td > Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0361R0 </td>
		<td > Invoking Algorithms asynchronously </td>
		<td > Hartmut Kaiser, Thomas Heller, Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0362R0 </td>
		<td > Towards support for Heterogeneous
Devices in C++ (Concurrency aspects) </td>
		<td > Michael Wong, Andrew Richards, Maria Rovatsou, Ruyman Reyes, Lee Howes, Gordon Brown </td>
		<td > 2016-05-23 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14, Concurrency </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0363R0 </td>
		<td > Towards support for Heterogeneous
Devices in C++ (Language aspects) </td>
		<td > Michael Wong, Andrew Richards, Maria Rovatsou, Ruyman Reyes, Lee Howes, Gordon Brown </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0364R0 </td>
		<td > Report on Exception Handling Lite
(Disappointment) from SG14 </td>
		<td > Michael Wong, Sunil Srivastava, Sean Middleditch, Patrice Roy </td>
		<td > 2016-05-23 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14, Concurrency </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0365R0 </td>
		<td > Report on SG14, a year later and future directions </td>
		<td > Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution, SG14, Concurrency, Library Evolution, Numerics, Reflection </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0366R0 </td>
		<td > Extending the Transactional Memory Technical Specification with an in_transaction Statemen </td>
		<td > Victor Luchangco, Michael Spear, Michael Wong </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0367R0 </td>
		<td > a C++ standard library class to qualify data accesses </td>
		<td > Ronan Keryell, Jo&euml;l Falcou </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, SG14, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0369R0 </td>
		<td > 2017-07 Toronto ISO WG21 C++ Standard Meeting information </td>
		<td > Michael Wong, Botond Ballo, JF Bastien, Hubert Tong, Patrice Roy, Tony Van Eerd,
Duncan Smith </td>
		<td > 2016-05-23 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0370R0 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0371R0 </td>
		<td > Temporarily deprecate memory_order_consume </td>
		<td > Hans Boehm </td>
		<td > 2016-05-26 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0372R0 </td>
		<td > A type for utf-8 data </td>
		<td > Michael Spencer, Davide C. C. Italiano </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0373R0 </td>
		<td > Proposal of File Literals </td>
		<td > Andrew Tomazos </td>
		<td > 2016-05-21 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0374R0 </td>
		<td > Stream parallelism patterns </td>
		<td > J. Daniel Garcia, David del Rio, Manuel F. Dolz, Javier Garcia-Blas, Luis M. Sanchez, Marco Danelutto, Massimo Torquati </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0375R0 </td>
		<td > [[exhaustive]] attribute for enums </td>
		<td > David Sankel </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0376R0 </td>
		<td > A Single Generalization of std::invoke, std::apply, and std::visit </td>
		<td > Matt Calabrese </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0377R0 </td>
		<td > std::integral_constant with a Deduced Value Type </td>
		<td > Matt Calabrese </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0379R0 </td>
		<td > Why a joining thread from P0206 is a Bad Idea </td>
		<td > Detlef Vollman </td>
		<td > 2016-05-27 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0380R0 </td>
		<td > A Contract Design </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2016-05-28 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0381R0 </td>
		<td > Numeric Width </td>
		<td > John McFarlane </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0382R0 </td>
		<td > Comments on P0119: Overload sets as function arguments </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-05-29 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0384R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the June, 2016 (Oulu) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0385R0 </td>
		<td > Static reflection: 
Rationale, design and evolution </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0386R0 </td>
		<td > Inline Variables </td>
		<td > Hal Finkel, Richard Smith </td>
		<td > 2016-05-30 </td>
		<td > 2016-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>


<!-- end pre-Oulu -->

        <tr>
            <th colspan="8">2016-07 post-Oulu</th>
        </tr>

<!-- begin post-Oulu -->

	<tr >
		<td > N4595 </td>
		<td > WG21 2016-06-10 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-06-15 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4596 </td>
		<td > PL22.16 Jacksonville Minutes (revised) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-04-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4597 </td>
		<td > WG21 2016-06 Oulu Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4598 </td>
		<td > PL22.16 2016-06 Oulu Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4599 </td>
		<td > 2016-08 LWG Meeting </td>
		<td > Robert Douglas </td>
		<td > 2016-07-02 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4600 </td>
		<td > Working Draft, C++ Extensions for Library Fundamentals, Version 2 </td>
		<td > Geoffrey Romer </td>
		<td > 2016-07-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4601 </td>
		<td > Editor's Report for the Library Fundamentals TS </td>
		<td > Geoffrey Romer </td>
		<td > 2016-07-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4602 </td>
		<td > WG21 telecon minutes - pre-Oulu (revised) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4603 </td>
		<td > Editor's Report -- Committee Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-07-12 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4604 </td>
		<td > C++17 CD Ballot Document </td>
		<td > Richard Smith </td>
		<td > 2016-07-12 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4605 </td>
		<td > </td>
		<td > </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4606 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-07-12 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td >  </td>
		<td > Revised N4618 </td>
	</tr>


	<tr >
		<td > P0003R3 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0003R2 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0003R4 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-25 </td>
		<td > 2016-07 </td>
		<td > P0003R3 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0028R4 </td>
		<td > Using attribute namespaces without repetition </td>
		<td > J. Daniel Garcia, Daveed Vandevoorde </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0028R3 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0032R3 </td>
		<td > Homogeneous interface for variant, any and optional
(Revision 3) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-05-24 </td>
		<td > 2016-07 </td>
		<td > P0032R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0035R4 </td>
		<td > Dynamic memory allocation for over-aligned data </td>
		<td > Clark Nelson </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0035R3 </td>
		<td > Core, Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0040R3 </td>
		<td > Extending memory management tools </td>
		<td > Brent Friedman </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0040R2 </td>
		<td > Library Evolution, SG14 </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0053R1 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis </td>
		<td > 2015-10-24 </td>
		<td > 2016-07 </td>
		<td > P0053R0 </td>
		<td > Library evolution, Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0053R2 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis </td>
		<td > 2016-07-05 </td>
		<td > 2016-07 </td>
		<td > P0053R1 </td>
		<td > Library evolution, Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R5 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0057R4 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0063R3 </td>
		<td > C++17 should refer to C11 instead of C99 </td>
		<td > Clark Nelson, Hans Boehm </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0063R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0067R3 </td>
		<td > Elementary string conversions, revision 2 </td>
		<td > Jens Maurer </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0067R2 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0067R4 </td>
		<td > Elementary string conversions, revision 4 </td>
		<td > Jens Maurer </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td > P0067R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R3 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td > P0076R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0083R3 </td>
		<td > Splicing Maps and Sets (Revision 5) </td>
		<td > Alan Talbot, Jonathan Wakely, Howard Hinnant, James Dennett </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0083R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0084R2 </td>
		<td > Emplace Return Type (Revision 1) </td>
		<td > Alan Talbot </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0084R1 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0088R3 </td>
		<td > Variant: a type-safe union for C++17 (v8) </td>
		<td > Axel Naumann </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0088R2 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0091R3 </td>
		<td > Template argument deduction for class templates (Rev. 6) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0091R2 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0122R3 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0122R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R2 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri, Boqun Feng </td>
		<td > 2016-06-26 </td>
		<td > 2016-07 </td>
		<td > P0124R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0127R2 </td>
		<td > Declaring non-type template arguments with auto </td>
		<td > James Touton, Mike Spertus </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0127R1 </td>
		<td > Evolution </td>
		<td >  Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0135R1 </td>
		<td > Wording for guaranteed copy elision through simplified value categories </td>
		<td > Richard Smith </td>
		<td > 2016-06-20 </td>
		<td > 2016-07 </td>
		<td > P0135R0 </td>
		<td >  </td>
		<td > Adopted 2016-06  </td>
	</tr>
	<tr >
		<td > P0137R1 </td>
		<td > Core Issue 1776: Replacement of class objects containing reference members </td>
		<td > Richard Smith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0137R0 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0145R3 </td>
		<td > Refining Expression Evaluation Order for Idiomatic C++ </td>
		<td > Gabriel Dos Reis,  Herb Sutter, Jonathan Caves </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0145R2 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0174R2 </td>
		<td > Deprecating Vestigial Library Parts in C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0174R1 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0175R1 </td>
		<td > Synopses for the C library </td>
		<td > Thomas Koeppe, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0175R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0180R2 </td>
		<td > Reserve a New Library Namespace Future Standardization </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0180R1 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0181R1 </td>
		<td > Ordered By Default </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0181R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06, Removed 2017-03 </td>
	</tr>
	<tr >
		<td > P0192R1 </td>
		<td > Adding a Fundamental Type for Short Float </td>
		<td > Boris Fomitchev, Sergei Nikolaev, Olivier Giroux, Lawrence Crowl </td>
		<td > 2016-02-14 </td>
		<td > 2016-07 </td>
		<td > P0192R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0209R2 </td>
		<td > make_from_tuple: apply for construction </td>
		<td > Pablo Halpern </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0209R1 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0217R3 </td>
		<td > Proposed wording for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0217R2 </td>
		<td > Evolution, Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0219R1 </td>
		<td > Relative Paths for Filesystem </td>
		<td > Beman Dawes </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0219R0 </td>
		<td > Library, File System </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0221R2 </td>
		<td > Proposed wording for default comparisons, revision 4 </td>
		<td > Jens Maurer </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0221R1 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R2 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner, Nathan Myers </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td > P0237R1 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0250R2 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046, 1784) </td>
		<td > Hans Boehm </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0250R1 </td>
		<td > Concurrency, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0254R2 </td>
		<td > Integrating std::string_view and std::string </td>
		<td > Marshall Clow </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0254R1 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0258R2 </td>
		<td > has_unique_object_representations - wording </td>
		<td > Michael Spencer </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0258R1 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0266R1 </td>
		<td > Removing Restrictions on requires-Expressions </td>
		<td > Walter E. Brown </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0266R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R2 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0267R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0270R1 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0270R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0283R2 </td>
		<td > Standard and non-standard attributes </td>
		<td > J. Daniel Garcia </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0283R1 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0292R2 </td>
		<td > constexpr if: A slightly different syntax </td>
		<td > Jens Maurer </td>
		<td > 2016-06-20 </td>
		<td > 2016-07 </td>
		<td > P0292R1 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0296R2 </td>
		<td > Forward progress guarantees: Base definitions </td>
		<td > Torvald Riegel </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0296R1 </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0298R1 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > P0298R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0299R1 </td>
		<td > Forward progress guarantees for the Parallelism TS features </td>
		<td > Torvald Riegel </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0299R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0302R1 </td>
		<td > Removing Allocator Support in std::function (rev 1) </td>
		<td > Jonathan Wakely </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0302R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0304R1 </td>
		<td > C++ Standard Library Issues Resolved Directly In Oulu </td>
		<td > Marshall Clow </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0304R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0305R1 </td>
		<td > Selection statements with initializer </td>
		<td > Thomas Koeppe </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0305R0 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0307R2 </td>
		<td > Making Optional Greater Equal Again </td>
		<td > Tony Van Eerd </td>
		<td > 2016-03-15 </td>
		<td > 2016-07 </td>
		<td > P0307R1 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0314R0 </td>
		<td > Querying the alignment of an object </td>
		<td > Robert Haberlach  </td>
		<td > 2016-03-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0325R1 </td>
		<td > Propose to adopt make_array into the IS </td>
		<td > Zhihao Yuan </td>
		<td > 2016-06-29 </td>
		<td > 2016-07 </td>
		<td > P0325R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0336R1 </td>
		<td > Better Names for Parallel Execution Policies in C++17 </td>
		<td > Pablo Halpern </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0336R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0346R1 </td>
		<td > A &lt;random> Nomenclature Tweak </td>
		<td > Walter E. Brown </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0346R0 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0358R1 </td>
		<td > Fixes for not_fn </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-06-22 </td>
		<td > 2016-07 </td>
		<td > P0358R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0370R1 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-07-05 </td>
		<td > 2016-07 </td>
		<td > P0370R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0371R1 </td>
		<td > Temporarily discourage memory_order_consume </td>
		<td > Hans Boehm </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0371R0 </td>
		<td > Library, Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0380R1 </td>
		<td > A Contract Design </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td > P0380R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0386R2 </td>
		<td > Inline Variables </td>
		<td > Hal Finkel, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td > P0386R1 </td>
		<td >  </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0387R0 </td>
		<td > Memory Model Issues for Concurrent Data Structures </td>
		<td > Hans Boehm </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0388R0 </td>
		<td > Permit conversions to arrays of unknown bound </td>
		<td > Robert Haberlach  </td>
		<td > 2016-06-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0389R0 </td>
		<td > template keyword in unqualified-ids </td>
		<td > Robert Haberlach  </td>
		<td > 2016-06-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0390R0 </td>
		<td > A Proposal to Add Pointer Cast Functions with Move Semantics to
the Standard Library </td>
		<td > Nickolas Pokhylets </td>
		<td > 2016-06-04 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0391R0 </td>
		<td > Introducing the term "templated entity" </td>
		<td > Jens Maurer </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0392R0 </td>
		<td > Adapting string_view by filesystem paths </td>
		<td > Nicolai Josuttis </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0393R3 </td>
		<td > Making Variant Greater Equal </td>
		<td > Tony Van Eerd </td>
		<td > 2016-06-21 </td>
		<td > 2016-07 </td>
		<td > P0393R2 </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0394R4 </td>
		<td > Hotel Parallelifornia: terminate() for Parallel Algorithms Exception Handling </td>
		<td > JF Bastien, Bryce Adelstein Lelbach </td>
		<td > 2016-06-23 </td>
		<td > 2016-07 </td>
		<td > P0394R3 </td>
		<td > Concurrency </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0396R0 </td>
		<td > C++ Concepts Active Issues List (Snapshot of Revision 4) </td>
		<td > Andrew Sutton </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0397R0 </td>
		<td > C++ Standard Library Priority 1 Issues Resolved Directly In Oulu </td>
		<td > Alisdair Meredith </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2016-06 </td>
	</tr>
	<tr >
		<td > P0398R0 </td>
		<td > Core issue 1518: Explicit default constructors and copy-list-initialization </td>
		<td > Jens Maurer </td>
		<td > 2016-06-24 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2016-06  </td>
	</tr>
	<tr >
		<td > P0400R0 </td>
		<td > Wording for Order of Evaluation of Function Arguments </td>
		<td > William M. Miller </td>
		<td > 2016-06-25 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0401R0 </td>
		<td > Extensions to the Allocator interface </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-08 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0404R0 </td>
		<td > Matching Types: 404 Syntax Not found </td>
		<td > Hubert Tong, James Touton </td>
		<td > 2016-07-11 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0405R0 </td>
		<td > Wording for Networking TS changes from Kona </td>
		<td > Jonathan Wakely </td>
		<td > 2016-06-28 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0407R0 </td>
		<td > Allocator-aware basic stringbuf </td>
		<td > Peter Sommerlad </td>
		<td > 2016-07-05 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0408R0 </td>
		<td > Efficient Access to basic stringbuf's Buffer </td>
		<td > Peter Sommerlad </td>
		<td > 2016-07-01 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0409R0 </td>
		<td > Allow lambda capture [=, this] </td>
		<td > Thomas Koeppe </td>
		<td > 2016-06-27 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0411R0 </td>
		<td > Separating Library Requirements and Preconditions </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0413R0 </td>
		<td > Updating Parallel Execution Policy Names in the Parallelism TS </td>
		<td > Pablo Halpern </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0414R0 </td>
		<td > Merging shared_ptr changes from Library Fundamentals to C++17 </td>
		<td > Jonathan Wakely </td>
		<td > 2016-07-07 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0416R0 </td>
		<td > Operator Dot (R3) </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-07-10 </td>
		<td > 2016-07 </td>
		<td > N4477 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0417R0 </td>
		<td > C++17 should refer to ISO/IEC 10646 2014 instead of 1994 </td>
		<td > Beman Dawes </td>
		<td > 2016-07-13 </td>
		<td > 2016-07 </td>
		<td >  </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>


<!-- end pre-Issaquah -->

        <tr>
            <th colspan="8">2016-10 pre-Issaquah</th>
        </tr>

<!-- begin pre-Issaquah -->

	<tr >
		<td > N4607 </td>
		<td > Toronto Meeting Information </td>
		<td > Michael Wong </td>
		<td > 2016-07-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4608 </td>
		<td > PL22.16/WG21 draft agenda: 7-12 Nov 2016, Issaquah, WA, US </td>
		<td > Clark Nelson </td>
		<td > 2016-07-21 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4609 </td>
		<td > Business Plan and Convener's Report </td>
		<td > Herb Sutter </td>
		<td > 2016-08-11 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4610 </td>
		<td > Working Draft, Extensions to C++ for
Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Revised N4637 </td>
	</tr>
	<tr >
		<td > N4611 </td>
		<td > Editor's Report for the Modules TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4612 </td>
		<td > Working Draft, C++ extensions for
Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Revised N4626 </td>
	</tr>
	<tr >
		<td > N4613 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > N4614 </td>
		<td > WG21 telecon meeting: Pre-Issaquah </td>
		<td > Herb Sutter </td>
		<td > 2016-10-01 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0009R3 </td>
		<td > Polymorphic Multidimensional Array View </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0009R2 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0019R3 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0019R2 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0020R3 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0020R2 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0022R2 </td>
		<td > Proxy Iterators for the Ranges Extensions </td>
		<td > Eric Niebler </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0022R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R3 </td>
		<td > Fixed-point real numbers </td>
		<td > John McFarlane, Michael Wong </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0037R2 </td>
		<td > Numerics, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0051R2 </td>
		<td > C++ generic overload function </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0051R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0057R6 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0057R5 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R2 </td>
		<td > Add rings to the Standard Library </td>
		<td > Guy Davidson, Arthur O'Dwyer, Joe Best-Rotheray </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0059R1 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0098R1 </td>
		<td > Towards Implementation and Use of memory order consume </td>
		<td > Paul E. McKenney, Torvald Riegel, Jeff  Preshing,
Hans Boehm, Clark Nelson, Olivier Giroux, Lawrence Crowl </td>
		<td > 2016-01-04 </td>
		<td > 2016-10 </td>
		<td > P0098R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0099R1 </td>
		<td > A low-level API for stackful context switching </td>
		<td > Oliver Kowalke, Nat Goodspeed </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0099R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R3 </td>
		<td > C++ Standard Library Issues to be moved in Issaquah </td>
		<td > Marshall Clow </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0165R2 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0187R1 </td>
		<td > Proposal/Wording for Bit-field Default
Member Initializer Syntax </td>
		<td > Andrew Tomazos </td>
		<td > 2016-06-28 </td>
		<td > 2016-10 </td>
		<td > P0187R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R2 </td>
		<td > Static reflection </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0194R1 </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0195R1 </td>
		<td > Modernizing using-declarations </td>
		<td > Robert Haberlach </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0195R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R2 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0196R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0201R1 </td>
		<td > An indirect value-type for C++ </td>
		<td > Jonathan Coe </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0201R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R2 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0214R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R2 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong, Paul McKenney, Arthur O'Dwyer </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0233R1 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R3 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0237R2 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0249R2 </td>
		<td > Input Devices For 2D Graphics </td>
		<td > Brett Searles, Michael McLaughlin, Jason Zink </td>
		<td > 2016-10-07 </td>
		<td > 2016-10 </td>
		<td > P0249R1 </td>
		<td > SG13 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0252R2 </td>
		<td > Operator Dot Wording </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0252R1 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0261R1 </td>
		<td > C++ Distributed Counters </td>
		<td > Lawrence Crowl </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0261R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0262R1 </td>
		<td > A Class for Status and Optional Value </td>
		<td > Lawrence Crowl, Chris Mysen </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0262R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0273R1 </td>
		<td > Proposed modules changes from implementation and deployment experience </td>
		<td > Richard Smith, Chandler Carruth, David Jones </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0273R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0279R1 </td>
		<td > Read-Copy Update (RCU) for C++ </td>
		<td > Paul E. McKenney </td>
		<td > 2016-08-25 </td>
		<td > 2016-10 </td>
		<td > P0279R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0290R1 </td>
		<td > apply() for synchronized_value&lt;T> </td>
		<td > Anthony Williams  </td>
		<td > 2016-06-23 </td>
		<td > 2016-10 </td>
		<td > P0290R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0293R0 </td>
		<td > Template deduction for nested classes </td>
		<td > S. Davis Herring </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0315R1 </td>
		<td > Lambdas in unevaluated context </td>
		<td > Louis Dionne </td>
		<td > 2016-08-01 </td>
		<td > 2016-10 </td>
		<td > P0315R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0317R1 </td>
		<td > Directory Entry Caching for Filesystem </td>
		<td > Beman Dawes </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0317R0 </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0320R1 </td>
		<td > Thread Constructor Attributes </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0320R0 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R1 </td>
		<td > A proposal to add a utility class to represent expected object (Revision 3) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0323R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0327R1 </td>
		<td > Product types access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0327R0 </td>
		<td > Evolution, Reflection, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0329R1 </td>
		<td > Designated Initialization Wording </td>
		<td > Tim Shen, Richard Smith </td>
		<td > 2016-09-26 </td>
		<td > 2016-10 </td>
		<td > P0329R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0338R1 </td>
		<td > C++ generic factories </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2016-10-12 </td>
		<td > 2016-10 </td>
		<td > P0338R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R1 </td>
		<td > polymorphic_allocator&lt;void> as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0339R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0347R1 </td>
		<td > Simplifying simple uses of &lt;random> </td>
		<td > R. "Tim" Song, Melissa O'Neill </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0347R0 </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0353R1 </td>
		<td > Unicode Friendly Encoding Conversions for the Standard Library </td>
		<td > Beman Dawes </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td > P0353R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R1 </td>
		<td > Extending &lt;chrono&gt; to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0355R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0356R1 </td>
		<td > Simplified partial function application </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td > P0356R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0357R1 </td>
		<td > reference_wrapper for incomplete types </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2016-09-29 </td>
		<td > 2016-10 </td>
		<td > P0357R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0361R1 </td>
		<td > Invoking Algorithms asynchronously </td>
		<td > Hartmut Kaiser, Thomas Heller, Bryce Adelstein Lelbach, John Biddiscombe, Michael Wong </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0361R0 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0370R2 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0370R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0381R1 </td>
		<td > Numeric Width </td>
		<td > John McFarlane, Michael Wong </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0381R0 </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0385R1 </td>
		<td > Static reflection: 
Rationale, design and evolution </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td > P0385R0 </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0403R0 </td>
		<td > Literal suffixes for basic_string_view </td>
		<td > Marshall Clow </td>
		<td > 2016-09-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0406R1 </td>
		<td > Intrusive Containers </td>
		<td > Hal Finkel </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td > P0406R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0409R1 </td>
		<td > Allow lambda capture [=, this] </td>
		<td > Thomas Koeppe </td>
		<td > 2016-10-11 </td>
		<td > 2016-10 </td>
		<td > P0409R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0412R0 </td>
		<td > Benchmarking primitives </td>
		<td > Mikhail Maltsev </td>
		<td > 2016-07-05 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0414R1 </td>
		<td > Merging shared_ptr changes from Library Fundamentals to C++17 </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-06 </td>
		<td > 2016-10 </td>
		<td > P0414R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0415R0 </td>
		<td > Constexpr for std::complex </td>
		<td > Antony Polukhin </td>
		<td > 2016-08-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0416R1 </td>
		<td > Operator Dot (R3) </td>
		<td > Bjarne Stroustrup, Gabriel Dos Reis </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td > P0416R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0418R1 </td>
		<td > Fail or succeed: there is no atomic lattice </td>
		<td > JF Bastien </td>
		<td > 2016-08-02 </td>
		<td > 2016-10 </td>
		<td > P0418R0 </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0421R0 </td>
		<td > Static class constructor </td>
		<td > Mariusz Moczala </td>
		<td > 2016-09-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0422R0 </td>
		<td > Out-of-Thin-Air Execution is Vacuous </td>
		<td > Paul E. McKenney, Alan Jeffrey, Ali Sezgin, Tony Tye </td>
		<td > 2016-07-27 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0423R0 </td>
		<td > Variable templates for Networking TS traits </td>
		<td > Jonathan Wakely </td>
		<td > 2016-08-04 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0424R0 </td>
		<td > Reconsidering literal operator templates for strings </td>
		<td > Louis Dionne </td>
		<td > 2016-08-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0426R0 </td>
		<td > Constexpr for std::char_traits </td>
		<td > Antony Polukhin </td>
		<td > 2016-08-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0428R0 </td>
		<td > Familiar template syntax for generic lambdas </td>
		<td > Louis Dionne </td>
		<td > 2016-09-08 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0429R0 </td>
		<td > A Standard flat_map </td>
		<td > Zach Laine </td>
		<td > 2016-08-31 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0430R0 </td>
		<td > File system library on non-POSIX-like operating systems </td>
		<td > Jason Liu, Hubert Tong </td>
		<td > 2016-09-12 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0432R0 </td>
		<td > Implicit and Explicit Default Comparison Operators </td>
		<td > David Stone </td>
		<td > 2016-09-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0433R0 </td>
		<td > Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library </td>
		<td > Mike Spertus, Walter E. Brown </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0434R0 </td>
		<td > Portable Interrupt Library </td>
		<td > Brett Searies </td>
		<td > 2016-10-09 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG13 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0435R0 </td>
		<td > Resolving LWG Issues re common_type </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0436R0 </td>
		<td > An Extensible Approach to Obtaining Selected Operators </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0437R0 </td>
		<td > Numeric Traits for the Next Standard Library </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0438R0 </td>
		<td > Toward a &lt;random> Technical Specification </td>
		<td > Walter E. Brown </td>
		<td > 2016-10-05 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0439R0 </td>
		<td > Make memory_order a scoped
enumeration </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-06 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0440R0 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0441R0 </td>
		<td > Ranges: Merging Writable and MoveWritable </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0443R0 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0444R0 </td>
		<td > Unifying suspend-by-call and suspend-by-return </td>
		<td > Nat Goodspeed </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0445R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2016/09/21-2016/10/13 </td>
		<td > Michael Wong </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0446R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2016/07/18-2016/10/10 </td>
		<td > Michael Wong </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG5 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0447R0 </td>
		<td > Introduction of std::colony to the standard library </td>
		<td > Matthew Bentley </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0448R0 </td>
		<td > A strstream replacement using span&lt;charT> as </td>
		<td > Peter Sommerlad </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0451R0 </td>
		<td > Future-Proofing Parallel Algorithms Exception Handling </td>
		<td > Bryce Adelstein Lelbach, Alisdair Meredith </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0452R0 </td>
		<td > Binary transform_reduce(): The Missing Overload </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0454R0 </td>
		<td > Wording for a Minimal mdspan </td>
		<td > Bryce Adelstein Lelbach, H. Carter Edwards </td>
		<td > 2016-10-10 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0457R0 </td>
		<td > String Prefix and Suffix Checking </td>
		<td > Mikhail Maltsev </td>
		<td > 2016-10-09 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0458R0 </td>
		<td > Checking for Existence of an Element in Associative Containers </td>
		<td > Mikhail Maltsev </td>
		<td > 2016-10-09 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0459R0 </td>
		<td > C++ Extensions for Ranges,
Speculative Combined Proposal Document </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0460R0 </td>
		<td > Flat containers wording </td>
		<td > Sean Middleditch </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0461R0 </td>
		<td > Proposed RCU C++ API </td>
		<td > Paul E. McKenney, Maged Michael, Michael Wong, Isabella Muerte, Arthur O'Dwyer </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0462R0 </td>
		<td > Marking memory order consume Dependency Chains </td>
		<td > Hans Boehm, Clark Nelson, Olivier Giroux, Lawrence Crowl, JF Bastien, Micheal Wong </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0463R0 </td>
		<td > endian, Just endian </td>
		<td > Howard Hinnant </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0464R0 </td>
		<td > Revisiting the meaning of "foo(ConceptName,ConceptName)" </td>
		<td > Tony Van Eerd, Botond Ballo  </td>
		<td > 2016-10-11 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0465R0 </td>
		<td > Procedural Function Interfaces </td>
		<td > Lisa Lippincott </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0466R0 </td>
		<td > Layout-compatibility and Pointer-interconvertibility Traits </td>
		<td > Lisa Lippincott </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0467R0 </td>
		<td > Iterator Concerns for Parallel Algorithms </td>
		<td > Alisdair Meredith </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0468R0 </td>
		<td > A Proposal to Add an Intrusive Smart Pointer to the C++ Standard Library </td>
		<td > Isabella Muerte </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0469R0 </td>
		<td > Sample in place </td>
		<td > R. "Tim" Song </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0471R0 </td>
		<td > Single argument std::inserter </td>
		<td > David Sankel </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0472R0 </td>
		<td > Move 'std::monostate' to &lt;utility> </td>
		<td > David Sankel </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0473R0 </td>
		<td > + for std::vector concatenation </td>
		<td > David Sankel </td>
		<td > 2016-10-13 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0474R0 </td>
		<td > Comparison in C++: Basic Facilities </td>
		<td > Lawrence Crowl </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0475R0 </td>
		<td > LWG 2511: guaranteed copy elision for piecewise construction </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0476R0 </td>
		<td > Bit-casting object representations </td>
		<td > JF Bastien </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0477R0 </td>
		<td > std::monostate_function&lt;> </td>
		<td > Matt Calabrese </td>
		<td > 2016-10-14 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0478R0 </td>
		<td > Template argument deduction for non-terminal function parameter packs </td>
		<td > Bruno Manganelli, Michael Wong, Simon Brand </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0479R0 </td>
		<td > Attributes for Likely and Unlikely Branches </td>
		<td > Clay Trychta  </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0480R0 </td>
		<td > Explicit type checking with structured bindings </td>
		<td > Ville Voutilainen </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0481R0 </td>
		<td > Bravely Default </td>
		<td > Tony Van Eerd </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0482R0 </td>
		<td > char8_t: A type for UTF-8 characters and strings </td>
		<td > Tom Honermann </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0483R0 </td>
		<td > Extending Memory Management Tools, And a Bit More </td>
		<td > Patrice Roy </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0484R0 </td>
		<td > Enhancing Thread Constructor Attributes </td>
		<td > Patrice Roy, Billy Baker, Arthur O'Dwyer </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0485R0 </td>
		<td > Amended rules for Partial Ordering of function templates </td>
		<td > Bruno Manganelli, Michael Wong, Simon Brand </td>
		<td > 2016-10-16 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0486R0 </td>
		<td > for_each_iter algorithm proposal </td>
		<td > Ildus Nezametdinov, Patrice Roy, </td>
		<td > 2016-10-15 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0487R0 </td>
		<td > Fixing operator>> (basic_istream&, CharT*) (LWG 2499) </td>
		<td > Zhihao Yuan </td>
		<td > 2016-10-17 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
 	<tr >
		<td > P0488R0 </td>
		<td > WG21 Working paper: NB Comments, ISO/IEC CD 14882 </td>
		<td > Barry Hedquist </td>
		<td > 2016-10-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
 	<tr >
		<td > P0489R0 </td>
		<td > WG21 Working paper: Late Comments on CD 14882 </td>
		<td > Barry Hedquist </td>
		<td > 2016-10-18 </td>
		<td > 2016-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>


<!-- end pre-Issaquah -->


        <tr>
            <th colspan="8">2016-11 post-Issaquah</th>
        </tr>

<!-- begin post-Issaquah -->

	<tr >
		<td > N4615 </td>
		<td > WG21 2016-10-28 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-10-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4616 </td>
		<td > Response to NB Comments: SC22 N5097, ISO/IEC PDTS 19568 Part 2, Library Fundamentals, Part 2 </td>
		<td > Barry Hedquist </td>
		<td > 2016-11-12 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4617 </td>
		<td > Programming Languages -- C++ Extensions for Library Fundamentals,
Version 2 DTS </td>
		<td > Geoffrey Romer </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4618 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > N4606 </td>
		<td > WG21 </td>
		<td > Revised N4640  </td>
	</tr>
	<tr >
		<td > N4619 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4620 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4621 </td>
		<td > Editor's Report for the Ranges TS </td>
		<td > Casey Carter </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4622 </td>
		<td > Programming Languages -- C++ Extensions for Ranges PDTS </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4623 </td>
		<td > WG21 2016-11 Issaquah Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4624 </td>
		<td > PL22.16 2016-11 Issaquah Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4625 </td>
		<td > Programming Languages -- C++ Extensions for Networking PDTS </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4626 </td>
		<td > Working Draft, C++ Extensions for
Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > N4612 </td>
		<td > WG21 </td>
		<td > Revised N4656 </td>
	</tr>
	<tr >
		<td > N4627 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4628 </td>
		<td > Working Draft, Technical Specification on C++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Revised N4649 </td>
	</tr>
	<tr >
		<td > N4629 </td>
		<td > Editor's report for the Coroutines TS </td>
		<td > Gor Nishanov </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4630 </td>
		<td > Working Draft, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > N4549 </td>
		<td > WG21 </td>
		<td > Revised N4641  </td>
	</tr>
	<tr >
		<td > N4631 </td>
		<td > Editor's report for the Concepts TS </td>
		<td > Andrew Sutton </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0003R5 </td>
		<td > Removing Deprecated Exception Specifications from C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0003R4 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0019R4 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0019R3 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0020R4 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0020R3 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0053R3 </td>
		<td > DRAFT C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis </td>
		<td > 2016-11-12 </td>
		<td > 2016-11 </td>
		<td > P0053R2 </td>
		<td > Library Evolution, Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0057R7 </td>
		<td > Wording for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0057R6 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0067R5 </td>
		<td > Elementary string conversions, revision 5 </td>
		<td > Jens Maurer </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0067R4 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0100R2 </td>
		<td > Comparison in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td > P0100R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0156R1 </td>
		<td > Variadic lock_guard (Rev. 4) </td>
		<td > Mike Spertus </td>
		<td > 2016-10-21 </td>
		<td > 2016-11 </td>
		<td > P0156R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0195R2 </td>
		<td > Pack expansions in using-declarations </td>
		<td > Robert Haberlach, Richard Smith </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td > P0195R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0237R4 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2016-11-28 </td>
		<td > 2016-11 </td>
		<td > P0237R3 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0266R2 </td>
		<td > Lifting Restrictions on requires-Expressions </td>
		<td > Walter E. Brown </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td > P0266R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0270R2 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td > P0270R1 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0298R2 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0298R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0304R1 </td>
		<td > C++ Standard Library Issues Resolved Directly In Issaquah </td>
		<td > Marshall Clow </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0304R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0306R2 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td > P0306R1 </td>
		<td > Evolution, Core, WG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0329R2 </td>
		<td > Designated Initialization Wording </td>
		<td > Tim Shen, Richard Smith </td>
		<td > 2016-11-21 </td>
		<td > 2016-11 </td>
		<td > P0329R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0370R3 </td>
		<td > Ranges TS Design Updates Omnibus </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-11-17 </td>
		<td > 2016-11 </td>
		<td > P0370R2 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0403R1 </td>
		<td > Literal suffixes for basic_string_view </td>
		<td > Marshall Clow </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0403R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0414R2 </td>
		<td > Merging shared_ptr changes from Library Fundamentals to C++17 </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td > P0414R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0417R1 </td>
		<td > C++17 should refer to ISO/IEC 10646 2014 instead of 1994 (R1) </td>
		<td > Beman Dawes </td>
		<td > 2016-11-25 </td>
		<td > 2016-11 </td>
		<td > P0417R0 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0418R2 </td>
		<td > Fail or succeed: there is no atomic lattice </td>
		<td > JF Bastien </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0418R1 </td>
		<td > Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0426R1 </td>
		<td > Constexpr for std::char_traits </td>
		<td > Antony Polukhin </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td > P0426R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0430R1 </td>
		<td > File system library on non-POSIX-like operating systems </td>
		<td > Jason Liu, Hubert Tong </td>
		<td > 2016-11-24 </td>
		<td > 2016-11 </td>
		<td > P0430R0 </td>
		<td > Library, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0431R0 </td>
		<td > Correcting Evaluation Order for C++ </td>
		<td > Hyman Rosen </td>
		<td > 2016-09-14 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0435R1 </td>
		<td > Resolving LWG Issues re common_type </td>
		<td > Walter E. Brown </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0435R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0436R1 </td>
		<td > An Extensible Approach to Obtaining Selected Operators </td>
		<td > Walter E. Brown </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0436R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0440R1 </td>
		<td > Floating Point Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td > P0440R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0441R1 </td>
		<td > Ranges: Merging Writable and MoveWritable </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2016-11-17 </td>
		<td > 2016-11 </td>
		<td > P0441R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0464R1 </td>
		<td > Revisiting the meaning of "foo(ConceptName,ConceptName)" </td>
		<td > Tony Van Eerd, Botond Ballo  </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td > P0464R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0476R1 </td>
		<td > Bit-casting object representations </td>
		<td > JF Bastien </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td > P0476R0 </td>
		<td > Library Evolution, Library, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0490R0 </td>
		<td > Core language changes addressing National Body comments for CD C++17 </td>
		<td > Jens Maurer </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0492R0 </td>
		<td > Proposed Resolution of C++17 National Body Comments for Filesystem </td>
		<td > Beman Dawes, S. Davis Herring, Nicolai Josuttis, Jason Liu, Billy O'Neal, P.J. Plauger, Jonathan Wakely </td>
		<td > 2016-11-26 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0493R0 </td>
		<td > Atomic maximum/minimum </td>
		<td > Al Grant, Bronek Kozicki </td>
		<td > 2016-11-08 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library Evolution, Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0494R0 </td>
		<td > contiguous_container proposal </td>
		<td > Ildus Nezametdinov </td>
		<td > 2016-11-05 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0495R0 </td>
		<td > Concurrency Safety in C++ Data Structures </td>
		<td > Lawrence Crowl </td>
		<td > 2016-11-27 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0497R0 </td>
		<td > Fixes to shared_ptr support for arrays </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0500R0 </td>
		<td > Resolved Module TS (N4610) Issues </td>
		<td > Gabriel Dos Reis </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0502R0 </td>
		<td > Throwing out of a parallel algorithm terminates--but how? </td>
		<td > JF Bastien, Bryce Adelstein Lelbach, H. Carter Edwards </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0503R0 </td>
		<td > Correcting library usage of "literal type" </td>
		<td > Erich Keane </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0504R0 </td>
		<td > Revisiting in-place tag types for any/optional/variant </td>
		<td > Jonathan Wakely </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0505R0 </td>
		<td > Wording for GB 50 </td>
		<td > Howard Hinnant </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0507R0 </td>
		<td > Core Issue 1343: Sequencing of non-class initialization </td>
		<td > Jens Maurer </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0508R0 </td>
		<td > Wording for GB 58 </td>
		<td > Howard Hinnant </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0509R1 </td>
		<td > Updating "Restrictions on exception handling" </td>
		<td > James Dennett </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0510R0 </td>
		<td > Disallowing references, incomplete types, arrays, and empty variants </td>
		<td > Erich Keane </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0511R0 </td>
		<td > Deduction guide for std::array </td>
		<td > Zhihao Yuan </td>
		<td > 2016-11-09 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0512R0 </td>
		<td > Class Template Argument Deduction
Assorted NB resolution and issues </td>
		<td > Mike Spertus, Richard Smith, Faisal Vali </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0513R0 </td>
		<td > Poisoning the Hash </td>
		<td > Lisa Lippincott </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0514R0 </td>
		<td > Enhancing std::atomic_flag for waiting </td>
		<td > Olivier Giroux </td>
		<td > 2016-11-15 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0516R0 </td>
		<td > Clarify That shared_future's Copy Operations have Wide Contracts </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0517R0 </td>
		<td > Make future_error Constructible </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2016-11-10 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0519R0 </td>
		<td > Core Language Working Group "ready" Issues for the November, 2016 (Issaquah) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0520R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the November, 2016 (Issaquah) meeting </td>
		<td > William M. Miller </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0521R0 </td>
		<td > Proposed Resolution for CA 14 (shared_ptr use_count/unique) </td>
		<td > Stephan T. Lavavej </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0522R0 </td>
		<td > DR: Matching of template template-arguments excludes compatible templates </td>
		<td > James Touton, Hubert Tong </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0523R0 </td>
		<td > Wording for CH 10: Complexity of parallel algorithms </td>
		<td > Detlef Vollmann </td>
		<td > 2016-11-11 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0528R0 </td>
		<td > The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </td>
		<td > JF Bastien, Michael Spencer </td>
		<td > 2016-11-12 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0529R0 </td>
		<td > Wording changes for proposed
Modules TS extensions </td>
		<td > Richard Smith </td>
		<td > 2016-11-23 </td>
		<td > 2016-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>



<!-- end post-Issaquah -->

        <tr>
            <th colspan="8">2017-02 pre-Kona</th>
        </tr>
<!-- begin pre-Kona -->

	<tr >
		<td > N4632 </td>
		<td > PL22.16/WG21 draft agenda: 27 Feb - 4 Mar 2017, Kona, HI, US </td>
		<td > Clark Nelson </td>
		<td > 2016-12-13 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4633 </td>
		<td > 2017-11 Albuquerque WG21 meeting information </td>
		<td > Carter Edwards </td>
		<td > 2017-01-09 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4634 </td>
		<td > PL22.16 2016-11 Issaquah Minutes (final) </td>
		<td > Jonathan Wakely </td>
		<td > 2017-01-18 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4635 </td>
		<td > Pre-Kona WG21 Telecon Agenda </td>
		<td > Herb Sutter </td>
		<td > 2017-01-23 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4636 </td>
		<td > 2017-07-10-15 ISO WG21 C++
Standard Meeting in Toronto </td>
		<td > Michael Wong, Botond Ballo, JF Bastien, Hubert Tong, Patrice Roy, Tony Van Eerd,
Duncan Exon Smith </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4637 </td>
		<td > Working Draft, Extensions to C++ for
Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td > N4610 </td>
		<td > WG21 </td>
		<td > Revised N4647 </td>
	</tr>
	<tr >
		<td > N4638 </td>
		<td > Editor's Report for the Module TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4639 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4640 </td>
		<td > Working Draft, Standard for Programming
Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > N4618 </td>
		<td > WG21 </td>
		<td > Revised N4659 </td>
	</tr>
	<tr >
		<td > N4641 </td>
		<td > Working Draft, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > N4630 </td>
		<td > WG21 </td>
		<td > Revised N4674</td>
	</tr>
	<tr >
		<td > N4642 </td>
		<td > Editor's report for the Concepts TS </td>
		<td > Andrew Sutton </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0045R1 </td>
		<td > Qualified std::function signatures </td>
		<td > David Krauss </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0045R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0052R3 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0052R2 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R3 </td>
		<td > A proposal to add a ring span to the standard library </td>
		<td > Guy Davidson, Arthur O'Dwyer </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0059R2 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0082R2 </td>
		<td > For Loop Exit Strategies (Revision 3) </td>
		<td > Alan Talbot </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0082R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0091R4 </td>
		<td > Template argument deduction for class templates (Rev. 7) </td>
		<td > Mike Spertus, Faisal Vali, Richard Smith </td>
		<td > 2016-06-24 </td>
		<td > 2017-02 </td>
		<td > P0091R3 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0103R1 </td>
		<td > Overflow-Detecting and Double-Wide Arithmetic Operations </td>
		<td > Lawrence Crowl </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0103R0 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0104R1 </td>
		<td > Multi-Word Integer Operations and Types </td>
		<td > Lawrence Crowl </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0104R0 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0105R1 </td>
		<td > Rounding and Overflow in C++ </td>
		<td > Lawrence Crowl </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0105R0 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R4 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0122R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0165R4 </td>
		<td > C++ Standard Library Issues to be moved in Kona </td>
		<td > Marshall Clow </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0165R3 </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0190R3 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm,
Jens Maurer, Jeffrey Yasskin, JF Bastien </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0190R2 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R3 </td>
		<td > Static reflection </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0194R2 </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R3 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0214R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R3 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong, Paul McKenney, Arthur O'Dwyer, David Hollman </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0233R2 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R5 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0237R4 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0260R1 </td>
		<td > C++ Concurrent Queues </td>
		<td > Lawrence Crowl </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0260R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0261R2 </td>
		<td > C++ Distributed Counters </td>
		<td > Lawrence Crowl </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0261R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R3 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0267R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0275R1 </td>
		<td > A Proposal to add Classes and Functions Required for Dynamic Library Load </td>
		<td > Antony Polukhin </td>
		<td > 2017-01-28 </td>
		<td > 2017-02 </td>
		<td > P0275R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0288R1 </td>
		<td > A polymorphic wrapper for all Callable objects </td>
		<td > David Krauss </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0288R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0316R0 </td>
		<td > allocate_unique and allocator_delete </td>
		<td > Miro Knejp </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R2 </td>
		<td > polymorphic_allocator&lt;void> as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td > P0339R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0352R1 </td>
		<td > Smart References through Delegation (2nd revision) </td>
		<td > Hubert Tong, Faisal Vali </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0352R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R2 </td>
		<td > Extending &lt;chrono&gt; to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td > P0355R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0385R2 </td>
		<td > Static reflection: 
Rationale, design and evolution </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0385R1 </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0408R1 </td>
		<td > Efficient Access to basic stringbuf's Buffer </td>
		<td > Peter Sommerlad </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td > P0408R0 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0433R1 </td>
		<td > Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library </td>
		<td > Mike Spertus, Walter E. Brown </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0433R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0443R1 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown </td>
		<td > 2017-01-06 </td>
		<td > 2017-02 </td>
		<td > P0443R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0447R1 </td>
		<td > Introduction of std::colony to the standard library </td>
		<td > Patrice Roy, Guy Davidson, Matthew Bentley </td>
		<td > 2016-11-21 </td>
		<td > 2017-02 </td>
		<td > P0443R0 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0461R1 </td>
		<td > Proposed RCU C++ API </td>
		<td > Paul E. McKenney, Maged Michael, Michael Wong, Isabella Muerte, Arthur O'Dwyer, David Hollman </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0461R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0462R1 </td>
		<td > Marking memory order consume Dependency Chains </td>
		<td > Paul E. McKenney,  Torvald Riegel, Jeff Preshing, Hans Boehm, Clark Nelson, Olivier Giroux, Lawrence Crowl, JF Bastien, Micheal Wong </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0462R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0467R1 </td>
		<td > Iterator Concerns for Parallel Algorithms </td>
		<td > Alisdair Meredith </td>
		<td > 2016-11-10 </td>
		<td > 2017-02 </td>
		<td > P0467R0 </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0479R1 </td>
		<td > Attributes for Likely and Unlikely Branches </td>
		<td > Clay Trychta  </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td > P0479R0 </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0492R1 </td>
		<td > Proposed Resolution of C++17 National Body Comments for Filesystem </td>
		<td > Beman Dawes, S. Davis Herring, Nicolai Josuttis, Jason Liu, Billy O'Neal, P.J. Plauger, Jonathan Wakely </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td > P0492R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0501R0 </td>
		<td > C++ Module TS Issues List </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0506R0 </td>
		<td > use string_view for library function parameters
instead of const string &  / const char * </td>
		<td > Peter Sommerlad </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0515R0 </td>
		<td > Consistent comparison </td>
		<td > Herb Sutter </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0518R0 </td>
		<td > Allowing copies as arguments to function objects given to parallel algorithms in response to CH11 </td>
		<td > David S. Hollman, Jonathan Liffander, Michael Wong, Detlef Vollmann </td>
		<td > 2017-01-31 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0527R0 </td>
		<td > Implicitly move from rvalue references in return statements </td>
		<td > David Stone </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0532R0 </td>
		<td > On std::launder() </td>
		<td > Nico Josuttis </td>
		<td > 2017-01-14 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Core, Evolution, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0533R0 </td>
		<td > constexpr for &lt;cmath> and &lt;cstdlib> </td>
		<td > Edward J. Rosten / Oliver J. Rosten </td>
		<td > 2017-01-25 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > SG6, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0534R0 </td>
		<td > call/cc (call-with-current-continuation): A low-level API for stackful
context switching </td>
		<td > Oliver Kowalke </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0535R0 </td>
		<td > Generalized Unpacking and Parameter Pack Slicing </td>
		<td > Matthew Woehlke </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0536R0 </td>
		<td > Implicit Return Type and Allowing Anonymous Types as Return Values </td>
		<td > Matthew Woehlke </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0537R0 </td>
		<td > Allow Attributes on Template Explicit Instantiations </td>
		<td > Matthew Woehlke </td>
		<td > 2016-08-23 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0538R0 </td>
		<td > A Qualified Replacement for #pragma once </td>
		<td > Matthew Woehlke </td>
		<td > 2016-10-27 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0539R0 </td>
		<td > Wide Integer Class </td>
		<td > Antony Polukhin </td>
		<td > 2017-01-28 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0540R0 </td>
		<td > A Proposal to Add split/join of string/string_view to the
Standard Library </td>
		<td > Laurent Navarro </td>
		<td > 2017-01-21 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0541R0 </td>
		<td > Post-Increment on Input and Output Iterators </td>
		<td > Eric Niebler </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0542R0 </td>
		<td > Support for contract based programming in C++ </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0543R0 </td>
		<td > Saturation arithmetic </td>
		<td > Jens Maurer </td>
		<td > 2017-01-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0544R0 </td>
		<td > User Injection of Filesystems </td>
		<td > Titus Winters, Geoffrey Romer </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0545R0 </td>
		<td > Supporting offsetof for Stable-layout Classes </td>
		<td > Andrey Semashev  </td>
		<td > 2016-10-23 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0546R0 </td>
		<td > Span - foundation for the future </td>
		<td > Carter Edwards, Bryce Lelbach </td>
		<td > 2017-01-26 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0547R0 </td>
		<td > Assorted Object Concept Fixes </td>
		<td > Eric Niebler </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0548R0 </td>
		<td > common_type and duration </td>
		<td > Walter E. Brown </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0549R0 </td>
		<td > Adjuncts to std::hash </td>
		<td > Walter E. Brown </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0550R0 </td>
		<td > Transformation Trait uncvref </td>
		<td > Walter E. Brown </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0551R0 </td>
		<td > Thou Shalt Not Specialize std Function Templates! </td>
		<td > Walter E. Brown </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0552R0 </td>
		<td > enable_if vs. requires </td>
		<td > Walter E. Brown </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0553R0 </td>
		<td > Bit Operations </td>
		<td > Jens Maurer </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0554R0 </td>
		<td > Composition of Arithmetic Types </td>
		<td > John McFarlane </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Numerics, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0555R0 </td>
		<td > string_view for source_location </td>
		<td > Axel Naumann </td>
		<td > 2017-01-30 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0556R0 </td>
		<td > Integral power-of-2 operations </td>
		<td > Jens Maurer </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0557R0 </td>
		<td > Concepts: The Future of Generic Programming </td>
		<td > Bjarne Stroustrup </td>
		<td > 2017-01-31 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0558R0 </td>
		<td > Resolving atomic&lt;T> named base class inconsistencies </td>
		<td > Billy O'Neal, Jens Maurer </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0559R0 </td>
		<td > Operating principles for evolving C++ </td>
		<td > JC van Winkel, Jose Daniel Garcia, Ville Voutilainen, Roger Orr, Michael Wong, Sylvain Bonnal </td>
		<td > 2017-01-31 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0560R0 </td>
		<td > Class template deduction guides for "diamond operators" </td>
		<td > Miro Knejp </td>
		<td > 2017-02-01 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0561R0 </td>
		<td > RAII Interface for Deferred Reclamation </td>
		<td > Geoffrey Romer </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0562R0 </td>
		<td > Initialization List Symmetry </td>
		<td > Alan Talbot </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0563R0 </td>
		<td > Vector Front Operations </td>
		<td > Alan Talbot </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0564R0 </td>
		<td > Wording for three-way comparisons </td>
		<td > Jens Maurer </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0565R0 </td>
		<td > Prefix for operator as a pack generator and postfix operator[] for pack indexing </td>
		<td > Bengt Gustafsson </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0566R0 </td>
		<td > Proposed Wording for Concurrent Data
Structures: Hazard Pointer and
Read-Copy-Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0567R0 </td>
		<td > Asynchronous managed pointer for Heterogeneous computing </td>
		<td > Gordon Brown, Ruyman Reyes, Michael Wong </td>
		<td > 2017-01-30 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0568R0 </td>
		<td > Towards Better Embedded programming support for C++ and an update on the status of SG14, two years later </td>
		<td > Michael Wong </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > SG14, WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0569R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2016/07/18-2016/10/10 </td>
		<td > Michael Wong </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > SG5 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0570R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2016/12/14-2017/02/01 </td>
		<td > Michael Wong </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0571R0 </td>
		<td > Type Requirements for &lt;numeric> Algorithms </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0572R0 </td>
		<td > bit_sizeof and bit_offsetof </td>
		<td > Alex Christensen </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0573R0 </td>
		<td > Abbreviated Lambdas for Fun and Profit </td>
		<td > Barry Revzin </td>
		<td > 2017-02-03 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0574R0 </td>
		<td > Algorithm Complexity Constraints and Parallel Overloads </td>
		<td > Anthony Williams </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0575R0 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0576R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the February, 2016 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0577R0 </td>
		<td > Keep that Temporary! </td>
		<td > Zhihao Yuan </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0578R0 </td>
		<td > Static Reflection in a Nutshell </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0579R0 </td>
		<td > Constexpr for &lt;experimental/ranges/iterator> </td>
		<td > Casey Carter </td>
		<td > 2017-01-23 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0581R0 </td>
		<td > Standard Library Modules </td>
		<td > Gabriel Dos Reis, Billy O'Neal, Stephan T. Lavavej,
Jonathan Wakely </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0583R0 </td>
		<td > std::byte is the correct name </td>
		<td > Gabriel Dos Reis  </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0587R0 </td>
		<td > Concepts TS revisited </td>
		<td > Richard Smith, James Dennett </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0588R0 </td>
		<td > Simplifying implicit lambda capture </td>
		<td > Richard Smith, Daveed Vandevoorde </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0589R0 </td>
		<td > Tuple-based for loops </td>
		<td > Andrew Sutton </td>
		<td > 2017-02-04 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0590R0 </td>
		<td > A design static reflection </td>
		<td > Andrew Sutton, Herb Sutter </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Reflection </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0591R0 </td>
		<td > Utility functions to implement uses-allocator construction </td>
		<td > Pablo Halpern </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0592R0 </td>
		<td > To boldly suggest an overall plan for C++20 </td>
		<td > Ville Voutilainen </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0593R0 </td>
		<td > What to do with buffers that are not arrays, and undefined behavior thereof? </td>
		<td > Ville Voutilainen </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0594R0 </td>
		<td > Relative comparisons and std::less&lt;T*> </td>
		<td > Ville Voutilainen </td>
		<td > 2017-02-05 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0595R0 </td>
		<td > The "constexpr" Operator </td>
		<td > Daveed Vandevoorde </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0596R0 </td>
		<td > std::constexpr_trace and std::constexpr_assert </td>
		<td > Daveed Vandevoorde </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0597R0 </td>
		<td > std::constexpr_vector&lt;T> </td>
		<td > Daveed Vandevoorde </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0598R0 </td>
		<td > Reflect Through Values Instead of Types </td>
		<td > Daveed Vandevoorde </td>
		<td > 2017-02-02 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Reflection, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0599R0 </td>
		<td > US140: noxecept for hash functions </td>
		<td > Nicolai Josutti </td>
		<td > 2017-01-14 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0600R0 </td>
		<td > applying [[nodiscard]] for C++17 </td>
		<td > Nicolai Josutti </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0601R0 </td>
		<td > Establishing a direction for SIMD-enabled functions </td>
		<td > Clark Nelson </td>
		<td > 2017-02-06 </td>
		<td > 2017-02 </td>
		<td >  </td>
		<td > Concurrency, Evolution </td>
		<td > </td>
	</tr>


<!-- end pre-Kona -->

        <tr>
            <th colspan="8">2017-03 post-Kona</th>
        </tr>
<!-- begin post-Kona -->

	<tr >
		<td > N4643 </td>
		<td > National Body Comments for PDTS 19216, C++ Extensions for Networking </td>
		<td > Barry Hedquist </td>
		<td > 2017-02-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4644 </td>
		<td > National Body Comments for PDTS 21425, C++ Extensions for Ranges </td>
		<td > Barry Hedquist </td>
		<td > 2017-02-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4645 </td>
		<td > WG21 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-02-21 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4646 </td>
		<td > Withdrawn </td>
		<td >  </td>
		<td >  </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4647 </td>
		<td > Working Draft, Extensions to C++ for
Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-03-19 </td>
		<td > 2017-03 </td>
		<td > N4637 </td>
		<td > WG21 </td>
		<td > Revised N4667 </td>
	</tr>
	<tr >
		<td > N4648 </td>
		<td > Editor's Report for the Module TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-03-20 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4649 </td>
		<td > Working Draft, Technical Specification on C++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > N4628 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4650 </td>
		<td > Editor's report for the Coroutines TS </td>
		<td > Gor Nishanov </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4651 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2017-03-15 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4652 </td>
		<td > Editor's Report for the Ranges TS </td>
		<td > Casey Carter </td>
		<td > 2017-03-15 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4653 </td>
		<td > 2017-02 Kona Record of Discussion
ISO/IEC </td>
		<td > Jonathan Wakely </td>
		<td > 2017-03-14 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4654 </td>
		<td > WG21 2017-02 Kona Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-03-14 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4655 </td>
		<td > PL22.16 2017-02 Kona Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-03-14 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4656 </td>
		<td > Working Draft, C++ Extensions for
Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2017-03-17 </td>
		<td > 2017-03 </td>
		<td > N4626 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4657 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2017-03-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4658 </td>
		<td > Alternative accommodation
(student residence) for the
2017-07 Toronto WG21 Meeting </td>
		<td > Botond Ballo </td>
		<td > 2017-03-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4659 </td>
		<td > Working Draft, Standard for Programming
Language C++
Note: </td>
		<td > Richard Smith </td>
		<td > 2017-03-21 </td>
		<td > 2017-03 </td>
		<td > N4640 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4660 </td>
		<td > C++17 DIS Ballot Document </td>
		<td > Richard Smith </td>
		<td > 2017-03-21 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > N4661 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-03-21 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>

	<tr >
		<td > P0019R5 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2017-03-06 </td>
		<td > 2017-03 </td>
		<td > P0019R4 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0020R5 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2017-03-06 </td>
		<td > 2017-03 </td>
		<td > P0020R4 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0156R2 </td>
		<td > Variadic lock_guard (Rev. 4) </td>
		<td > Mike Spertus </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0156R1 </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0237R6 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2017-03-20 </td>
		<td > 2017-03 </td>
		<td > P0237R5 </td>
		<td > Library Evolution, SG14, Numerics </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0250R3 </td>
		<td > Wording improvements for initialization and thread ids (CWG 2046, 1784) </td>
		<td > Hans Boehm </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td > P0250R2 </td>
		<td > Core </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0261R3 </td>
		<td > C++ Distributed Counters </td>
		<td > Lawrence Crowl </td>
		<td > 2017-03-13 </td>
		<td > 2017-03 </td>
		<td > P0261R2 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0267R4 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink </td>
		<td > 2017-03-20 </td>
		<td > 2017-03 </td>
		<td > P0267R3 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0270R3 </td>
		<td > Removing C dependencies from signal handler wording </td>
		<td > Hans Boehm </td>
		<td > 2017-02-02 </td>
		<td > 2017-03 </td>
		<td > P0270R2 </td>
		<td > Core, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0290R2 </td>
		<td > apply() for synchronized_value&lt;T> </td>
		<td > Anthony Williams  </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td > P0290R1 </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0298R3 </td>
		<td > A byte type definition </td>
		<td > Neil MacIntosh </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0298R2 </td>
		<td > Library Evolution </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0409R2 </td>
		<td > Allow lambda capture [=, this] </td>
		<td > Thomas Koeppe </td>
		<td > 2017-03-04 </td>
		<td > 2017-03 </td>
		<td > P0409R1 </td>
		<td > Core </td>
		<td > Adopted 2017-07  </td>
	</tr>
	<tr >
		<td > P0430R2 </td>
		<td > File system library on non-POSIX-like operating systems </td>
		<td > Jason Liu, Hubert Tong </td>
		<td > 2017-02-28 </td>
		<td > 2017-03 </td>
		<td > P0430R1 </td>
		<td > Library, Library Evolution </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0433R2 </td>
		<td > Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library </td>
		<td > Mike Spertus, Walter E. Brown, Stephan T. Lavavej </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0433R1 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0447R2 </td>
		<td > Introduction of std::colony to the standard library </td>
		<td > Patrice Roy, Guy Davidson, Matthew Bentley </td>
		<td > 2017-02-11 </td>
		<td > 2017-03 </td>
		<td > P0447R1 </td>
		<td > Library Evolution, SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0452R1 </td>
		<td > Unifying &lt;numeric> Parallel Algorithms </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2017-03-01 </td>
		<td > 2017-03 </td>
		<td > P0452R0 </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0464R2 </td>
		<td > Revisiting the meaning of "foo(ConceptName,ConceptName)" </td>
		<td > Tony Van Eerd, Botond Ballo  </td>
		<td > 2017-03-12 </td>
		<td > 2017-03 </td>
		<td > P0464R1 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0467R2 </td>
		<td > Iterator Concerns for Parallel Algorithms </td>
		<td > Alisdair Meredith </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td > P0467R1 </td>
		<td > Concurrency, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0492R2 </td>
		<td > Proposed Resolution of C++17 National Body Comments for Filesystem </td>
		<td > Beman Dawes, S. Davis Herring, Nicolai Josuttis, Jason Liu, Billy O'Neal, P.J. Plauger, Jonathan Wakely </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0492R1 </td>
		<td > Library </td>
		<td > Adopted 2017-03  </td>
	</tr>
	<tr >
		<td > P0501R1 </td>
		<td > C++ Module TS Issues List </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-03-19 </td>
		<td > 2017-03 </td>
		<td > P0501R0 </td>
		<td > Core, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0511R1 </td>
		<td > Deduction guide for std::array </td>
		<td > Zhihao Yuan </td>
		<td > 2017-02-24 </td>
		<td > 2017-03 </td>
		<td > P0511R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0518R1 </td>
		<td > Allowing copies as arguments to function objects given to parallel algorithms in response to CH11 </td>
		<td > David S. Hollman, Jonathan Liffander, Michael Wong, Detlef Vollmann </td>
		<td > 2017-03-01 </td>
		<td > 2017-03 </td>
		<td > P0518R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0523R1 </td>
		<td > Wording for CH 10: Complexity of parallel algorithms </td>
		<td > Detlef Vollmann </td>
		<td > 2017-03-01 </td>
		<td > 2017-03 </td>
		<td > P0523R0 </td>
		<td > Concurrency, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0548R1 </td>
		<td > common_type and duration </td>
		<td > Walter E. Brown </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0548R0 </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0553R1 </td>
		<td > Bit Operations </td>
		<td > Jens Maurer </td>
		<td > 2017-03-19 </td>
		<td > 2017-03 </td>
		<td > P0553R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0556R1 </td>
		<td > Integral power-of-2 operations </td>
		<td > Jens Maurer </td>
		<td > 2017-03-19 </td>
		<td > 2017-03 </td>
		<td > P0556R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0558R1 </td>
		<td > Resolving atomic&lt;T> named base class inconsistencies </td>
		<td > Billy O'Neal </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0558R0 </td>
		<td > Concurrency, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0574R1 </td>
		<td > Algorithm Complexity Constraints and Parallel Overloads </td>
		<td > Anthony Williams </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td > P0574R0 </td>
		<td > Concurrency, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0575R1 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0575R0 </td>
		<td > Core </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0575R2 </td>
		<td > Core Language Working Group "ready" Issues for the February, 2016 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0575R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0576R1 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the February, 2016 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td > P0576R0 </td>
		<td > Core </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0582R0 </td>
		<td > Modules: Contexts of template instantiations and name lookup </td>
		<td > Gabriel Dos Reis  </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Core, Evolution </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0591R1 </td>
		<td > Utility functions to implement uses-allocator construction </td>
		<td > Pablo Halpern </td>
		<td > 2017-03-09 </td>
		<td > 2017-03 </td>
		<td > P0591R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0599R1 </td>
		<td > US140: noxecept for hash functions </td>
		<td > Nicolai Josutti </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td > P0599R0 </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0602R0 </td>
		<td > variant and optional should propagate copy/move triviality </td>
		<td > Zhihao Yuan </td>
		<td > 2017-02-04 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0603R0 </td>
		<td > safe memcpy: A simpler implementation primitive for seqlock and friends </td>
		<td > Andrew Hunter </td>
		<td > 2017-03-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0604R0 </td>
		<td > Resolving GB 55, US 84, US 85, US 86 </td>
		<td > Daniel Krugler, Pablo Halpern, Jonathan Wakely </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0606R0 </td>
		<td > Concepts Are Ready </td>
		<td > Gabriel Dos Reis  </td>
		<td > 2017-02-25 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0607R0 </td>
		<td > Inline Variables for the Standard Library </td>
		<td > Daniel Krugler </td>
		<td > 2017-02-27 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0608R0 </td>
		<td > A sane variant converting constructor (LEWG 227) </td>
		<td > Zhihao Yuan </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0609R0 </td>
		<td > Attributes
for Structured Bindings </td>
		<td > Aaron Ballman </td>
		<td > 2017-03-04 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0610R0 </td>
		<td > C++ Standard Library "Review" Issues Resolved in Kona </td>
		<td > Marshall Clow </td>
		<td > 2017-03-04 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0611R0 </td>
		<td > More Better Operators </td>
		<td > Lawrence Crowl </td>
		<td > 2017-03-18 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0612R0 </td>
		<td > NB comment CH 2: volatile </td>
		<td > Jens Maurer </td>
		<td > 2017-02-27 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0613R0 </td>
		<td > NB comment GB15: Resolution of Core Issue 2011 </td>
		<td > William M. Miller </td>
		<td > 2017-02-27 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0614R0 </td>
		<td > Range-based for statements with initializer </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-03-18 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0615R0 </td>
		<td > Renaming for structured bindings </td>
		<td > Jens Maurer </td>
		<td > 2017-03-01 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0618R0 </td>
		<td > Deprecating &lt;codecvt> </td>
		<td > Alisdair Meredith </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0619R0 </td>
		<td > Reviewing Deprecated Facilities of C++17 for C++20 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej, Tomasz Kamin&#x301;ski </td>
		<td > 2017-03-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0620R0 </td>
		<td > Drafting for class template argument deduction issues </td>
		<td > Jason Merrill </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0621R0 </td>
		<td > Ready Ranges TS Issues </td>
		<td > Casey Carter </td>
		<td > 2017-03-02 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0622R0 </td>
		<td > Additional Core Language Working Group "ready" and "tentatively ready" Issues for the February, 2017 (Kona) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0623R0 </td>
		<td > Final C++17 Parallel Algorithms Fixes </td>
		<td > Bryce Adelstein Lelbach, Alisdair Meredith, Anthony Williams </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > Adopted 2017-03 </td>
	</tr>
	<tr >
		<td > P0624R0 </td>
		<td > Default constructible stateless lambdas </td>
		<td > Louis Dionne </td>
		<td > 2017-03-20 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0625R0 </td>
		<td > C++ Standard Library Issues Resolved Directly In Kona </td>
		<td > Marshall Clow </td>
		<td > 2017-03-03 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0627R0 </td>
		<td > Attribute to mark unreachable code </td>
		<td > Melissa Mears </td>
		<td > 2017-03-14 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0629R0 </td>
		<td > Module interface vs. imiplementation </td>
		<td > Gabriel Dos Reis, Jason Merrill, Nathan Sidwell </td>
		<td > 2017-03-17 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0630R0 </td>
		<td > To boldly suggest a pub crawl for C++ Toronto </td>
		<td > Duncan P.N. Exon Smith </td>
		<td > 2017-03-19 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0631R0 </td>
		<td > Math Constants </td>
		<td > Lev Minkovsky </td>
		<td > 2017-03-19 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Library Evolution, Numerics </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0632R0 </td>
		<td > Proposal of [[uninitialized]] attribute </td>
		<td > Jonathan M&uuml;ller </td>
		<td > 2017-01-19 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0633R0 </td>
		<td > Exploring the design space of metaprogramming and reflection </td>
		<td > Daveed Vandevoorde, Louis Dionne </td>
		<td > 2017-03-20 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Reflection </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0634R0 </td>
		<td > Down with `typename`! </td>
		<td > Daveed Vandevoorde </td>
		<td > 2017-03-05 </td>
		<td > 2017-03 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>


<!-- end post-Kona -->

        <tr>
            <th colspan="8">2017-06 pre-Toronto</th>
        </tr>
<!-- begin pre-Toronto -->

	<tr >
		<td > N4662 </td>
		<td > PL22.16/WG21 draft agenda: 10-15 Jul 2017, Toronto, ON, CA </td>
		<td > Clark Nelson </td>
		<td > 2017-03-27 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4663 </td>
		<td > Coroutines PDTS document </td>
		<td > Gor Nishanov </td>
		<td > 2017-03-25 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4664 </td>
		<td > Responses to National Body Comments for ISO/IEC CD 14882 </td>
		<td > Barry Hedquist </td>
		<td > 2017-03-30 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4665 </td>
		<td > WG21 telecon meeting: Pre-Toronto </td>
		<td > Herb Sutter </td>
		<td > 2017-06-01 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4666 </td>
		<td > National Body Comments, SC22 N 5205, ISO/IEC PDTS 22277, C++ Extensions for Coroutines </td>
		<td > Barry Hedquist </td>
		<td > 2017-06-05 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4667 </td>
		<td > Working Draft, Extensions to C++ for
Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-03-19 </td>
		<td > 2017-06 </td>
		<td > N4647 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4668 </td>
		<td > Editor's Report for the Module TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4669 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > N4578 </td>
		<td > WG21 </td>
		<td > Revised N4698 </td>
	</tr>
	<tr >
		<td > N4670 </td>
		<td > Parallelism TS Editor's Report, pre-Toronto
mailing </td>
		<td > Jared Hoberock </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4671 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Casey Carter </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4672 </td>
		<td > Editor's Report for the Ranges TS </td>
		<td > Casey Carter </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4673 </td>
		<td > Spring 2018 WG21 Meeting Information (Rapperswil) </td>
		<td > Peter Sommerlad </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4674 </td>
		<td > Working Draft, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > N4641 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4675 </td>
		<td > Editor's report for the Concepts TS </td>
		<td > Andrew Sutton </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0052R4 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td > P0052R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0053R4 </td>
		<td > DRAFT C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis </td>
		<td > 2017-03-02 </td>
		<td > 2017-06 </td>
		<td > P0053R3 </td>
		<td > Library Evolution, Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0053R5 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis, Pablo Halpern </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0053R4 </td>
		<td > Library Evolution, Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0059R4 </td>
		<td > A proposal to add a ring span to the standard library </td>
		<td > Guy Davidson, Arthur O'Dwyer </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0059R3 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R5 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh </td>
		<td > 2017-06-17 </td>
		<td > 2017-06 </td>
		<td > P0122R4 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0194R4 </td>
		<td > Static reflection </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0194R3 </td>
		<td > SG7, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R3 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0196R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0208R1 </td>
		<td > Copy-swap Transaction </td>
		<td > Pablo Halpern </td>
		<td > 2017-06-17 </td>
		<td > 2017-06 </td>
		<td > P0208R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R4 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0214R3 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R4 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong, Paul McKenney, Arthur O'Dwyer, David Hollman, Geoffrey Romer, Andrew Hunter </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0233R3 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R7 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0237R6 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0238R1 </td>
		<td > Return type deduction and SFINAE </td>
		<td > Tomasz Kami_ski  </td>
		<td > 2017-05-08 </td>
		<td > 2017-06 </td>
		<td > P0238R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0244R2 </td>
		<td > Text_view: A C++ concepts and range based character encoding
and code point enumeration library </td>
		<td > Tom Honermann </td>
		<td > 2017-06-13 </td>
		<td > 2017-06 </td>
		<td > P0244R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R5 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink, Guy Davidson </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0267R4 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0306R3 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas Koeppe </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0306R2 </td>
		<td > Evolution, Core, WG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0312R1 </td>
		<td > Make Pointers to Members Callable </td>
		<td > Barry Revzin </td>
		<td > 2017-06-07 </td>
		<td > 2017-06 </td>
		<td > P0312R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0315R2 </td>
		<td > Lambdas in unevaluated context </td>
		<td > Louis Dionne </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0315R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0319R1 </td>
		<td > Adding Emplace functions for promise&lt;T>/future&lt;T> </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0319R0 </td>
		<td > Library Evolution, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R2 </td>
		<td > A proposal to add a utility class to represent expected object (Revision 4) </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0323R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0327R2 </td>
		<td > Product types access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0327R1 </td>
		<td > Evolution, SG7, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0329R3 </td>
		<td > Designated Initialization Wording </td>
		<td > Tim Shen, Richard Smith </td>
		<td > 2017-06-06 </td>
		<td > 2017-06 </td>
		<td > P0329R2 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0338R2 </td>
		<td > C++ generic factories </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0338R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R3 </td>
		<td > polymorphic_allocator&lt;void> as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&uuml;hl </td>
		<td > 2017-05-29 </td>
		<td > 2017-06 </td>
		<td > P0339R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0343R1 </td>
		<td > Meta-programming High-Order Functions </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0343R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R3 </td>
		<td > Extending &lt;code>&lt;chrono&gt;&lt;/code> to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0355R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0407R1 </td>
		<td > Allocator-aware basic stringbuf </td>
		<td > Peter Sommerlad </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > P0407R0 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0408R2 </td>
		<td > Efficient Access to basic stringbuf's Buffer </td>
		<td > Peter Sommerlad </td>
		<td > 2017-06-07 </td>
		<td > 2017-06 </td>
		<td > P0408R1 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0425R0 </td>
		<td > Metaprogramming by design, not by accident </td>
		<td > Louis Dionne </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0428R1 </td>
		<td > Familiar template syntax for generic lambdas </td>
		<td > Louis Dionne </td>
		<td > 2017-05-16 </td>
		<td > 2017-06 </td>
		<td > P0428R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0429R1 </td>
		<td > A Standard flat_map </td>
		<td > Zach Laine </td>
		<td > 2017-08-31 </td>
		<td > 2017-06 </td>
		<td > P0429R0 </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0433R3 </td>
		<td > Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library </td>
		<td > Mike Spertus, Walter E. Brown, Stephan T. Lavavej </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0433R2 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0447R3 </td>
		<td > Introduction of std::colony to the standard library </td>
		<td > Patrice Roy, Guy Davidson, Matthew Bentley </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td > P0447R2 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0448R1 </td>
		<td > A strstream replacement using span&lt;charT> as </td>
		<td > Peter Sommerlad </td>
		<td > 2017-06-07 </td>
		<td > 2017-06 </td>
		<td > P0448R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0484R1 </td>
		<td > Enhancing Thread Constructor Attributes </td>
		<td > Patrice Roy, Billy Baker, Arthur O'Dwyer </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0484R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0501R2 </td>
		<td > C++ Module TS Issues List </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0501R1 </td>
		<td > Core, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0506R1 </td>
		<td > use string_view for library function parameters
instead of const string &  / const char * </td>
		<td > Peter Sommerlad </td>
		<td > 2017-06-06 </td>
		<td > 2017-06 </td>
		<td > P0506R0 </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0514R1 </td>
		<td > Enhancing std::atomic_flag for waiting </td>
		<td > Olivier Giroux </td>
		<td > 2017-06-14 </td>
		<td > 2017-06 </td>
		<td > P0514R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0515R1 </td>
		<td > Consistent comparison </td>
		<td > Herb Sutter </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td > P0515R0 </td>
		<td > Evolution, Library Evolution, Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0534R1 </td>
		<td > call/cc (call-with-current-continuation): A low-level API for stackful
context switching </td>
		<td > Oliver Kowalke </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0534R0 </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0539R1 </td>
		<td > A Proposal to add wide_int Template Class </td>
		<td > Igor Klevanets, Antony Polukhin </td>
		<td > 2017-06-05 </td>
		<td > 2017-06 </td>
		<td > P0539R0 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0542R1 </td>
		<td > Support for contract based programming in C++ </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td > P0542R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0547R1 </td>
		<td > Ranges TS: Assorted Object Concept Fixes </td>
		<td > Eric Niebler </td>
		<td > 2017-06-10 </td>
		<td > 2017-06 </td>
		<td > P0547R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0549R1 </td>
		<td > Adjuncts to std::hash </td>
		<td > Walter E. Brown </td>
		<td > 2017-06-11 </td>
		<td > 2017-06 </td>
		<td > P0549R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0550R1 </td>
		<td > Transformation Trait uncvref </td>
		<td > Walter E. Brown </td>
		<td > 2017-06-11 </td>
		<td > 2017-06 </td>
		<td > P0550R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0561R1 </td>
		<td > RAII Interface for Deferred Reclamation </td>
		<td > Geoffrey Romer </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td > P0561R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0566R1 </td>
		<td > Proposed Wording for Concurrent Data
Structures: Hazard Pointer and
Read-Copy-Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0566R0 </td>
		<td > Concurrency, SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0567R1 </td>
		<td > Asynchronous managed pointer for Heterogeneous computing </td>
		<td > Gordon Brown, Ruyman Reyes, Michael Wong </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td > P0567R0 </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0572R1 </td>
		<td > bit_sizeof and bit_offsetof </td>
		<td > Alex Christensen </td>
		<td > 2017-06-01 </td>
		<td > 2017-06 </td>
		<td > P0572R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0573R1 </td>
		<td > Abbreviated Lambdas for Fun and Profit </td>
		<td > Barry Revzin </td>
		<td > 2017-06-04 </td>
		<td > 2017-06 </td>
		<td > P0573R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0578R1 </td>
		<td > Static Reflection in a Nutshell </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0578R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0584R0 </td>
		<td > Module Interface and Preamble </td>
		<td > Gabriel Dos Reis  </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0591R2 </td>
		<td > Utility functions to implement uses-allocator construction </td>
		<td > Pablo Halpern </td>
		<td > 2017-06-12 </td>
		<td > 2017-06 </td>
		<td > P0591R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0602R1 </td>
		<td > variant and optional should propagate copy/move triviality </td>
		<td > Zhihao Yuan </td>
		<td > 2017-04-30 </td>
		<td > 2017-06 </td>
		<td > P0602R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0616R0 </td>
		<td > de-pessimize legacy &lt;numeric> algorithms with
std::move </td>
		<td > Peter Sommerlad </td>
		<td > 2017-06-06 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0619R1 </td>
		<td > Reviewing Deprecated Facilities of C++17 for C++20 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej, Tomasz Kamin&#x301;ski </td>
		<td > 2017-03-19 </td>
		<td > 2017-06 </td>
		<td > P0619R0 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0627R1 </td>
		<td > Attribute to mark unreachable code </td>
		<td > Melissa Mears </td>
		<td > 2017-06-12 </td>
		<td > 2017-06 </td>
		<td > P0627R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0635R0 </td>
		<td > Add c_array method to std::array </td>
		<td > Dan Raviv </td>
		<td > 2017-06-09 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0636R0 </td>
		<td > Changes between C++14 and C++17 </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-04-02 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > All </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0636R1 </td>
		<td > Changes between C++14 and C++17 </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > P0636R0 </td>
		<td > All </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0637R0 </td>
		<td > Capture *this with initialize </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0638R0 </td>
		<td > Crochemore-Perrin search algorithm for std::search </td>
		<td > Ed Schouten </td>
		<td > 2017-05-03 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0639R0 </td>
		<td > Changing attack vector of the constexpr_vector </td>
		<td > Antony Polukhin, Alexander Zaitsev </td>
		<td > 2017-06-14 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0640R0 </td>
		<td > User-defined exception information and diagnostic information in exception objects </td>
		<td > Emil Dotchevski, Peter Dimov </td>
		<td > 2017-04-15 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0641R0 </td>
		<td > Resolving Core Issue #1331 (const mismatch with defaulted copy constructor) </td>
		<td > Daniel Krugler, Botond Ballo </td>
		<td > 2017-04-17 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0642R0 </td>
		<td > Structural Support for C++ Concurrency </td>
		<td > Mingxin Wang </td>
		<td > 2017-05-26 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency, SG8, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0644R0 </td>
		<td > Forward without forward </td>
		<td > Barry Revzin </td>
		<td > 2017-06-11 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0645R0 </td>
		<td > Text Formatting </td>
		<td > Victor Zverovich </td>
		<td > 2017-05-22 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0646R0 </td>
		<td > Improving the Return Value of Erase-Like Algorithms </td>
		<td > Marc Mutz </td>
		<td > 2017-05-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0647R0 </td>
		<td > Floating point value access for std::ratio </td>
		<td > Peter Sommerlad </td>
		<td > 2017-05-20 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0648R0 </td>
		<td > Extending Tuple-like algorithms to Product-Typ </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG7, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0650R0 </td>
		<td > C++ Monadic interface </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0651R0 </td>
		<td > Switch the Ranges TS to Use Variable Concepts </td>
		<td > Eric Niebler </td>
		<td > 2017-06-17 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0652R0 </td>
		<td > Concurrent associative data structure with
unsynchronized view </td>
		<td > Anton Malakhov, Sergey Murylev, Antony Polukhin </td>
		<td > 2017-06-14 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0653R0 </td>
		<td > pointer_traits utility to convert to raw pointer </td>
		<td > Glen Joseph Fernandes </td>
		<td > 2017-05-28 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0654R0 </td>
		<td > Explicit struct </td>
		<td > Loic Joly </td>
		<td > 2017-06-05 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0656R0 </td>
		<td > Reducing &lt;ratio> </td>
		<td > Walter Brown </td>
		<td > 2017-06-11 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Numerics, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0657R0 </td>
		<td > Deprecate Certain Declarations in the Global Namespace </td>
		<td > Walter Brown </td>
		<td > 2017-06-11 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0658R0 </td>
		<td > Proposal for adding alias declarations to concepts </td>
		<td > Christopher Di Bella </td>
		<td > 2017-06-11 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0659R0 </td>
		<td > Adding status() to std::future </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-03-02 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0660R0 </td>
		<td > A Cooperatively Interruptible Joining Thread </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0661R0 </td>
		<td > slot_map Container in C++ </td>
		<td > Allan Deutsch </td>
		<td > 2017-06-12 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0662R0 </td>
		<td > Wording for Ranges TS Issue 345 / US-2:
Update ranged-for-loop wording </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2017-06-13 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td >  </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0663R0 </td>
		<td > Ranges TS "Ready" Issues for the July 2017 (Toronto) meeting </td>
		<td > Casey Carter </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td >  </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0664R0 </td>
		<td > Coroutines TS Issues </td>
		<td > Gor Nishanov </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution, Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0665R0 </td>
		<td > Allowing Class Template Specializations in Unrelated Namespaces </td>
		<td > Tristan Brindle  </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0666R0 </td>
		<td > C++ Latches and Barriers </td>
		<td > Alasdair Mackintosh </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0667R0 </td>
		<td > The future of std::future extensions </td>
		<td > Hans-J. Boehm </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0668R0 </td>
		<td > Revising the C++ memory model </td>
		<td > Hans-J. Boehm, Olivier Giroux, Viktor Vafeiades </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0669R0 </td>
		<td > Why We Should Standardize 2D Graphics for C++ </td>
		<td > Guy Davidson, 
Michael B. McLaughlin </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0670R0 </td>
		<td > Static reflection of functions </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG7, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0671R0 </td>
		<td > Parametric Functions </td>
		<td > Axel Naumann </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0672R0 </td>
		<td > Implicit Evaluation of "auto" Variables </td>
		<td > Jo&euml;l Falcou, Peter Gottschling, Herb Sutter </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td > N4035 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0673R0 </td>
		<td > Merge Concurrency TS atomic pointers into C++20 working draft </td>
		<td > Herb Sutter </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0674R0 </td>
		<td > Extending make_shared to Support Arrays </td>
		<td > Peter Dimov, Glen Fernandes </td>
		<td > 2017-06-15 </td>
		<td > 2017-06 </td>
		<td > N3939 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0675R0 </td>
		<td > Numeric Traits for Type Composition </td>
		<td > John McFarlane </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Numerics, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0676R0 </td>
		<td > Towards a Good Future </td>
		<td > Felix Petriconi, David Sankel, Sean Parent </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0678R0 </td>
		<td > Business Requrements for Modules </td>
		<td > John Lakos </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0679R0 </td>
		<td > Forward progress vs. futures and continuations </td>
		<td > Torvald Riegel </td>
		<td > 2017-06-14 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0680R0 </td>
		<td > SG1 efficiency </td>
		<td > Torvald Riegel </td>
		<td > 2017-06-14 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0681R0 </td>
		<td > Precise Semantics for Assertions </td>
		<td > Lisa Lippincot </td>
		<td > 2017-06-16 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0682R0 </td>
		<td > Repairing elementary string conversions </td>
		<td > Jens Maurer </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0683R0 </td>
		<td > Default member initializers for bit-fields </td>
		<td > Jens Maurer </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0684R0 </td>
		<td > C++ Stability, Velocity, and Deployment Plans </td>
		<td > Titus Winters, Bjarne Stroustrup, Daveed Vandevoorde, Beman Dawes,
Michael Wong, Howard Hinnant </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0685R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2017/01/30-2017/06/05 </td>
		<td > Michael Wong </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG5 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0686R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2017/03/09-2017/06/14 </td>
		<td > Michael Wong </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0687R0 </td>
		<td > Data Movement in C++ </td>
		<td > Ruyman Reyes, Gordon Brown, Michael Wong, Hartmut Kaiser </td>
		<td > 2017-05-30 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG14, Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0688R0 </td>
		<td > A Proposal to Simplify the Unified Executors Design </td>
		<td > Chris Kohlhoff, Jared Hoberock, Chris Mysen, Gordon Brown </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0689R0 </td>
		<td > A Word about Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0690R0 </td>
		<td > Tearable Atomics </td>
		<td > JF Bastien, Billy Robert O'Neal III </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0691R0 </td>
		<td > Integrating Concepts: "Open" items for consideration </td>
		<td > John H. Spicer, Hubert S.K. Tong, Daveed Vandevoorde </td>
		<td > 2017-06-17 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0694R0 </td>
		<td > Function declarations using concepts </td>
		<td > Bjarne Stroustrup </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0695R0 </td>
		<td > Alternative concepts </td>
		<td > Bjarne Stroustrup </td>
		<td > 2017-02-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0696R0 </td>
		<td > Remove abbreviated functions and template-introduction syntax from the Concepts TS </td>
		<td > Tom Honermann </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0697R0 </td>
		<td > Clarifying the status of feature test macros </td>
		<td > Herb Sutter </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution, WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0698R0 </td>
		<td > C++ Standard Library Issues to be moved in Toronto </td>
		<td > Marshall Clow </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td >  </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0700R0 </td>
		<td > Alternatives to operator dot </td>
		<td > Bjarne Stroustrup </td>
		<td > 2017-02-21 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0701R0 </td>
		<td > Back to the std2::future </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0702R0 </td>
		<td > Language support for Constructor Template Argument Deduction </td>
		<td > Mike Spertus </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0703R0 </td>
		<td > Networking TS Issues </td>
		<td > David Sankel </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0704R0 </td>
		<td > Fixing const-qualified pointers to members </td>
		<td > Barry Revzin </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0705R0 </td>
		<td > Implicit and Explicit conversions </td>
		<td > Tony Van Eerd </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0706R0 </td>
		<td > Efficient headers for modules (or not) </td>
		<td > S. Davis Herring </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0707R0 </td>
		<td > Metaclasses </td>
		<td > Herb Sutter </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0710R0 </td>
		<td > Core Language Working Group "ready" Issues for the July, 2017 (Toronto) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td >  </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0711R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the July, 2017 (Toronto) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td >  </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0712R0 </td>
		<td > Implementing language support for compile-time programming </td>
		<td > Andrew Sutton, Herb Sutter </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0713R0 </td>
		<td > Identifying Module Source Code </td>
		<td > Daveed Vandevoorde </td>
		<td > 2017-06-18 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0716R0 </td>
		<td > Unified concept definition syntax </td>
		<td > Richard Smith, Andrew Sutton </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0717R0 </td>
		<td > Semantic constraint matching for concepts </td>
		<td > Richard Smith, Andrew Sutton </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0718R0 </td>
		<td > Revising atomic_shared_ptr for C++20 </td>
		<td > Alisdair Meredith </td>
		<td > 2017-06-19 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0721R0 </td>
		<td > Exporting Using Declarations </td>
		<td > Nathan Sidwell </td>
		<td > 2017-06-20 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0722R0 </td>
		<td > Controlling destruction in delete expressions </td>
		<td > Richard Smith </td>
		<td > 2017-06-20 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0723R0 </td>
		<td > Response to "Clarifying the status of feature test macros" </td>
		<td > Clark Nelson, John Spicer </td>
		<td > 2017-06-22 </td>
		<td > 2017-06 </td>
		<td >  </td>
		<td > Evolution,WG21 </td>
		<td > </td>
	</tr>


<!-- end pre-Toronto -->

        <tr>
            <th colspan="8">2017-07 post-Toronto</th>
        </tr>
<!-- begin post-Toronto -->

	<tr >
		<td > N4676 </td>
		<td > WG21 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-06-30 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4677 </td>
		<td > WG21 / PL22.16 Meeting, Jacksonville, FL, March 12 - 17, 2018 </td>
		<td > Barry Hedquist </td>
		<td > 2017-07-07 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4678 </td>
		<td > National Body Comments for ISO/IEC PDTS 22277, C++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2017-07-29 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4679 </td>
		<td > Editor's report for the Coroutines TS </td>
		<td > Gor Nishanov </td>
		<td > 2017-07-29 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4680 </td>
		<td > C++ Extensions for Coroutines TS Document </td>
		<td > Gor Nishanov </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4681 </td>
		<td > Working Draft, Extensions to C++ for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > N4682 </td>
		<td > Editor's Report for the Module TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4683 </td>
		<td > Business Plan and Convener's Report </td>
		<td > Herb Sutter </td>
		<td > 2017-07-17 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4684 </td>
		<td > Ranges TS Ballot Document </td>
		<td > Casey Carter </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4685 </td>
		<td > Working Draft, C++ Extensions for Ranges </td>
		<td > Casey Carter </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4686 </td>
		<td > Editor's Report for the Ranges TS </td>
		<td > Casey Carter </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4687 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Revised N4700 </td>
	</tr>
	<tr >
		<td > N4688 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4689 </td>
		<td > Extensions to C++ for Modules Ballot Document </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4690 </td>
		<td > 2017-07 Toronto Record of Discussion </td>
		<td > Patrice Roy </td>
		<td > 2017-08-03 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4691 </td>
		<td > WG21 2017-07 Toronto Minutes </td>
		<td > Patrice Roy </td>
		<td > 2017-08-03 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4692 </td>
		<td > PL22.16 2017-07 Toronto Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-08-03 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0052R5 </td>
		<td > Generic Scope Guard and RAII Wrapper for the
Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td > P0052R4 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0053R6 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis, Pablo Halpern </td>
		<td > 2017-07-15 </td>
		<td > 2017-07 </td>
		<td > P0053R5 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0076R4 </td>
		<td > Vector and Wavefront Policies </td>
		<td > Arch Robison, Pablo Halpern, Robert Geva, Clark Nelson, Jens Maurer </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td > P0076R3 </td>
		<td > Library Evolution, Core </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0096R4 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2017-07-26 </td>
		<td > 2017-07 </td>
		<td > P0096R3 </td>
		<td > Feature Testing </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R3 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri, Boqun Feng </td>
		<td > 2017-06-26 </td>
		<td > 2017-07 </td>
		<td > P0124R2 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0190R4 </td>
		<td > Proposal for New memory order consume Definition </td>
		<td > Paul E. McKenney, Michael Wong, Hans Boehm,
Jens Maurer, Jeffrey Yasskin, JF Bastien </td>
		<td > 2017-07-28 </td>
		<td > 2017-07 </td>
		<td > P0190R3 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R5 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td > P0214R4 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R5 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong, Paul McKenney, Arthur O'Dwyer, David Hollman, Geoffrey Romer, Andrew Hunter </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td > P0233R4 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R8 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td > P0237R7 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0267R6 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++, </td>
		<td > Michael McLaughlin, Herb Sutter, Jason Zink, Guy Davidson </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td > P0267R5 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0306R4 </td>
		<td > Comma elision and comma deletion </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-07-12 </td>
		<td > 2017-07 </td>
		<td > P0306R3 </td>
		<td > Core, WG14 </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0329R4 </td>
		<td > Designated Initialization Wording </td>
		<td > Tim Shen, Richard Smith </td>
		<td > 2017-07-12 </td>
		<td > 2017-07 </td>
		<td > P0329R3 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0350R1 </td>
		<td > Integrating simd with parallel algorithms </td>
		<td > Matthias Kretz </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td > P0350R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0388R1 </td>
		<td > Permit conversions to arrays of unknown bound </td>
		<td > Robert Haberlach  </td>
		<td > 2017-07-15 </td>
		<td > 2017-07 </td>
		<td > P0388R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0428R2 </td>
		<td > Familiar template syntax for generic lambdas </td>
		<td > Louis Dionne </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td > P0428R1 </td>
		<td > Core </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0443R2 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td > P0443R1 </td>
		<td > Concurrency, </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0457R1 </td>
		<td > String Prefix and Suffix Checking </td>
		<td > Mikhail Maltsev </td>
		<td > 2017-07-16 </td>
		<td > 2017-07 </td>
		<td > P0457R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0463R1 </td>
		<td > endian, Just endian </td>
		<td > Howard Hinnant </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td > P0463R0 </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0534R2 </td>
		<td > call/cc (call-with-current-continuation): A low-level API for stackful
context switching </td>
		<td > Oliver Kowalke </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td > P0534R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0541R1 </td>
		<td > Ranges TS: Post-Increment on Input and Output Iterators </td>
		<td > Eric Niebler </td>
		<td > 2017-07-10 </td>
		<td > 2017-07 </td>
		<td > P0541R0 </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0547R2 </td>
		<td > Ranges TS: Assorted Object Concept Fixes </td>
		<td > Eric Niebler </td>
		<td > 2017-07-11 </td>
		<td > 2017-07 </td>
		<td > P0547R1 </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0550R2 </td>
		<td > Transformation Trait remove_cvref </td>
		<td > Walter E. Brown </td>
		<td > 2017-07-17 </td>
		<td > 2017-07 </td>
		<td > P0550R1 </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0566R2 </td>
		<td > Proposed Wording for Concurrent Data
Structures: Hazard Pointer and
Read-Copy-Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td > P0566R1 </td>
		<td > Concurrency, SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0579R1 </td>
		<td > Constexpr for &lt;experimental/ranges/iterator> </td>
		<td > Casey Carter </td>
		<td > 2017-07-10 </td>
		<td > 2017-07 </td>
		<td > P0579R0 </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0641R1 </td>
		<td > Resolving Core Issue #1331 (const mismatch with defaulted copy constructor) </td>
		<td > Daniel Krugler, Botond Ballo </td>
		<td > 2017-07-24 </td>
		<td > 2017-07 </td>
		<td > P0641R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0643R0 </td>
		<td > Omnibus paper:Toronto 2017 meeting </td>
		<td > Michael Wong </td>
		<td > 2017-06-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0647R1 </td>
		<td > Floating point value access for std::ratio </td>
		<td > Peter Sommerlad </td>
		<td > 2017-07-21 </td>
		<td > 2017-07 </td>
		<td > P0647R0 </td>
		<td > Library, Library Evolution, SG6 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0651R1 </td>
		<td > Switch the Ranges TS to Use Variable Concepts </td>
		<td > Eric Niebler </td>
		<td > 2017-07-10 </td>
		<td > 2017-07 </td>
		<td > P0651R0 </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0653R1 </td>
		<td > Utility to convert a pointer to a raw pointer </td>
		<td > Glen Joseph Fernandes </td>
		<td > 2017-07-21 </td>
		<td > 2017-07 </td>
		<td > P0653R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0664R1 </td>
		<td > Coroutines TS Issues </td>
		<td > Gor Nishanov </td>
		<td > 2017-06-18 </td>
		<td > 2017-07 </td>
		<td > P0664R0 </td>
		<td > Evolution, Core, Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0668R1 </td>
		<td > Revising the C++ memory model </td>
		<td > Hans-J. Boehm, Olivier Giroux, Viktor Vafeiades </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td > P0668R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0674R1 </td>
		<td > Extending make_shared to Support Arrays </td>
		<td > Peter Dimov, Glen Fernandes </td>
		<td > 2017-07-12 </td>
		<td > 2017-07 </td>
		<td > P0674R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0682R1 </td>
		<td > Repairing elementary string conversions </td>
		<td > Jens Maurer </td>
		<td > 2017-07-12 </td>
		<td > 2017-07 </td>
		<td > P0682R0 </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0683R1 </td>
		<td > Default member initializers for bit-fields </td>
		<td > Jens Maurer </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td > P0683R0 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0696R1 </td>
		<td > Remove abbreviated functions and template-introduction syntax from the Concepts TS </td>
		<td > Tom Honermann </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td > P0696R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0699R0 </td>
		<td > C++ Standard Library Issues Resolved Directly In Toronto </td>
		<td > Marshall Clow </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0702R1 </td>
		<td > Language support for Constructor Template Argument Deduction </td>
		<td > Mike Spertus, Jason Merrill </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td > P0702R0 </td>
		<td > Evolution, Core </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0704R1 </td>
		<td > Fixing const-qualified pointers to members </td>
		<td > Barry Revzin </td>
		<td > 2017-07-10 </td>
		<td > 2017-07 </td>
		<td > P0704R0 </td>
		<td > Evolution </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0707R1 </td>
		<td > Metaclasses: Generative C++ </td>
		<td > Herb Sutter </td>
		<td > 2017-07-25 </td>
		<td > 2017-07 </td>
		<td > P0707R0 </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0710R1 </td>
		<td > Core Language Working Group "ready" Issues for the July, 2017 (Toronto) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td > P0710R0 </td>
		<td > Core </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0714R0 </td>
		<td > Identically Named Namespaces and non-Exported Symbols </td>
		<td > Nathan Sidwell </td>
		<td > 2017-06-06 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0715R0 </td>
		<td > Exporting Using Directives </td>
		<td > Nathan Sidwell </td>
		<td > 2017-06-18 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0717R1 </td>
		<td > Semantic constraint matching for concepts </td>
		<td > Richard Smith, Andrew Sutton </td>
		<td > 2017-07-24 </td>
		<td > 2017-07 </td>
		<td > P0717R0 </td>
		<td > Posterity </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0724R0 </td>
		<td > Merge the Concepts TS Working Draft into the C++20 working draft </td>
		<td > Ville Voutilainen </td>
		<td > 2017-06-27 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0725R0 </td>
		<td > Remove the requirement for constrained-type-specifiers to be deduced to the same type from the Concepts TS </td>
		<td > Tom Honermann </td>
		<td > 2017-07-03 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0726R0 </td>
		<td > Does the Concepts TS Improve on C++17? </td>
		<td > Duncan P.N. Exon Smith </td>
		<td > 2017-07-07 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0727R0 </td>
		<td > Core Issue 1299: Temporary objects vs temporary expressions </td>
		<td > Jens Maurer </td>
		<td > 2017-07-10 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0728R0 </td>
		<td > Wording for Networking PDTS ballot comment 005 </td>
		<td > Jonathan Wakely </td>
		<td > 2017-07-11 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Networking </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0729R0 </td>
		<td > Proposed wording for Networking TS NB comment GB 9 </td>
		<td > Christopher Kohlhoff </td>
		<td > 2017-07-11 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Networking </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0730R0 </td>
		<td > Options for addressing requires-clause syntax ambiguities </td>
		<td > Hubert S.K. Tong </td>
		<td > 2017-07-11 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0730R1 </td>
		<td > Options for addressing requires-clause syntax ambiguities </td>
		<td > Hubert S.K. Tong </td>
		<td > 2017-07-12 </td>
		<td > 2017-07 </td>
		<td > P0730R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0731R0 </td>
		<td > Module Interface Imports </td>
		<td > Nathan Sidwell </td>
		<td > 2017-07-27 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0734R0 </td>
		<td > Wording Paper, C++ extensions for Concepts </td>
		<td > Andrew Sutton </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td > N4674 </td>
		<td > WG21 </td>
		<td > Adopted 2017-07  </td>
	</tr>
	<tr >
		<td > P0738R0 </td>
		<td > I Stream, You Stream, We All Stream for istream_iterator </td>
		<td > Casey Carter </td>
		<td > 2017-07-07 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0739R0 </td>
		<td > Some improvements to class template argument deduction integration into the standard library </td>
		<td > Mike Spertus, Walter E. Brown, Stephan T. Lavavej </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-07  </td>
	</tr>
	<tr >
		<td > P0740R0 </td>
		<td > Ranges TS "Immediate" Issues from the July 2017 (Toronto) meeting </td>
		<td > Casey Carter </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2017-07  </td>
	</tr>
	<tr >
		<td > P0742R0 </td>
		<td > Wording for Networking PDTS ballot comment resolutions </td>
		<td > Jonathan Wakely </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Networking </td>
		<td > Adopted 2017-07  </td>
	</tr>
	<tr >
		<td > P0746R0 </td>
		<td > Wording for Networking PDTS ballot comment 011 (US-10) </td>
		<td > Jonathan Wakely </td>
		<td > 2017-07-13 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Networking </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0747R0 </td>
		<td > Wording for Networking PDTS ballot comments 026 (GB-15) and 027 (GB-16) </td>
		<td > Jonathan Wakely </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Networking </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0747R1 </td>
		<td > Wording for Networking PDTS ballot comment 026 (GB-15), but not 027 (GB-16) </td>
		<td > Jonathan Wakely </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td > P0747R0 </td>
		<td > Networking </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0748R0 </td>
		<td > Wording for Networking PDTS ballot comments on reentrancy </td>
		<td > Jonathan Wakely </td>
		<td > 2017-07-14 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Networking </td>
		<td > Adopted 2017-07 </td>
	</tr>
	<tr >
		<td > P0749R0 </td>
		<td > Namespace Pervasiveness & Modules </td>
		<td > Nathan Sidwell </td>
		<td > 2017-07-27 </td>
		<td > 2017-07 </td>
		<td > P0714R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0753R0 </td>
		<td > Manipulators for C++ Synchronized Buffered Ostream </td>
		<td > Peter Sommerlad, Pablo Halpern </td>
		<td > 2017-07-15 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0754R0 </td>
		<td > &lt;version> </td>
		<td > Alan Talbot </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0758R0 </td>
		<td > Implicit conversion traits and utility functions </td>
		<td > Daniel Krugler </td>
		<td > 2017-07-30 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0759R0 </td>
		<td > fpos Requirements </td>
		<td > Daniel Krugler </td>
		<td > 2017-07-28 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0761R0 </td>
		<td > Executors Design Document </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown, Michael Wong </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0766R0 </td>
		<td > Fixing small-ish functionality gaps in constraints </td>
		<td > Ville Voutilainen </td>
		<td > 2017-07-31 </td>
		<td > 2017-07 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>


<!-- end post-Toronto -->

        <tr>
            <th colspan="8">2017-07 post-Toronto</th>
        </tr>

<!-- begin pre-Alb -->

	<tr >
		<td > N4693 </td>
		<td > PL22.16/WG21 draft agenda: 06-11 Nov 2017, Albuquerque, NM, US </td>
		<td > Clark Nelson </td>
		<td > 2017-08-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4694 </td>
		<td > Responses to National Body Comments to ISO/IEC PDTS 21425, C++ Extensions for Ranges </td>
		<td > Casey Carter </td>
		<td > 2017-08-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4695 </td>
		<td > Working Draft, C++ Extensions for
Networking </td>
		<td > Jonathan Wakely </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4696 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td >  </td>
		<td > missing </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4697 </td>
		<td > NB Comments, ISO/IEC PDTS 21544, C++ Extensions for Modules </td>
		<td > Barry Hedquist </td>
		<td > 2017-10-07 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4698 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > N4669 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4699 </td>
		<td > Parallelism TS Editor's Report </td>
		<td > Jared Hoberock </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4700 </td>
		<td > Working Draft, Standard for Programming
Language C++
Note: </td>
		<td > Richard Smith </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > N4687 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4701 </td>
		<td > Editor's Report -- Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>


	<tr >
		<td > P0009R4 </td>
		<td > Polymorphic Multidimensional Array Reference </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Robin Maffeo, Ben Sander, Athanasios Iliopoulos, John Michopoulos </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td > P0009R3 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0037R4 </td>
		<td > Fixed-point real numbers </td>
		<td > John McFarlane </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0037R3 </td>
		<td > Numerics, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0096R5 </td>
		<td > Feature-testing recommendations for C++ </td>
		<td > Clark Nelson </td>
		<td > 2017-10-09 </td>
		<td > 2017-10 </td>
		<td > P0096R4 </td>
		<td > SG10, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R4 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri, Boqun Feng </td>
		<td > 2017-09-25 </td>
		<td > 2017-10 </td>
		<td > P0124R3 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R4 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0196R3 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0201R2 </td>
		<td > A polymorphic value-type for C++ </td>
		<td > Jonathan Coe </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0201R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0202R2 </td>
		<td > Add Constexpr Modifiers to Functions in &lt;algorithm> and &lt;cstring> Headers </td>
		<td > Antony Polukhin </td>
		<td > 2017-09-12 </td>
		<td > 2017-10 </td>
		<td > P0202R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0214R6 </td>
		<td > Data-Parallel Vector Types & Operations </td>
		<td > Matthias Kretz </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0214R5 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0233R6 </td>
		<td > Hazard Pointers: Safe Reclamation for Optimistic Concurrency </td>
		<td > Maged M. Michael, Michael Wong, Paul McKenney, Arthur O'Dwyer, David Hollman, Geoffrey Romer, Andrew Hunter </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0233R5 </td>
		<td > Concurrency, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0237R9 </td>
		<td > Wording for fundamental bit manipulation utilities </td>
		<td > Vincent Reverdy, Robert J. Brunner </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0237R8 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0260R2 </td>
		<td > C++ Concurrent Queues </td>
		<td > Lawrence Crowl, Chris Mysen </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0260R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0275R2 </td>
		<td > A Proposal to add Classes and Functions Required for Dynamic Library Load </td>
		<td > Antony Polukhin </td>
		<td > 2017-09-12 </td>
		<td > 2017-10 </td>
		<td > P0275R1 </td>
		<td > Library Evolution, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0303R0 </td>
		<td > Extensions to C++ for Short Float Type </td>
		<td > Boris Fomitchev, Sergei Nikolaev, Olivier Giroux, Lawrence Crowl </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0315R3 </td>
		<td > Lambdas in unevaluated context </td>
		<td > Louis Dionne, Hubert Tong </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td > P0315R2 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R3 </td>
		<td > Utility class to represent expected object </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0323R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0327R3 </td>
		<td > Product types access </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0327R2 </td>
		<td > Evolution, SG7, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0330R1 </td>
		<td > User-Defined Literals for size_t </td>
		<td > Rein Halbersma </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td > P0330R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0332R1 </td>
		<td > Relaxed Incomplete Multidimensional Array Type Declaration </td>
		<td > H. Carter Edwards, Bryce Lelbach, Christian Trott, Mauro Bianco, Athanasios Iliopoulos, John Michopoulos </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td > P0332R0 </td>
		<td > Library Evolution, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R4 </td>
		<td > Extending &lt;code>&lt;chrono&gt;&lt;/code> to Calendars and Time Zones </td>
		<td > Howard Hinnant </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0355R3 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0356R2 </td>
		<td > Simplified partial function application </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td > P0356R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0399R0 </td>
		<td > Networking TS &
Threadpools </td>
		<td > Gor Nishanov </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0424R1 </td>
		<td > Reconsidering literal operator templates for strings </td>
		<td > Louis Dionne, Hana Dusikova </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0424R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0429R2 </td>
		<td > A Standard flat_map </td>
		<td > Zach Laine </td>
		<td > 2017-08-31 </td>
		<td > 2017-10 </td>
		<td > P0429R1 </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0443R3 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0443R2 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0447R4 </td>
		<td > Introduction of std::colony to the standard library </td>
		<td > Patrice Roy, Guy Davidson, Matthew Bentley </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0447R3 </td>
		<td > Library Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0461R2 </td>
		<td > Proposed RCU C++ API </td>
		<td > Paul E. McKenney, Maged Michael, Michael Wong, Isabella Muerte, Arthur O'Dwyer, David Hollman, Andrew Hunter, Georey Romer, Lance Roy </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0461R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0479R2 </td>
		<td > Attributes for Likely and Unlikely Branches </td>
		<td > Clay Trychta  </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0479R1 </td>
		<td > Evolution, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0506R2 </td>
		<td > use string_view for library function parameters
instead of const string &  / const char * </td>
		<td > Peter Sommerlad </td>
		<td > 2017-10-06 </td>
		<td > 2017-10 </td>
		<td > P0506R1 </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0514R2 </td>
		<td > Efficient waiting for concurrent programs </td>
		<td > Olivier Giroux </td>
		<td > 2017-10-09 </td>
		<td > 2017-10 </td>
		<td > P0514R1 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0515R2 </td>
		<td > Consistent comparison </td>
		<td > Herb Sutter </td>
		<td > 2017-09-30 </td>
		<td > 2017-10 </td>
		<td > P0515R1 </td>
		<td > Evolution, Library Evolution, Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0533R1 </td>
		<td > constexpr for &lt;cmath> and &lt;cstdlib> </td>
		<td > Edward J. Rosten / Oliver J. Rosten </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td > P0533R0 </td>
		<td > SG6, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0534R3 </td>
		<td > call/cc (call-with-current-continuation): A low-level API for stackful
context switching </td>
		<td > Oliver Kowalke </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0534R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0539R2 </td>
		<td > A Proposal to add wide_int Template Class </td>
		<td > Igor Klevanets, Antony Polukhin </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td > P0539R1 </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0546R1 </td>
		<td > Span - foundation for the future </td>
		<td > Carter Edwards, Bryce Lelbach </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td > P0546R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0549R2 </td>
		<td > Adjuncts to std::hash </td>
		<td > Walter E. Brown </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td > P0549R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0551R1 </td>
		<td > Thou Shalt Not Specialize std Function Templates! </td>
		<td > Walter E. Brown </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td > P0551R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0561R2 </td>
		<td > RAII Interface for Deferred Reclamation </td>
		<td > Geoffrey Romer, Andrew Hunter </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td > P0561R1 </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0566R3 </td>
		<td > Proposed Wording for Concurrent Data
Structures: Hazard Pointer and
Read-Copy-Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0566R2 </td>
		<td > Concurrency, SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0571R1 </td>
		<td > Type Requirements for &lt;numeric> Algorithms </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2017-02-02 </td>
		<td > 2017-10 </td>
		<td > P0571R0 </td>
		<td > Concurrency, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0573R2 </td>
		<td > Abbreviated Lambdas for Fun and Profit </td>
		<td > Barry Revzin, Tomasz Kamin&#x301;ski </td>
		<td > 2017-10-08 </td>
		<td > 2017-10 </td>
		<td > P0573R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0586R0 </td>
		<td > Safe integral comparisons </td>
		<td > Federico Kircheis </td>
		<td > 2017-09-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0593R1 </td>
		<td > Implicit creation of objects for low-level object manipulation </td>
		<td > Richard Smith, Ville Voutilainen </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0593R0 </td>
		<td > SG12 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0609R1 </td>
		<td > Attributes
for Structured Bindings </td>
		<td > Aaron Ballman </td>
		<td > 2017-09-14 </td>
		<td > 2017-10 </td>
		<td > P0609R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0624R1 </td>
		<td > Default constructible stateless lambdas </td>
		<td > Louis Dionne </td>
		<td > 2017-08-16 </td>
		<td > 2017-10 </td>
		<td > P0624R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0631R1 </td>
		<td > Math Constants </td>
		<td > Lev Minkovsky, John McFarlane </td>
		<td > 2017-09-26 </td>
		<td > 2017-10 </td>
		<td > P0631R0 </td>
		<td > Library Evolution, Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0634R1 </td>
		<td > Down with `typename`! </td>
		<td > Daveed Vandevoorde, Nina Ranns </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0634R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0636R2 </td>
		<td > Changes between C++14 and C++17 </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0636R1 </td>
		<td > All </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0642R1 </td>
		<td > Structural Support for C++ Concurrency </td>
		<td > Mingxin Wang, Wei Chen </td>
		<td > 2017-09-01 </td>
		<td > 2017-10 </td>
		<td > P0642R0 </td>
		<td > Concurrency, SG8, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0644R1 </td>
		<td > Forward without forward </td>
		<td > Barry Revzin </td>
		<td > 2017-10-08 </td>
		<td > 2017-10 </td>
		<td > P0644R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0649R0 </td>
		<td > Other Product-Type algorithms </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-06-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG7, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0650R1 </td>
		<td > C++ Monadic interface </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0650R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0655R0 </td>
		<td > visit&lt;R>: Explicit Return Type for visit </td>
		<td > Michael Park, Agust&iacute;n Berg&eacute; </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0657R1 </td>
		<td > Deprecate Certain Declarations in the Global Namespace </td>
		<td > Walter Brown </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td > P0657R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0658R1 </td>
		<td > Proposal for adding alias declarations to concepts </td>
		<td > Christopher Di Bella </td>
		<td > 2017-06-11 </td>
		<td > 2017-10 </td>
		<td > P0658R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0670R1 </td>
		<td > Static reflection of functions </td>
		<td > Mat&uacute;s&#x30c; Chochl&iacute;k, Axel Naumann, David Sankel </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0670R0 </td>
		<td > SG7, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0684R1 </td>
		<td > C++ Stability, Velocity, and Deployment Plans </td>
		<td > Titus Winters </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td > P0684R0 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0692R0 </td>
		<td > Access Specifiers and Specializations </td>
		<td > Matt Calabrese </td>
		<td > 2017-06-17 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0701R1 </td>
		<td > Back to the std2::future </td>
		<td > Bryce Adelstein Lelbach </td>
		<td > 2017-09-10 </td>
		<td > 2017-10 </td>
		<td > P0701R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0707R2 </td>
		<td > Metaclasses: Generative C++ </td>
		<td > Herb Sutter </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0707R1 </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0722R1 </td>
		<td > Efficient sized delete for variable sized classes </td>
		<td > Andrew Hunter, Richard Smith </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td > P0722R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0735R0 </td>
		<td > Interaction of memory_order_consume with release sequences </td>
		<td > Will Deacon </td>
		<td > 2017-10-02 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0737R0 </td>
		<td > Execution Context of Execution Agents </td>
		<td > H. Carter Edwards, Daniel Sunderland, Michael Wong, Thomas Rodgers, Gordon Brown </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0750R0 </td>
		<td > Consume </td>
		<td > JF Bastien </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0752R0 </td>
		<td > std::vector Destruction Order </td>
		<td > Nathan Myers </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0753R1 </td>
		<td > Manipulators for C++ Synchronized Buffered Ostream </td>
		<td > Peter Sommerlad, Pablo Halpern </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0756R0 </td>
		<td > Lambda syntax should be more liberal in what it accepts </td>
		<td > Arthur O'Dwyer </td>
		<td > 2017-08-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0757R0 </td>
		<td > regex_iterator should be iterable </td>
		<td > Arthur O'Dwyer </td>
		<td > 2017-09-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0761R1 </td>
		<td > Executors Design Document </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown, Michael Wong </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td > P0761R0 </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0762R0 </td>
		<td > Concerns about expected&lt;T, E>
from the Boost.Outcome peer review </td>
		<td > Niall Douglas </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0766R1 </td>
		<td > Fixing small-ish functionality gaps in constraints </td>
		<td > Ville Voutilainen </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td > P0766R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0767R0 </td>
		<td > Expunge POD </td>
		<td > Jens Maurer </td>
		<td > 2017-09-29 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0768R0 </td>
		<td > Library Support for the Spaceship (Comparison) Operaton </td>
		<td > Walter Brown </td>
		<td > 2017-09-30 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0769R0 </td>
		<td > Add shift to &lt;algorithm> </td>
		<td > Dan Raviv </td>
		<td > 2017-10-11 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0770R0 </td>
		<td > A Proposal to Specify Behavior in Case of Exception Allocation Failure </td>
		<td > Michael Kilburn </td>
		<td > 2017-08-21 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0771R0 </td>
		<td > std::function move operations should be noexcept </td>
		<td > Nevin Liber </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0772R0 </td>
		<td > Execution-Agent Local Storage </td>
		<td > Nat Goodspeed </td>
		<td > 2017-10-08 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0773R0 </td>
		<td > Towards meaningful fancy pointers </td>
		<td > Arthur O'Dwyer, Bob Steagall </td>
		<td > 2017-10-05 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0774R0 </td>
		<td > Module-decl location </td>
		<td > Nathan Sidwell </td>
		<td > 2017-10-02 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0775R0 </td>
		<td > module partitions </td>
		<td > Nathan Sidwell </td>
		<td > 2017-10-03 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Core, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0776R0 </td>
		<td > Rebase the Concurrency TS onto C++17 Standard </td>
		<td > Alisdair Meredith </td>
		<td > 2017-09-08 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0777R0 </td>
		<td > Treating Unnecessary decay </td>
		<td > Walter Brown </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0778R0 </td>
		<td > Module Names </td>
		<td > Nathan Sidwell </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Core, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0779R0 </td>
		<td > Proposing operator try()
(with added native C++ macro functions!) </td>
		<td > Niall Douglas </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0780R0 </td>
		<td > Allow pack expansion in lambda init-capture </td>
		<td > Barry Revzin </td>
		<td > 2017-10-08 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0781R0 </td>
		<td > A Modern C++ Signature for main </td>
		<td > Erich Keane </td>
		<td > 2017-09-25 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0782R0 </td>
		<td > A Case for Simplifying/Improving Natural Syntax Concepts </td>
		<td > Erich Keane, ADAM David Alan Martin, Allan Deutsch </td>
		<td > 2017-09-25 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0783R0 </td>
		<td > Continuations without overcomplicating the future </td>
		<td > Lee Howes, Andrii Grynenko, Jay Feldblum </td>
		<td > 2017-09-11 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0784R0 </td>
		<td > Standard containers and constexpr </td>
		<td > Louis Dionne, Richard Smith, Daveed Vandevoorde </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0785R0 </td>
		<td > Runtime-sized arrays and a C++ wrapper </td>
		<td > Jens Maurer </td>
		<td > 2017-09-30 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0786R0 </td>
		<td > SuccessOrFailure, ValuedOrError and ValuedOrNone types </td>
		<td > Vicente J. Botet Escriba </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0787R0 </td>
		<td > Proclaimed Ownership </td>
		<td > Nathan Sidwell </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Core, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0788R0 </td>
		<td > Standard Library Specification in a Concepts and Contracts World </td>
		<td > Walter Brown </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0789R0 </td>
		<td > Range Adaptors and Utilities </td>
		<td > Eric Niebler </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0790R0 </td>
		<td > Effect of operator&lt;=> on the C++ Standard Library </td>
		<td > David Stone </td>
		<td > 2017-10-06 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0791R0 </td>
		<td > Concepts are Adjectives, not Nouns </td>
		<td > Jakob Riedle </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0792R0 </td>
		<td > function_ref: a non-owning reference to a Callable </td>
		<td > Vittorio Romeo </td>
		<td > 2017-10-10 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0793R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2017/06/19-2017/10/09 </td>
		<td > Michael Wong </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG5 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0794R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2017/08/09-2017/10/11  </td>
		<td > Michael Wong </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0795R0 </td>
		<td > From Vulkan with love: a plea to
reconsider the Module Keyword to be
contextual </td>
		<td > Simon Brand, Neil Henning, Michael Wong, Christopher Di Bella, Kenneth Benzie </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG14, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0796R0 </td>
		<td > Supporting Heterogeneous & Distributed Computing Through Affinity </td>
		<td > Gordon Brown, Ruyman Reyes, Michael Wong, H. Carter Edwards, Thomas Rodgers </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0797R0 </td>
		<td > Exception Handling in Parallel STL
Algorithms </td>
		<td > Matti Rintala, Michael Wong, Carter Edwards, Gordon Brown </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency, SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0798R0 </td>
		<td > Monadic operations for std::optional </td>
		<td > Simon Brand </td>
		<td > 2017-10-06 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0799R0 </td>
		<td > Programming vulnerabilities for C++ (part of WG23 N0746) </td>
		<td > Stephen Michel, Chris Szalwinski, Michael Wong, Hubert Tong </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG12 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0800R0 </td>
		<td > The Concepts TS improves upon C++ </td>
		<td > Christopher Di Bella </td>
		<td > 2017-08-28 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0801R0 </td>
		<td > Extensions for Disambiguation Tags </td>
		<td > Mingxin Wang </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library, Library Evolution, SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0802R0 </td>
		<td > Applying Concepts to the Standard Library </td>
		<td > Beman Dawes, Nicolai Josuttis, Walter E. Brown, Bob Steagall </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0803R0 </td>
		<td > Endian Library Request for Comments </td>
		<td > Beman Dawes </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0804R0 </td>
		<td > Impact of the Modules TS on the C++ tools ecosystem </td>
		<td > Tom Honermann </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0805R0 </td>
		<td > Comparing containers </td>
		<td > Marshall Clow </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0806R0 </td>
		<td > Deprecate Implicit Capture of thist </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-10-08 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0807R0 </td>
		<td > An Adjective Syntax for Concepts </td>
		<td > Thomas K&ouml;ppe </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0808R0 </td>
		<td > Ranges Naming </td>
		<td > Titus Winters </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0809R0 </td>
		<td > Comparing Unordered Containers </td>
		<td > Titus Winters </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0810R0 </td>
		<td > constexpr in Practice </td>
		<td > Ben Deane, Jason Turner </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0811R0 </td>
		<td > Well-behaved interpolation for numbers and pointers </td>
		<td > Davis Herring </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Numerics </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0812R0 </td>
		<td > copy-list-initialization is inherently un-= </td>
		<td > Davis Herring </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0813R0 </td>
		<td > construct() shall Return the Replaced Address </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0814R0 </td>
		<td > hash_combine() Again </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0815R0 </td>
		<td > C++ Standard Library Issues to be moved in Albuquerque </td>
		<td > Marshall Clow </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0816R0 </td>
		<td > No More Nested Namespaces in Library Design </td>
		<td > Titus Winters </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0817R0 </td>
		<td > Core Language Working Group "ready" Issues for the November, 2017 (Albuquerque) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0818R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the November, 2017 (Albuquerque) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0819R0 </td>
		<td > Formally Supporting Feature Macros </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution, Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0820R0 </td>
		<td > Feedback on P0214R5 </td>
		<td > Tim Shen </td>
		<td > 2017-10-13 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Concurrency, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0821R0 </td>
		<td > Teaching Concepts TS Online </td>
		<td > Robert Douglas </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0824R0 </td>
		<td > Summary of SG14 discussion on &lt;system_error>: towards exception-less error handling </td>
		<td > Arthur O'Dwyer, Charley Bay, Odin Holmes, Michael Wong </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0825R0 </td>
		<td > A friendlier tuple get </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0826R0 </td>
		<td > SFINAE-friendly std::bind </td>
		<td > Agust&iacute;n Berg&eacute; </td>
		<td > 2017-10-12 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0827R0 </td>
		<td > General-Purpose Constant Value Type </td>
		<td > John McFarlane, Louis Dionne </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > SG6, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0829R0 </td>
		<td > Freestanding proposal </td>
		<td > Ben Craig </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0830R0 </td>
		<td > Using Concepts and requires in the C++
Standard Library </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-10-15 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0831R0 </td>
		<td > Keep alias syntax extendable </td>
		<td > Tomasz Kamin&#x301;ski </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0832R0 </td>
		<td > Module TS Does Not Support Intended Use Case </td>
		<td > David Sankel </td>
		<td > 2017-10-14 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0834R0 </td>
		<td > Lifting overload sets into objects </td>
		<td > Michael Dominiak </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0835R0 </td>
		<td > Adopt SD-6 feature macros into the C++20 working draft </td>
		<td > Ville Voutilainen </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0837R0 </td>
		<td > Ruminations on modular macros </td>
		<td > Ville Voutilainen </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0838R0 </td>
		<td > A conditional transform algorithm for C++ </td>
		<td > Jonathan Coe </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0839R0 </td>
		<td > Recursive Lambdas </td>
		<td > Richard Smith </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0840R0 </td>
		<td > Lamguage support for empty objects </td>
		<td > Richard Smith </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0841R0 </td>
		<td > Modules at scale </td>
		<td > Bruno Cardoso Lopes, Adrian Prantl, Duncan P. N. Exon Smith </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0842R0 </td>
		<td > Unknown Exports by Example </td>
		<td > Alisdair Meredith </td>
		<td > 2017-10-16 </td>
		<td > 2017-10 </td>
		<td >  </td>
		<td > Core </td>
		<td > </td>
	</tr>


<!-- end pre-Alb -->

        <tr>
            <th colspan="8">2017-11 post-Albuquerque</th>
        </tr>

<!-- begin post-Alb -->

	<tr >
		<td > N4704 </td>
		<td > WG21 telecon meeting: Pre-Albuquerque </td>
		<td > Herb Sutter </td>
		<td > 2017-09-30 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4705 </td>
		<td > WG21 2017-10-27 Telecon Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-10-30 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4706 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2017-11-22 </td>
		<td > 2017-11 </td>
		<td > N4698 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4707 </td>
		<td > Parallelism TS Editor's Report </td>
		<td > Jared Hoberock </td>
		<td > 2017-11-22 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4708 </td>
		<td > Responses to National Body Comments, ISO/IEC PDTS 19216, C++ Extensions for Networking </td>
		<td > Barry Hedquist </td>
		<td > 2017-11-24 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4709 </td>
		<td > WG21 2017-11 Albuquerque Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-11-26 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4710 </td>
		<td > PL22.16 2017-11 Albuquerque Minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2017-11-26 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4711 </td>
		<td > Working Draft, C ++ Extensions for Networking </td>
		<td > Jonathan Wakely </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > N4656 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4712 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4713 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > N4700 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4714 </td>
		<td > Editors' Report -- Programming Languages -- C++ </td>
		<td > Richard Smith </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0020R6 </td>
		<td > Floating Point Atomic </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, JF Bastien, James Reus </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0020R5 </td>
		<td > Library Evolution </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0052R6 </td>
		<td > Generic Scope Guard and RAII Wrapper for the Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2017-11-21 </td>
		<td > 2017-11 </td>
		<td > P0052R5 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0053R7 </td>
		<td > C++ Synchronized Buffered Ostream </td>
		<td > Lawrence Crowl, Peter Sommerlad, Nicolai Josuttis, Pablo Halpern </td>
		<td > 2017-11-07 </td>
		<td > 2017-11 </td>
		<td > P0053R6 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0075R2 </td>
		<td > Template Library for Parallel For Loops </td>
		<td > Pablo Halpern, Clark Nelson, Arch D. Robison, Robert Geva </td>
		<td > 2017-11-09 </td>
		<td > 2017-11 </td>
		<td > P0075R1 </td>
		<td > SG1 </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0202R3 </td>
		<td > Add Constexpr Modifiers to Functions in &lt;algorithm&gt; and &lt;utility&gt; Headers </td>
		<td > Antony Polukhin </td>
		<td > 2017-11-09 </td>
		<td > 2017-11 </td>
		<td > P0202R2 </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0214R7 </td>
		<td > Data-Parallel Vector Types &amp; Operations </td>
		<td > Matthias Kretz </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > P0214R6 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0315R4 </td>
		<td > Wording for lambdas in unevaluated contexts </td>
		<td > Louis Dionne, Hubert Tong </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0315R3 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0323R4 </td>
		<td > std::expected </td>
		<td > Vicente Botet, JF Bastien </td>
		<td > 2017-11-26 </td>
		<td > 2017-11 </td>
		<td > P0323R3 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0356R3 </td>
		<td > Simplified partial function application </td>
		<td > Tomasz Kami&#324;ski </td>
		<td > 2017-11-09 </td>
		<td > 2017-11 </td>
		<td > P0356R2 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0407R2 </td>
		<td > Allocator-aware basic_stringbuf </td>
		<td > Peter Sommerlad </td>
		<td > 2017-11-16 </td>
		<td > 2017-11 </td>
		<td > P0407R1 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0408R3 </td>
		<td > Efficient Access to basic_stringbuf's Buffer </td>
		<td > Peter Sommerlad </td>
		<td > 2017-11-16 </td>
		<td > 2017-11 </td>
		<td > P0408R2 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0415R1 </td>
		<td > Constexpr for std::complex </td>
		<td > Antony Polukhin </td>
		<td > 2016-11-10 </td>
		<td > 2017-11 </td>
		<td > P0415R0 </td>
		<td > Library Evolution </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0424R2 </td>
		<td > String literals as non-type template parameters </td>
		<td > Louis Dionne, Hana Dus&#237;kov&#225; </td>
		<td > 2017-11-14 </td>
		<td > 2017-11 </td>
		<td > P0424R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0429R3 </td>
		<td > A Standard flat_map </td>
		<td > Zach Laine </td>
		<td > 2016-08-31 </td>
		<td > 2017-11 </td>
		<td > P0429R2 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0443R4 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown </td>
		<td > 2017-11-22 </td>
		<td > 2017-11 </td>
		<td > P0443R3 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0457R2 </td>
		<td > String Prefix and Suffix Checking </td>
		<td > Mikhail Maltsev </td>
		<td > 2017-11-11 </td>
		<td > 2017-11 </td>
		<td > P0457R1 </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0476R2 </td>
		<td > Bit-casting object representations </td>
		<td > JF Bastien </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0476R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0515R3 </td>
		<td > Consistent comparison </td>
		<td > Herb Sutter, Jens Maurer, Walter E. Brown </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0515R2 </td>
		<td > Evolution, Library Evolution, Core, Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0542R2 </td>
		<td > Support for contract based programming in C++ </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2017-11-26 </td>
		<td > 2017-11 </td>
		<td > P0542R1 </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0553R2 </td>
		<td > Bit operations </td>
		<td > Jens Maurer </td>
		<td > 2017-11-23 </td>
		<td > 2017-11 </td>
		<td > P0553R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0556R2 </td>
		<td > Integral power-of-2 operations </td>
		<td > Jens Maurer </td>
		<td > 2017-11-23 </td>
		<td > 2017-11 </td>
		<td > P0556R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0561R3 </td>
		<td > An RAII Interface for Deferred Reclamation </td>
		<td > Geoff Romer, Andrew Hunter </td>
		<td > 2017-11-11 </td>
		<td > 2017-11 </td>
		<td > P0561R2 </td>
		<td > SG1, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0588R1 </td>
		<td > Simplifying implicit lambda capture </td>
		<td > Richard Smith </td>
		<td > 2017-11-07 </td>
		<td > 2017-11 </td>
		<td > P0588R0 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0600R1 </td>
		<td > [[nodiscard]] in the Library </td>
		<td > Nicolai Josuttis </td>
		<td > 2017-11-09 </td>
		<td > 2017-11 </td>
		<td > P0600R0 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0614R1 </td>
		<td > Range-based for statements with initializer </td>
		<td > Thomas K&#246;ppe </td>
		<td > 2017-11-06 </td>
		<td > 2017-11 </td>
		<td > P0614R0 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0619R2 </td>
		<td > Reviewing Deprecated Facilities of C++17 for C++20 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej, Tomasz Kami&#324;ski </td>
		<td > 2017-11-06 </td>
		<td > 2017-11 </td>
		<td > P0619R1 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0624R2 </td>
		<td > Default constructible and assignable stateless lambdas </td>
		<td > Louis Dionne </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0624R1 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0641R2 </td>
		<td > Resolving Core Issue #1331 (const mismatch with defaulted copy constructor) </td>
		<td > Daniel Kr&#252;gler, Botond Ballo </td>
		<td > 2017-11-08 </td>
		<td > 2017-11 </td>
		<td > P0641R1 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0653R2 </td>
		<td > Utility to convert a pointer to a raw pointer </td>
		<td > Glen Joseph Fernandes </td>
		<td > 2017-11-09 </td>
		<td > 2017-11 </td>
		<td > P0653R1 </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0692R1 </td>
		<td > Access Checking on Specializations </td>
		<td > Matt Calabrese </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0692R0 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0718R2 </td>
		<td > Revising atomic_shared_ptr for C++20 </td>
		<td > Alisdair Meredith </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0718R1 </td>
		<td > SG1, Library Evolution, Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0722R2 </td>
		<td > Efficient sized delete for variable sized classes </td>
		<td > Richard Smith, Andrew Hunter </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > P0722R1 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0754R1 </td>
		<td > &lt;version&gt; </td>
		<td > Alan Talbot </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > P0754R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0767R1 </td>
		<td > Deprecate POD </td>
		<td > Jens Maurer </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0767R0 </td>
		<td > Library Evolution, Core, Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0768R1 </td>
		<td > Library Support for the Spaceship (Comparison) Operator </td>
		<td > Walter E. Brown </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0768R0 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0776R1 </td>
		<td > Rebase the Parallelism TS onto the C++17 Standard </td>
		<td > Alisdair Meredith </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0776R0 </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0777R1 </td>
		<td > Treating Unnecessary decay </td>
		<td > Walter E. Brown </td>
		<td > 2017-11-06 </td>
		<td > 2017-11 </td>
		<td > P0777R0 </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0780R1 </td>
		<td > Allow pack expansion in lambda init-capture </td>
		<td > Barry Revzin </td>
		<td > 2017-11-26 </td>
		<td > 2017-11 </td>
		<td > P0780R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0789R1 </td>
		<td > Range Adaptors and Utilities </td>
		<td > Eric Niebler </td>
		<td > 2017-11-17 </td>
		<td > 2017-11 </td>
		<td > P0789R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0799R1 </td>
		<td > Vulnerability descriptions for the programming language C++ </td>
		<td > Stephen Michel </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > P0799R0 </td>
		<td > SG12 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0818R1 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the November, 2017 (Albuquerque) meeting </td>
		<td > William M. Miller </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td > P0818R0 </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0820R1 </td>
		<td > Feedback on P0214R6 </td>
		<td > Tim Shen </td>
		<td > 2017-11-15 </td>
		<td > 2017-11 </td>
		<td > P0820R0 </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0822R0 </td>
		<td > C++ Modules Are a Tooling Opportunity </td>
		<td > Gabriel Dos Reis </td>
		<td > 2017-10-16 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0840R1 </td>
		<td > Language support for empty objects </td>
		<td > Richard Smith </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td > P0840R0 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0843R0 </td>
		<td > fixed_capacity_vector </td>
		<td > Gonzalo Brito Gadeschi </td>
		<td > 2017-10-15 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0845R0 </td>
		<td > Common Subset of C++03 and C++17: Binders </td>
		<td > Detlef Vollmann </td>
		<td > 2017-10-13 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0846R0 </td>
		<td > ADL and Function Templates that are not Visible </td>
		<td > John Spicer </td>
		<td > 2017-11-08 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0848R0 </td>
		<td > Conditionally Trivial Special Member Functions </td>
		<td > Barry Revzin, Casey Carter </td>
		<td > 2017-11-12 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0849R0 </td>
		<td > auto(x): DECAY_COPY in the language </td>
		<td > Zhihao Yuan </td>
		<td > 2017-11-02 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0851R0 </td>
		<td > simd&lt;T&gt; is neither a product type nor a container type </td>
		<td > Matthias Kretz </td>
		<td > 2017-11-06 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0857R0 </td>
		<td > Wording for "functionality gaps in constraints" </td>
		<td > Thomas K&#246;ppe </td>
		<td > 2017-11-10 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0858R0 </td>
		<td > Constexpr iterator requirements </td>
		<td > Antony Polukhin </td>
		<td > 2017-11-11 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0859R0 </td>
		<td > Core Issue 1581: When are constexpr member functions defined? </td>
		<td > Richard Smith </td>
		<td > 2017-11-09 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Core </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0864R0 </td>
		<td > C++ Standard Library Issues Resolved Directly In Albuquerque </td>
		<td > Marshall Clow </td>
		<td > 2017-11-11 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Library </td>
		<td > Adopted 2017-11 </td>
	</tr>
	<tr >
		<td > P0867R0 </td>
		<td > 'Module Interface' is Misleading </td>
		<td > Nathan Sidwell </td>
		<td > 2017-11-21 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0868R0 </td>
		<td > Selected RCU Litmus Tests </td>
		<td > Paul E. McKenney, Alan Stern, Andrew Hunter </td>
		<td > 2017-11-20 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0870R0 </td>
		<td > A proposal for a type trait to detect narrowing conversions </td>
		<td > Giuseppe D'Angelo </td>
		<td > 2017-11-21 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0872R0 </td>
		<td > Discussion Summary: Applying Concepts to the Standard Library </td>
		<td > Beman Dawes </td>
		<td > 2017-11-25 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0873R0 </td>
		<td > A plea for a consistent, terse and intuitive declaration syntax </td>
		<td > Corentin Jabot </td>
		<td > 2017-11-27 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > SG8, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0874R0 </td>
		<td > Syntax to anonymously refer to the current declaration contexts </td>
		<td > Corentin Jabot </td>
		<td > 2017-11-20 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > SG7, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0875R0 </td>
		<td > WG21 2017-11 Albuquerque Record of Discussion </td>
		<td > Jonathan Wakely </td>
		<td > 2017-11-26 </td>
		<td > 2017-11 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>

<!-- end post-Alb -->

        <tr>
            <th colspan="8">2018-02 pre-Jacksonville</th>
        </tr>

<!-- begin pre-Jax -->

	<tr >
		<td > N4715 </td>
		<td > 2018-11 San Diego Meeting Information </td>
		<td > Marshall Clow </td>
		<td > 2018-02-01 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4716 </td>
		<td > PL22.16/WG21 draft agenda: 12-17 March 2018, Jacksonville, FL, US </td>
		<td > John Spicer </td>
		<td > 2018-01-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4717 </td>
		<td > WG21 telecon meeting: Pre-Jacksonville </td>
		<td > Herb Sutter </td>
		<td > 2018-01-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4718 </td>
		<td > WG21 telecon meeting: Modules TS publication </td>
		<td > Herb Sutter </td>
		<td > 2018-01-18 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4719 </td>
		<td > Programming Languages &#8212; Extensions to C++ for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2018-01-29 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4720 </td>
		<td > Working Draft, Extensions to C++ for Modules </td>
		<td > Gabriel Dos Reis </td>
		<td > 2018-01-29 </td>
		<td > 2018-02 </td>
		<td > N4689 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4721 </td>
		<td > Editor&#8217;s Report for the Module TS </td>
		<td > Gabriel Dos Reis </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4722 </td>
		<td > Responses to SC22 N5250, ISO/IEC PDTS 21544, C++ Extensions for Modules </td>
		<td > Barry Hedquist </td>
		<td > 2018-02-04 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4723 </td>
		<td > Working Draft, C++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > N4680 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4724 </td>
		<td > Editor's report for the Coroutines TS </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-06 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4725 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > N4706 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4726 </td>
		<td > Parallelism TS Editor&#8217;s Report </td>
		<td > Jared Hoberock </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4727 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > N4713 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4728 </td>
		<td > Editors' Report -- Programming Languages &#8211; C++ </td>
		<td > Richard Smith, Dawn Perchik, Thomas K&#246;ppe </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0009R5 </td>
		<td > Polymorphic Multidimensional Array Reference </td>
		<td > H. Carter Edwards, Daniel Sunderland, David Hollman, Christian Trott, Mauro Bianco, Ben Sander, Athanasios Iliopoulos, John Michopoulos </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0009R4 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0019R6 </td>
		<td > Atomic View </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, James Reus </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0019R5 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0051R3 </td>
		<td > C++ generic overload function </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0051R2 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0057R8 </td>
		<td > Working Draft, C++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0057R7 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0122R6 </td>
		<td > span: bounds-safe views for sequences of objects  </td>
		<td > Neil MacIntosh </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0122R5 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0194R5 </td>
		<td > Static reflection </td>
		<td > Mat&#250;&#353; Chochl&#237;k, Axel Naumann, David Sankel  </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0194R4 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0201R3 </td>
		<td > A polymorphic value-type for C++ </td>
		<td > Jonathan Coe, Sean Parent </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0201R2 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0214R8 </td>
		<td > Data-Parallel Vector Types &amp; Operations </td>
		<td > Matthias Kretz </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0214R7 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0267R7 </td>
		<td > A Proposal to Add 2D Graphics Rendering and Display to C++  </td>
		<td > Michael B. McLaughlin, Herb Sutter, Jason Zink, Guy Davidson </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0267R6 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0275R3 </td>
		<td > A Proposal to add Classes and Functions Required for Dynamic Library Load </td>
		<td > Antony Polukhin  </td>
		<td > 2018-02-01 </td>
		<td > 2018-02 </td>
		<td > P0275R2 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0323R5 </td>
		<td > std::expected </td>
		<td > Vicente Botet, JF Bastien </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td > P0323R4 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0332R2 </td>
		<td > Relaxed Incomplete Multidimensional Array Type Declaration </td>
		<td > H. Carter Edwards, Daniel Sunderland, Christian Trott, David Hollman, Mauro Bianco, Athanasios Iliopoulos, John Michopoulos </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0332R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0338R3 </td>
		<td > C++ generic factories </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0338R2 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0355R5 </td>
		<td > Extending &lt;chrono&gt; to Calendars and Time Zones </td>
		<td > Howard E. Hinnant, Tomasz Kami&#324;ski </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0355R4 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0443R5 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0443R4 </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0458R1 </td>
		<td > Checking for Existence of an Element in Associative Containers </td>
		<td > Mikhail Maltsev </td>
		<td > 2018-02-06 </td>
		<td > 2018-02 </td>
		<td > P0458R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0466R1 </td>
		<td > Layout-compatibility and Pointer-interconvertibility Traits </td>
		<td > Lisa Lippincott </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0466R0 </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0479R4 </td>
		<td > Proposed wording for likely and unlikely attributes </td>
		<td > Clay Trychta </td>
		<td > 2018-02-07 </td>
		<td > 2018-02 </td>
		<td > P0479R3 </td>
		<td > SG14, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0482R1 </td>
		<td > char8_t: A type for UTF-8 characters and strings </td>
		<td > Tom Honermann </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0482R0 </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0501R3 </td>
		<td > C++ Module TS Issues List </td>
		<td > Gabriel Dos Reis </td>
		<td > 2018-01-30 </td>
		<td > 2018-02 </td>
		<td > P0501R2 </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0514R3 </td>
		<td > Efficient concurrent waiting for C++20 </td>
		<td > Olivier Giroux </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0514R2 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0528R1 </td>
		<td > The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </td>
		<td > JF Bastien, Michael Spencer </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0528R0 </td>
		<td > SG1, Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0533R2 </td>
		<td > constexpr for &lt;cmath&gt; and &lt;cstdlib&gt; </td>
		<td > Edward J. Rosten, Oliver J. Rosten </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0533R1 </td>
		<td > SG6, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0539R3 </td>
		<td > A Proposal to add wide_int Template Class </td>
		<td > Igor Klevanets, Antony Polukhin </td>
		<td > 2018-01-31 </td>
		<td > 2018-02 </td>
		<td > P0539R2 </td>
		<td > SG6, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0542R3 </td>
		<td > Support for contract based programming in C++ </td>
		<td > G. Dos Reis, J. D. Garcia, J. Lakos, A. Meredith, N. Myers, B. Stroustrup </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0542R2 </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0546R2 </td>
		<td > Span - foundation for the future </td>
		<td > H. Carter Edwards, Daniel Sunderland </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0546R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0549R3 </td>
		<td > Adjuncts to std::hash </td>
		<td > Walter E. Brown </td>
		<td > 2018-02-03 </td>
		<td > 2018-02 </td>
		<td > P0549R2 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0551R2 </td>
		<td > Thou Shalt Not Specialize std Function Templates! </td>
		<td > Walter E. Brown </td>
		<td > 2018-02-03 </td>
		<td > 2018-02 </td>
		<td > P0551R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0566R4 </td>
		<td > Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read-Copy-Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0566R3 </td>
		<td > SG1, SG14, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0581R1 </td>
		<td > Standard Library Modules </td>
		<td > Marshall Clow, Beman Dawes, Gabriel Dos Reis, Stephan T. Lavavej, Billy O&#8217;Neal, Bjarne Stroustrup, Jonathan Wakely </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0581R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0593R2 </td>
		<td > Implicit creation of objects for low-level object manipulation </td>
		<td > Richard Smith </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0593R1 </td>
		<td > SG12 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0608R1 </td>
		<td > A sane variant converting constructor </td>
		<td > Zhihao Yuan </td>
		<td > 2017-12-30 </td>
		<td > 2018-02 </td>
		<td > P0608R0 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0631R2 </td>
		<td > Math Constants </td>
		<td > Lev Minkovsky </td>
		<td > 2018-02-06 </td>
		<td > 2018-02 </td>
		<td > P0631R1 </td>
		<td > SG6, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0634R2 </td>
		<td > Down with typename! </td>
		<td > Nina Ranns, Daveed Vandevoorde </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0634R1 </td>
		<td > Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0645R1 </td>
		<td > Text Formatting </td>
		<td > Victor Zverovich </td>
		<td > 2017-11-10 </td>
		<td > 2018-02 </td>
		<td > P0645R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0650R2 </td>
		<td > C++ Monadic interface </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0650R1 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0666R1 </td>
		<td > Revised Latches and Barriers for C++20 </td>
		<td > Olivier Giroux </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0666R0 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0668R2 </td>
		<td > Revising the C++ memory model </td>
		<td > Hans J. Boehm, Olivier Giroux, Viktor Vafeiades </td>
		<td > 2018-01-12 </td>
		<td > 2018-02 </td>
		<td > P0668R1 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0670R2 </td>
		<td > Static reflection of functions </td>
		<td > Mat&#250;&#353; Chochl&#237;k, Axel Naumann, David Sankel  </td>
		<td > 2017-11-08 </td>
		<td > 2018-02 </td>
		<td > P0670R1 </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0671R1 </td>
		<td > Parametric Functions </td>
		<td > Axel Naumann </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0671R0 </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0684R2 </td>
		<td > C++ Stability, Velocity, and Deployment Plans </td>
		<td > Titus Winters </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0684R1 </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0690R1 </td>
		<td > Tearable Atomics </td>
		<td > JF Bastien, Billy Robert O'Neal III, Andrew Hunter </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0690R0 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0701R2 </td>
		<td > Back to the std2::future Part II </td>
		<td > Bryce Adelstein Lelbach, Micha&#322; Dominiak, Hartmut Kaiser </td>
		<td > 2017-11-15 </td>
		<td > 2018-02 </td>
		<td > P0701R1 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0707R3 </td>
		<td > Metaclasses: Generative C++ </td>
		<td > Herb Sutter </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0707R2 </td>
		<td > SG7, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0713R1 </td>
		<td > Identifying Module Source </td>
		<td > Daveed Vandevoorde </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td > P0713R0 </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0732R0 </td>
		<td > Class Types in Non-Type Template Parameters </td>
		<td > Jeff Snyder </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0736R0 </td>
		<td > Nameless parameters and unutterable specializations </td>
		<td > Hubert S.K. Tong </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0745R0 </td>
		<td > Concepts in-place syntax </td>
		<td > Herb Sutter </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0750R1 </td>
		<td > Consume </td>
		<td > JF Bastien, Paul E. McKenney </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0750R0 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0761R2 </td>
		<td > Executors Design Document </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown, Michael Wong </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0761R1 </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0784R1 </td>
		<td > Standard containers and constexpr </td>
		<td > Louis Dionne, Richard Smith, Nina Ranns, Daveed Vandevoorde </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0784R0 </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0786R1 </td>
		<td > ValuedOrError and ValueOrNone types </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0786R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0788R1 </td>
		<td > Standard Library Specification in a Concepts and Contracts World </td>
		<td > Walter E. Brown </td>
		<td > 2018-02-03 </td>
		<td > 2018-02 </td>
		<td > P0788R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0789R2 </td>
		<td > Range Adaptors and Utilities </td>
		<td > Eric Niebler </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td > P0789R1 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0792R1 </td>
		<td > function_ref: a non-owning reference to a Callable </td>
		<td > Vittorio Romeo </td>
		<td > 2017-11-26 </td>
		<td > 2018-02 </td>
		<td > P0792R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0796R1 </td>
		<td > Supporting Heterogeneous &amp; Distributed Computing Through Affinity </td>
		<td > Gordon Brown, Ruyman Reyes, Michael Wong, H. Carter Edwards, Thomas Rodgers, Mark Hoemmen </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0796R0 </td>
		<td > SG1, SG14, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0797R1 </td>
		<td > Handling Concurrent Exceptions with Executors </td>
		<td > Matti Rintala, Michael Wong, Carter Edwards, Patrice Roy, Gordon Brown, Mark Hoemmen </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0797R0 </td>
		<td > SG1, SG14, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0805R1 </td>
		<td > Comparing Containers </td>
		<td > Marshall Clow </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0805R0 </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0811R1 </td>
		<td > Well-behaved interpolation for numbers and pointers </td>
		<td > S. Davis Herring  </td>
		<td > 2018-02-09 </td>
		<td > 2018-02 </td>
		<td > P0811R0 </td>
		<td > SG6, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0814R2 </td>
		<td > hash_combine() Again </td>
		<td > Nicolai Josuttis </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td > P0814R1 </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0820R2 </td>
		<td > Feedback on P0214 </td>
		<td > Tim Shen </td>
		<td > 2018-02-06 </td>
		<td > 2018-02 </td>
		<td > P0820R1 </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0824R1 </td>
		<td > Summary of SG14 discussion on &lt;system_error&gt; </td>
		<td > Arthur O'Dwyer, Charley Bay, Odin Holmes, Michael Wong, Niall Douglas </td>
		<td > 2018-02-05 </td>
		<td > 2018-02 </td>
		<td > P0824R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0825R1 </td>
		<td > A friendlier tuple get </td>
		<td > Agust&#237;n Berg&#233; </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td > P0825R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0828R0 </td>
		<td > Elastic Integers </td>
		<td > John McFarlane </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG6, SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0829R1 </td>
		<td > Freestanding Proposal </td>
		<td > Ben Craig </td>
		<td > 2017-10-14 </td>
		<td > 2018-02 </td>
		<td > P0829R0 </td>
		<td > SG14, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0836R0 </td>
		<td > Introduce Parallelism to the Ranges TS </td>
		<td > Gordon Brown, Christopher Di Bella, Michael Haidl, Toomas Remmelg, Ruyman Reyes, Michel Steuwer, Michael Wong </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, SG9, SG14, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0843R1 </td>
		<td > fixed_capacity_vector </td>
		<td > Gonzalo Brito Gadeschi </td>
		<td > 2018-02-06 </td>
		<td > 2018-02 </td>
		<td > P0843R0 </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0847R0 </td>
		<td > Deducing this </td>
		<td > Ga&#353;per A&#382;man, Simon Brand, Ben Deane, Barry Revzin </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0856R0 </td>
		<td > Restrict Access Property for mdspan and span </td>
		<td > David S. Hollman, H. Carter Edwards, Christian Trott </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0860R0 </td>
		<td > Atomic Access Property for span and mdspan </td>
		<td > H. Carter Edwards, Christian Trott, Daniel Sunderland </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0863R0 </td>
		<td > Fixing the partial_order comparison algorithm </td>
		<td > Jeff Snyder </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0868R1 </td>
		<td > Selected RCU Litmus Tests </td>
		<td > Paul E. McKenney, Alan Stern, Andrew Hunter, Jade Alglave, Luc Maranget </td>
		<td > 2017-11-20 </td>
		<td > 2018-02 </td>
		<td > P0868R0 </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0873R1 </td>
		<td > A plea for a consistent, terse and intuitive declaration syntax </td>
		<td > Corentin jabot </td>
		<td > 2017-11-27 </td>
		<td > 2018-02 </td>
		<td > P0873R0 </td>
		<td > SG8, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0876R0 </td>
		<td > fibers without scheduler </td>
		<td > Oliver Kowalke </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0877R0 </td>
		<td > A proposal for modular macros </td>
		<td > Bruno Cardoso Lopes </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0878R0 </td>
		<td > Subobjects copy elision </td>
		<td > Antony Polukhin </td>
		<td > 2018-01-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0879R0 </td>
		<td > Constexpr for swap and swap related functions </td>
		<td > Antony Polukhin </td>
		<td > 2017-12-29 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0880R0 </td>
		<td > Numbers interaction </td>
		<td > Igor Klevanets, Antony Polukhin </td>
		<td > 2018-01-31 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG6, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0881R0 </td>
		<td > A Proposal to add stack trace library </td>
		<td > Alexey Gorgurov, Antony Polukhin </td>
		<td > 2018-01-23 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0882R0 </td>
		<td > User-defined Literals for std::filesystem::path </td>
		<td > Yonggang Li </td>
		<td > 2017-12-30 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0883R0 </td>
		<td > Fixing Atomic Initialization </td>
		<td > Nicolai Josuttis </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0884R0 </td>
		<td > Extending the noexcept Policy </td>
		<td > Nicolai Josuttis </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0886R0 </td>
		<td > The assume aligned attribute </td>
		<td > Timur Doumler </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0887R0 </td>
		<td > The identity metafunction </td>
		<td > Timur Doumler </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0888R0 </td>
		<td > C++ Standard Library Issues to be moved in Jacksonville </td>
		<td > Marshall Clow </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0889R0 </td>
		<td > Ultimate copy elision </td>
		<td > Antony Polukhin  </td>
		<td > 2018-01-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0891R0 </td>
		<td > Let strong_order Truly Be a Customization Point! </td>
		<td > Ga&#353;per A&#382;man </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0892R0 </td>
		<td > explicit(bool) </td>
		<td > Barry Revzin, Stephan T. Lavavej </td>
		<td > 2017-12-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0893R0 </td>
		<td > Chaining Comparisons </td>
		<td > Barry Revzin, Herb Sutter </td>
		<td > 2018-01-14 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0895R0 </td>
		<td > Renaming cell&lt;&gt; to latest&lt;&gt; </td>
		<td > Nicolai Josuttis, Tony van Eerd </td>
		<td > 2018-01-31 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0896R0 </td>
		<td > Merging the Ranges TS </td>
		<td > Eric Niebler </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0897R0 </td>
		<td > Supporting offsetof for All Classes </td>
		<td > Andrey Semashev </td>
		<td > 2018-01-05 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0898R0 </td>
		<td > Standard Library Concepts </td>
		<td > Casey Carter </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0899R0 </td>
		<td > LWG 3016 is Not a Defect </td>
		<td > Casey Carter </td>
		<td > 2018-01-30 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0900R0 </td>
		<td > An Ontology for Properties of mdspan </td>
		<td > David S. Hollman </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0901R0 </td>
		<td > Size feedback in operator new </td>
		<td > Andrew Hunter, Chris Kennelly </td>
		<td > 2018-02-05 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0902R0 </td>
		<td > Move-only iterators </td>
		<td > Andrew Hunter </td>
		<td > 2018-02-05 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0903R0 </td>
		<td > Define basic_string_view(nullptr) and basic_string(nullptr)  </td>
		<td > Ashley Hedberg </td>
		<td > 2018-02-02 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0904R0 </td>
		<td > A strawman Future API </td>
		<td > Lee Howes, Andrii Grynenko, Jay Feldblum </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0905R0 </td>
		<td > Symmetry for spaceship </td>
		<td > Tomasz Kami&#324;ski, Herb Sutter, Richard Smith </td>
		<td > 2018-01-31 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0906R0 </td>
		<td > Improvement suggestions for the Modules TS </td>
		<td > Jens Maurer  </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0907R0 </td>
		<td > Signed Integers are Two&#8217;s Complement </td>
		<td > JF Bastien </td>
		<td > 2018-02-09 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG12. Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0908R0 </td>
		<td > Offsetof for Pointers to Members </td>
		<td > Eddie Kohler </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0909R0 </td>
		<td > Module TS Supports Legacy Integration </td>
		<td > Steve Downey </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Core, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0911R0 </td>
		<td > Rebase the Coroutines TS onto the C++17 Standard </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-03 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Core, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0912R0 </td>
		<td > Merge Coroutines TS into C++20 working draft </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-06 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0913R0 </td>
		<td > Add symmetric coroutine control transfer </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0914R0 </td>
		<td > Add parameter preview to coroutine promise constructor </td>
		<td > Gor Nishanov </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0915R0 </td>
		<td > Concept-constrained auto </td>
		<td > Vittorio Romeo,  John Lakos </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0916R0 </td>
		<td > Naming implementation-defined simd_abi tag types </td>
		<td > Matthias Kretz </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0917R0 </td>
		<td > Making operator?: overloadable </td>
		<td > Matthias Kretz </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0918R0 </td>
		<td > More simd&lt;&gt; Operations </td>
		<td > Tim Shen </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0919R0 </td>
		<td > Heterogeneous lookup for unordered containers </td>
		<td > Mateusz Pusz </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0921R0 </td>
		<td > Standard Library Compatibility Promises </td>
		<td > Titus Winters </td>
		<td > 2018-02-01 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0922R0 </td>
		<td > LEWG wishlist for EWG </td>
		<td > Titus Winters </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0923R0 </td>
		<td > Modules: Dependent ADL </td>
		<td > Nathan Sidwell </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0924R0 </td>
		<td > Modules: Context-Sensitive Keyword </td>
		<td > Nathan Sidwell </td>
		<td > 2018-02-09 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0925R0 </td>
		<td > Modules: Unqualified Using Declarations  </td>
		<td > Nathan Sidwell </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0927R0 </td>
		<td > Towards A (Lazy) Forwarding Mechanism for C++ </td>
		<td > James Dennett, Geoff Romer </td>
		<td > 2018&#173;-02&#173;-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0928R0 </td>
		<td > Mitigating Speculation Attacks in C++ </td>
		<td > Geoff Romer, Chandler Carruth </td>
		<td > 2018-02-09 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0929R0 </td>
		<td > Checking for abstract class types </td>
		<td > Jens Maurer  </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0930R0 </td>
		<td > Semifying Awaitables </td>
		<td > Lee Howes, Andrii Grynenko, Jay Feldblum </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0931R0 </td>
		<td > Structured bindings with polymorphic lambas </td>
		<td > Aaryaman Sagar </td>
		<td > 2018-08-14 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0932R0 </td>
		<td > Tightening the constraints on std::function </td>
		<td > Aaryaman Sagar </td>
		<td > 2018-02-07 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0934R0 </td>
		<td > A Modest Proposal: Fixing ADL </td>
		<td > Herb Sutter </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0935R0 </td>
		<td > Eradicating unnecessarily explicit default constructors from the standard library </td>
		<td > Tim Song  </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0936R0 </td>
		<td > Bind Returned/Initialized Objects to the Lifetime of Parameters  </td>
		<td > Richard Smith, Nicolai Josuttis </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0937R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2017/10/23-2018/1/29  </td>
		<td > Michael Wong </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG5 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0938R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2017/12/13-2018/01/10 </td>
		<td > Michael Wong </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG14 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0939R0 </td>
		<td > Direction for ISO C++ </td>
		<td > B. Dawes, H. Hinnant, B. Stroustrup, D. Vandevoorde, M. Wong </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > WG21 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0940R0 </td>
		<td > Concurrency TS is growing: Concurrent Utilities and Data Structures </td>
		<td > Michael Wong, Olivier Giroux </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0941R0 </td>
		<td > Integrating feature-test macros into the C++ WD </td>
		<td > Clark Nelson </td>
		<td > 2018-02-09 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG10, Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0942R0 </td>
		<td > Introducing a &lt;smart_ptr&gt; header </td>
		<td > Jens Maurer  </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0943R0 </td>
		<td > Support C atomics in C++ </td>
		<td > Hans J. Boehm </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0944R0 </td>
		<td > Contiguous Ranges </td>
		<td > Casey Carter </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0945R0 </td>
		<td > Generalizing alias declarations </td>
		<td > Richard Smith </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0946R0 </td>
		<td > Towards consistency between &lt;=&gt; and other comparison operators </td>
		<td > Richard Smith </td>
		<td > 2018-02-10 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0947R0 </td>
		<td > Another take on Modules </td>
		<td > Richard Smith </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0949R0 </td>
		<td > Adding support for type-based metaprogramming to the standard library </td>
		<td > Peter Dimov </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0952R0 </td>
		<td > A new specification for std::generate_canonical </td>
		<td > Thomas K&#246;ppe, Davis Herring </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG6, Library </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0953R0 </td>
		<td > constexpr reflexpr </td>
		<td > Mat&#250;&#353; Chochl&#237;k, Axel Naumann, David Sankel </td>
		<td > 2017-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG7 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0954R0 </td>
		<td > What do we want to do with reflection? </td>
		<td > Bjarne Stroustrup </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG7, Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0955R0 </td>
		<td > Modules and macros </td>
		<td > Bjarne Stroustrup </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0956R0 </td>
		<td > Answers to concept syntax suggestions </td>
		<td > Bjarne Stroustrup </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0957R0 </td>
		<td > PFA: A Generic, Extendable and Efficient Solution for Polymorphic Programming </td>
		<td > Mingxin Wang </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG7, SG9, Evolution, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0958R0 </td>
		<td > Networking TS changes to support proposed Executors TS </td>
		<td > Christopher Kohlhoff </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1 </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0959R0 </td>
		<td > A Proposal for a Universally Unique Identifier Library </td>
		<td > Marius Bancila </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0960R0 </td>
		<td > Allow initializing aggregates from a parenthesized list of values </td>
		<td > Ville Voutilainen </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0961R0 </td>
		<td > Relaxing the structured bindings customization point finding rules </td>
		<td > Ville Voutilainen </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0962R0 </td>
		<td > Relaxing the range-for loop customization point finding rules </td>
		<td > Ville Voutilainen </td>
		<td > 2018-02-11 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0963R0 </td>
		<td > Structured binding declaration as a condition </td>
		<td > Zhihao Yuan </td>
		<td > 2018-02-05 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0964R0 </td>
		<td > Finding the right set of traits for simd&lt;T&gt; </td>
		<td > Matthias Kretz </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0965R0 </td>
		<td > Initializers of objects with automatic and dynamic storage duration have funny inconsistencies </td>
		<td > Ville Voutilainen </td>
		<td > 2018-02-12 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Evolution </td>
		<td >  </td>
	</tr>
	<tr >
		<td > P0966R0 </td>
		<td > string::reserve Should Not Shrink </td>
		<td > Mark Zeren, Andrew Luo </td>
		<td > 2018-02-08 </td>
		<td > 2018-02 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td >  </td>
	</tr>

<!-- end pre-Jax -->

        <tr>
            <th colspan="8">2018-04 post-Jacksonville</th>
        </tr>
<!-- begin post-Jacksonville -->

	<tr >
		<td > N4729 </td>
		<td > WG21 telecon meeting: Modules TS publication </td>
		<td > Jonathan Wakely </td>
		<td > 2018-02-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4730 </td>
		<td > WG21 pre-Jacksonville telecon minutes </td>
		<td > Jonathan Wakely </td>
		<td > 2018-03-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4731 </td>
		<td > SC22 WG14 Liaison Report (C Standard) </td>
		<td > Barry Hedquist </td>
		<td > 2018-03-05 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4732 </td>
		<td > WG21 2018-03 Jacksonville Minutes </td>
		<td > Patrice Roy </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4734 </td>
		<td > Working Draft, C ++ Extensions for Networking  </td>
		<td > Jonathan Wakely </td>
		<td > 2018-04-04 </td>
		<td > 2018-04 </td>
		<td > N4711 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4735 </td>
		<td > Networking TS - Editor's Report </td>
		<td > Jonathan Wakely </td>
		<td > 2018-04-04 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4736 </td>
		<td > Working Draft, C ++ Extensions for Coroutines </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-31 </td>
		<td > 2018-04 </td>
		<td > N4723 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4737 </td>
		<td > Editor's report for the Coroutines TS </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-27 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4738 </td>
		<td > C++ Standardization Committee Meeting, HSR Rapperswil &#8211; Latest Info </td>
		<td > Peter Sommerlad </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4739 </td>
		<td > Jacksonville 2018 LEWG Summary </td>
		<td > Titus Winters </td>
		<td > 2018-03-27 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4740 </td>
		<td > N4740 Editors' Report - Programming Languages - C++ </td>
		<td > Richard Smith </td>
		<td > 2018-04-02  </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4741 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > N4727 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4742 </td>
		<td > Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > N4725 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4743 </td>
		<td > Parallelism TS Editor&#8217;s Report, post-Jacksonville mailing </td>
		<td > Jared Hoberock </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4744 </td>
		<td > Programming Languages - Technical Specification for C++ Extensions for Parallelism Version 2 </td>
		<td > Jared Hoberock </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0052R7 </td>
		<td > Generic Scope Guard and RAII Wrapper for the Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2018-03-26 </td>
		<td > 2018-04 </td>
		<td > P0052R6 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0122R7 </td>
		<td > span: bounds-safe views for sequences of objects </td>
		<td > Neil MacIntosh, Stephan T. Lavavej </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0122R6 </td>
		<td > Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0194R6 </td>
		<td > Static reflection </td>
		<td > Matus Chochlik, Axel Naumann, David Sankel </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0194R5 </td>
		<td > Core, Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0214R9 </td>
		<td > Data-Parallel Vector Types &amp; Operations </td>
		<td > Matthias Kretz </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0214R8 </td>
		<td > Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0318R1 </td>
		<td > unwrap_ref_decay and unwrap_reference </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-03-30 </td>
		<td > 2018-04 </td>
		<td > P0318R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0323R6 </td>
		<td > std::expected </td>
		<td > Vicente Botet, JF Bastien </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0323R5 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0339R4 </td>
		<td > polymorphic_allocator&lt;&gt; as a vocabulary type </td>
		<td > Pablo Halpern, Dietmar K&#252;hl </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0339R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0355R7 </td>
		<td > Extending &lt;chrono&gt; to Calendars and Time Zones </td>
		<td > Howard E. Hinnant, Tomasz Kami&#324;ski </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0355R6 </td>
		<td > Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0388R2 </td>
		<td > Permit conversions to arrays of unknown bound </td>
		<td > Robert Haberlach </td>
		<td > 2018-03-09 </td>
		<td > 2018-04 </td>
		<td > P0388R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0443R6 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, Carter Edwards, Gordon Brown </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0443R5 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0466R2 </td>
		<td > Layout-compatibility and Pointer-interconvertibility Traits </td>
		<td > Lisa Lippincott </td>
		<td > 2018-03-29 </td>
		<td > 2018-04 </td>
		<td > P0466R1 </td>
		<td > Evolution, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0479R5 </td>
		<td > Proposed wording for likely and unlikely attributes </td>
		<td > Clay Trychta </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0479R4 </td>
		<td > SG14, Core </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0482R2 </td>
		<td > char8_t: A type for UTF-8 characters and strings </td>
		<td > Tom Honermann </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td > P0482R1 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0528R2 </td>
		<td > The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange </td>
		<td > JF Bastien, Michael Spencer </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0528R1 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0542R4 </td>
		<td > Support for contract based programming in C++ </td>
		<td > J. Daniel Garcia </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0542R3 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0551R3 </td>
		<td > Thou Shalt Not Specialize std Function Templates! </td>
		<td > Walter E. Brown </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0551R2 </td>
		<td > Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0561R4 </td>
		<td > An RAII Interface for Deferred Reclamation </td>
		<td > Geoff Romer, Andrew Hunter </td>
		<td > 2018-03-21 </td>
		<td > 2018-04 </td>
		<td > P0561R3 </td>
		<td > SG1, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0591R3 </td>
		<td > Utility functions to implement uses-allocator construction </td>
		<td > Pablo Halpern </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0591R2 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0602R2 </td>
		<td > variant and optional should propagate copy/move triviality </td>
		<td > Zhihao Yuan </td>
		<td > 2018-03-12 </td>
		<td > 2018-04 </td>
		<td > P0602R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0634R3 </td>
		<td > Down with typename! </td>
		<td > Nina Ranns, Daveed Vandevoorde </td>
		<td > 2018-03-14 </td>
		<td > 2018-04 </td>
		<td > P0634R2 </td>
		<td > Core </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0664R2 </td>
		<td > C++ Coroutine TS Issues </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-08 </td>
		<td > 2018-04 </td>
		<td > P0664R1 </td>
		<td > Evolution, Library Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0722R3 </td>
		<td > Efficient sized delete for variable sized classes </td>
		<td > Richard Smith, Andrew Hunter </td>
		<td > 2018-03-17 </td>
		<td > 2018-04 </td>
		<td > P0722R2 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0732R1 </td>
		<td > Class Types in Non-Type Template Parameters </td>
		<td > Jeff Snyder, Louis Dionne </td>
		<td > 2018-03-30 </td>
		<td > 2018-04 </td>
		<td > P0732R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0753R2 </td>
		<td > Manipulators for C++ Synchronized Buffered Ostream </td>
		<td > Peter Sommerlad, Pablo Halpern </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0753R1 </td>
		<td > Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0754R2 </td>
		<td > &lt;version&gt; </td>
		<td > Alan Talbot </td>
		<td > 2018-03-13 </td>
		<td > 2018-04 </td>
		<td > P0754R1 </td>
		<td > Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0780R2 </td>
		<td > Allow pack expansion in lambda init-capture </td>
		<td > Barry Revzin </td>
		<td > 2018-03-14  </td>
		<td > 2018-04 </td>
		<td > P0780R1 </td>
		<td > Evolution </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0782R1 </td>
		<td > Constraining Concepts Overload Sets </td>
		<td > ADAM David Alan Martin, Erich Keane </td>
		<td > 2018-03-31 </td>
		<td > 2018-04 </td>
		<td > P0782R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0806R1 </td>
		<td > Deprecate implicit capture of this via [=] </td>
		<td > Thomas K&#246;ppe </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0806R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0809R0 </td>
		<td > Comparing Unordered Containers </td>
		<td > Titus Winters </td>
		<td > 2017-10-12 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0811R2 </td>
		<td > Well-behaved interpolation for numbers and pointers </td>
		<td > S. Davis Herring </td>
		<td > 2018-03-29 </td>
		<td > 2018-04 </td>
		<td > P0811R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0820R3 </td>
		<td > Feedback on P0214 </td>
		<td > Tim Shen </td>
		<td > 2018-03-29 </td>
		<td > 2018-04 </td>
		<td > P0820R2 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0840R2 </td>
		<td > Language support for empty objects </td>
		<td > Richard Smith </td>
		<td > 2018-03-12 </td>
		<td > 2018-04 </td>
		<td > P0840R1 </td>
		<td > Core </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0887R1 </td>
		<td > The identity metafunction </td>
		<td > Timur Doumler </td>
		<td > 2018-03-18 </td>
		<td > 2018-04 </td>
		<td > P0887R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0898R1 </td>
		<td > Standard Library Concepts </td>
		<td > Casey Carter </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0898R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0903R1 </td>
		<td > Define basic_string_view(nullptr) </td>
		<td > Ashley Hedberg </td>
		<td > 2018-02-16 </td>
		<td > 2018-04 </td>
		<td > P0903R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0905R1 </td>
		<td > Symmetry for spaceship </td>
		<td > Tomasz Kami&#324;ski, Herb Sutter, Richard Smith </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0905R0 </td>
		<td > Evolution, Library Evolution </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0906R1 </td>
		<td > Improvement suggestions for the Modules TS </td>
		<td > Jens Maurer </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td > P0906R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0907R1 </td>
		<td > Signed Integers are Two&#8217;s Complement </td>
		<td > JF Bastien </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td > P0907R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0911R1 </td>
		<td > Rebase the Coroutines TS onto the C++17 Standard </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-15 </td>
		<td > 2018-04 </td>
		<td > P0911R0 </td>
		<td > Core, Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0913R1 </td>
		<td > Add symmetric coroutine control transfer </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-15  </td>
		<td > 2018-04 </td>
		<td > P0913R0 </td>
		<td > Evolution </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0914R1 </td>
		<td > Add parameter preview to coroutine promise constructor </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-15  </td>
		<td > 2018-04 </td>
		<td > P0914R0 </td>
		<td > Evolution </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0918R1 </td>
		<td > More simd&lt;&gt; Operations </td>
		<td > Tim Shen </td>
		<td > 2018-03-29 </td>
		<td > 2018-04 </td>
		<td > P0918R0 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0919R1 </td>
		<td > Heterogeneous lookup for unordered containers </td>
		<td > Mateusz Pusz </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td > P0919R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0929R1 </td>
		<td > Checking for abstract class types </td>
		<td > Jens Maurer </td>
		<td > 2018-03-24 </td>
		<td > 2018-04 </td>
		<td > P0929R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0943R1 </td>
		<td > Support C atomics in C++ </td>
		<td > Hans-J. Boehm </td>
		<td > 2018-03-30 </td>
		<td > 2018-04 </td>
		<td > P0943R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0947R1 </td>
		<td > Another take on Modules </td>
		<td > Richard Smith </td>
		<td > 2018-03-06 </td>
		<td > 2018-04 </td>
		<td > P0947R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0961R1 </td>
		<td > Relaxing the structured bindings customization point finding rules </td>
		<td > Ville Voutilainen </td>
		<td > 2018-03-14 </td>
		<td > 2018-04 </td>
		<td > P0961R0 </td>
		<td > Evolution </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0962R1 </td>
		<td > Relaxing the range-for loop customization point finding rules </td>
		<td > Ville Voutilainen </td>
		<td > 2018-03-14 </td>
		<td > 2018-04 </td>
		<td > P0962R0 </td>
		<td > Evolution </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0966R1 </td>
		<td > string::reserve Should Not Shrink </td>
		<td > Mark Zeren, Andrew Luo </td>
		<td > 2018-02-08 </td>
		<td > 2018-04 </td>
		<td > P0966R0 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0968R0 </td>
		<td > Core Language Working Group "tentatively ready" Issues for the March, 2018 (Jacksonville) meeting </td>
		<td > William M. Miller  </td>
		<td > 2018-03-12 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0969R0 </td>
		<td > Allow structured bindings to accessible members </td>
		<td > Timur Doumler </td>
		<td > 2018-03-14 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0970R0 </td>
		<td > Better, Safer Range Access Customization Points </td>
		<td > Eric Niebler </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0973R0 </td>
		<td > Coroutines TS Use Cases and Design Issues </td>
		<td > Geoff Romer, James Dennett </td>
		<td > 2018-03-23 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0974R0 </td>
		<td > A Function Returning Whether An Underlying Type Value Is a Valid Enumerator of a Given Enumeration </td>
		<td > Jonathan Ringle </td>
		<td > 2018-03-30 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0975R0 </td>
		<td > Impact of coroutines on current and upcoming library facilities </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-10 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG1, SG14, Evolution, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0976R0 </td>
		<td > The Evils of Paradigms </td>
		<td > Bjarne Stroustrup </td>
		<td > 2018-03-06 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0978R0 </td>
		<td > A Response to "P0973r0: Coroutines TS Use Cases and Design Issues" </td>
		<td > Gor Nishanov </td>
		<td > 2018-03-31 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0981R0 </td>
		<td > Halo: coroutine Heap Allocation eLision Optimization: the joint response </td>
		<td > Richard Smith, Gor Nishanov </td>
		<td > 2018-03-18 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0982R0 </td>
		<td > Weaken Release Sequences </td>
		<td > Hans-J. Boehm, Olivier Giroux, Viktor Vafeiades </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG1, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0983R0 </td>
		<td > Plan of Record for Making C++ Modules Available in C++ Standards </td>
		<td > Gabriel Dos Reis, Richard Smith </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0984R0 </td>
		<td > All (*)()-Pointers Replaced by Ideal Lambdas </td>
		<td > Peter Sommerlad </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0985R0 </td>
		<td > LWG Chair post-meeting report </td>
		<td > Marshall Clow </td>
		<td > 2017-03-31 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0986R0 </td>
		<td > Comparison of Modules Proposals </td>
		<td > Richard Smith, David Jones </td>
		<td > 2018-03-09 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0987R0 </td>
		<td > polymorphic_allocator&lt;byte&gt; instead of type-erasure </td>
		<td > Pablo Halpern </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0989R0 </td>
		<td > Standardizing Extended Integers </td>
		<td > Tony Van Eerd </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0990R0 </td>
		<td > Rebuttal of Implementation Concerns for Bit Entanglement </td>
		<td > Tony Van Eerd </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0991R0 </td>
		<td > Comparison of Stackful Coroutine Proposals </td>
		<td > Detlef Vollmann </td>
		<td > 2018-03-12 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0992R0 </td>
		<td > Translation and evaluation </td>
		<td > Andrew Sutton </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0993R0 </td>
		<td > Value-based Reflection </td>
		<td > Andrew Sutton, Herb Sutter </td>
		<td > 2014-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0994R0 </td>
		<td > String View Conversion for Function Arguments </td>
		<td > ADAM David Alan Martin, Jason Carey </td>
		<td > 2018-03-20 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0995R0 </td>
		<td > Improving atomic_flag </td>
		<td > JF Bastien, Olivier Giroux, Andrew Hunter </td>
		<td > 2018-03-17 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0996R1 </td>
		<td > Rebase Library Fundamentals TS on C++17 </td>
		<td > Alisdair Meredith </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P0996R0 </td>
		<td > Library Evolution, Library </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P0999R0 </td>
		<td > More Natural Arithmetic in C++ </td>
		<td > James Dennett </td>
		<td > 2018-&#173;04-&#173;01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG6, SG12, Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1000R0 </td>
		<td > C++ IS schedule </td>
		<td > Herb Sutter </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1001R0 </td>
		<td > Target Vectorization Policies from Parallelism V2 TS to C++20 </td>
		<td > Alisdair Meredith </td>
		<td > 2018-03-14 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1001R1 </td>
		<td > Target Vectorization Policies from Parallelism V2 TS to C++20 </td>
		<td > Alisdair Meredith </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td > P1001R0 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1002R0 </td>
		<td > Try-catch blocks in constexpr functions </td>
		<td > Louis Dionne </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1003R0 </td>
		<td > C++ Standard Library Issues Resolved Directly In Jacksonville </td>
		<td > Marshall Clow </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > Adopted 2018-03 </td>
	</tr>
	<tr >
		<td > P1004R0 </td>
		<td > Making std::vector constexpr </td>
		<td > Louis Dionne </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1005R0 </td>
		<td > namespace std { namespace fs = filesystem; } </td>
		<td > Bryce Adelstein Lelbach, S. Davis Herring </td>
		<td > 2018-03-16 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > SG3, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1006R0 </td>
		<td > Constexpr in std::pointer_traits </td>
		<td > Louis Dionne </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1011R0 </td>
		<td > Constant Pointer View - std::as_const Strikes Back! </td>
		<td > ADAM David Alan Martin </td>
		<td > 2018-03-20 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1013R0 </td>
		<td > Explicit concept expressions </td>
		<td > Thomas K&#246;ppe, Hubert S.K. Tong </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1014R0 </td>
		<td > A Unit Type for C++ </td>
		<td > Andrew Sutton, Nevin Liber </td>
		<td > 2018-04-01 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1015R0 </td>
		<td > WG21 2018-03 Jacksonville Record of Discussion </td>
		<td > Patrice Roy </td>
		<td > 2018-04-02 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1018R0 </td>
		<td > Evolution status after Jacksonville 2018 </td>
		<td > Ville Voutilainen </td>
		<td > 2018-03-18 </td>
		<td > 2018-04 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

<!-- end post-Jax -->

        <tr>
            <th colspan="8">2018-05 pre-Rapperswil</th>
        </tr>
<!-- begin pre-Rap -->

	<tr >
		<td > N4745 </td>
		<td > PL22.16/WG21 draft agenda: 4-9 June 2018, Rapperswil, Switzerland </td>
		<td > John Spicer </td>
		<td > 2018-04-30 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4746 </td>
		<td > Working Draft, C++ Extensions for Reflection </td>
		<td > David Sankel </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4747 </td>
		<td > Reflection TS - Editor&#8217;s Report </td>
		<td > David Sankel </td>
		<td > 2017-05-05 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4748 </td>
		<td > WG21 telecon meeting: Pre-Rapperswil </td>
		<td > Herb Sutter </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4749 </td>
		<td > Editors' Report - Programming Languages - C++ </td>
		<td > Richard Smith, Dawn Perchik, Thomas K&#246;ppe </td>
		<td > 2018-04-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > N4750 </td>
		<td > Working Draft, Standard for Programming Language C++ </td>
		<td > Richard Smith </td>
		<td > 2018-05-07  </td>
		<td > 2018-05 </td>
		<td > N4741 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>

	<tr >
		<td > P0009R6 </td>
		<td > mdspan: A Non-Owning Multidimensional Array Reference </td>
		<td > H. Carter Edwards, Bryce Adelstein Lelbach, Daniel Sunderland, David Hollman, Christian Trott, Mauro Bianco, Ben Sander, Athanasios Iliopoulos, John Michopoulos, Daniel Sunderland </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0009R5 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0019R7 </td>
		<td > Atomic Ref </td>
		<td > H. Carter Edwards, Hans Boehm, Olivier Giroux, Daniel Sunderland, Mark Hoemmen, David Hollman, Bryce Adelstein Lelbach, Jens Maurer </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0019R6 </td>
		<td > SG1, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0037R5 </td>
		<td > Fixed-Point Real Numbers </td>
		<td > John McFarlane </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0037R4 </td>
		<td > SG6, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0052R8 </td>
		<td > Generic Scope Guard and RAII Wrapper for the Standard Library </td>
		<td > Peter Sommerlad, Andrew L. Sandoval </td>
		<td > 2018-04-24 </td>
		<td > 2018-05 </td>
		<td > P0052R7 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0124R5 </td>
		<td > Linux-Kernel Memory Model </td>
		<td > Paul E. McKenney, Ulrich Weigand, Andrea Parri, Boqun Feng </td>
		<td > 2018-04-06 </td>
		<td > 2018-05 </td>
		<td > P0124R4 </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0132R1 </td>
		<td > Non-throwing container operations </td>
		<td > Ville Voutilainen </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0132R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0196R5 </td>
		<td > Generic none() factories for Nullable types </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-05-03 </td>
		<td > 2018-05 </td>
		<td > P0196R4 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0319R2 </td>
		<td > Adding Emplace functions for promise&lt;T&gt;/future&lt;T&gt; (revision 2) </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-05-03 </td>
		<td > 2018-05 </td>
		<td > P0319R1 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0340R1 </td>
		<td > Making std::underlying_type SFINAE-friendly </td>
		<td > R. "Tim" Song </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0340R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0408R4 </td>
		<td > Efficient Access to basic_stringbuf&#8217;s Buffer </td>
		<td > Peter Sommerlad </td>
		<td > 2018-05-01 </td>
		<td > 2018-05 </td>
		<td > P0408R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0429R4 </td>
		<td > A Standard flatmap </td>
		<td > Zach Laine </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0429R3 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0443R7 </td>
		<td > A Unified Executors Proposal for C++ </td>
		<td > Jared Hoberock, Michael Garland, Chris Kohlhoff, Chris Mysen, H. Carter Edwards, Gordon Brown </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0443R6 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0482R3 </td>
		<td > char8_t: A type for UTF-8 characters and strings (Revision 3) </td>
		<td > Tom Honermann </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0482R2 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0514R4 </td>
		<td > Efficient concurrent waiting for C++20 </td>
		<td > Olivier Giroux </td>
		<td > 2018-05-03 </td>
		<td > 2018-05 </td>
		<td > P0514R3 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0527R1 </td>
		<td > Implicitly move from rvalue references in return statements </td>
		<td > David Stone </td>
		<td > 2017-11-08 </td>
		<td > 2018-05 </td>
		<td > P0527R0 </td>
		<td > Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0539R4 </td>
		<td > A Proposal to add wide_int Template Class </td>
		<td > Igor Klevanets, Antony Polukhin </td>
		<td > 2018-05-03 </td>
		<td > 2018-05 </td>
		<td > P0539R3 </td>
		<td > SG6, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0540R1 </td>
		<td > A Proposal to Add split/join of string/string_view to the Standard Library </td>
		<td > Laurent NAVARRO </td>
		<td > 2018-04-29 </td>
		<td > 2018-05 </td>
		<td > P0540R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0566R5 </td>
		<td > Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read&#173;Copy&#173;Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt, Frank Birbacher </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0566R4 </td>
		<td > SG1, SG14, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0572R2 </td>
		<td > Static reflection of bit fields </td>
		<td > Alex Christensen </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0572R1 </td>
		<td > SG7 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0595R1 </td>
		<td > std::is_constant_evaluated() </td>
		<td > Richard Smith, Andrew Sutton, Daveed Vandevoorde </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td > P0595R0 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0619R3 </td>
		<td > Reviewing Deprecated Facilities of C++17 for C++20 </td>
		<td > Alisdair Meredith, Stephan T. Lavavej, Tomasz Kami&#324;ski </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0619R2 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0645R2 </td>
		<td > Text Formatting </td>
		<td > Victor Zverovich </td>
		<td > 2018-04-28 </td>
		<td > 2018-05 </td>
		<td > P0645R1 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0660R2 </td>
		<td > A Cooperatively Interruptible Joining Thread, Rev 2 </td>
		<td > Nicolai Josuttis, Herb Sutter, Anthony Williams </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0660R1 </td>
		<td > SG1, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0664R3 </td>
		<td > C++ Coroutine TS Issues </td>
		<td > Gor Nishanov </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0664R2 </td>
		<td > Evolution, Core, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0665R1 </td>
		<td > Allowing Class Template Specializations in Associated Namespaces (revision 1) </td>
		<td > Tristan Brindle </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0665R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0666R2 </td>
		<td > Revised Latches and Barriers for C++20 </td>
		<td > Olivier Giroux </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0666R1 </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0668R3 </td>
		<td > Revising the C++ memory model </td>
		<td > Hans-J. Boehm, Olivier Giroux, Viktor Vafeiades </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0668R2 </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0670R3 </td>
		<td > Function reflection </td>
		<td > Mat&#250;&#353; Chochl&#237;k, Axel Naumann, David Sankel </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0670R2 </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0671R2 </td>
		<td > Self-explanatory Function Arguments </td>
		<td > Axel Naumann </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0671R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0709R0 </td>
		<td > Zero-overhead deterministic exceptions: Throwing values </td>
		<td > Herb Sutter </td>
		<td > 2018-05-02 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0736R1 </td>
		<td > Nameless parameters and unutterable specializations </td>
		<td > Hubert S.K. Tong </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0736R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0745R1 </td>
		<td > Concepts in-place syntax </td>
		<td > Herb Sutter </td>
		<td > 2018-04-29 </td>
		<td > 2018-05 </td>
		<td > P0745R0 </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0769R1 </td>
		<td > Add shift to &lt;algorithm&gt; </td>
		<td > Dan Raviv </td>
		<td > 2018-02-05 </td>
		<td > 2018-05 </td>
		<td > P0769R0 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0772R1 </td>
		<td > Execution Agent Local Storage </td>
		<td > Nat Goodspeed, Michael Wong, Paul McKenney, Jared Hoberock, H. Carter Edwards, Tony Tye, Alex Voicu, Gordon Brown, Mark Hoemmen </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0772R0 </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0784R2 </td>
		<td > Standard containers and constexpr </td>
		<td > Louis Dionne, Richard Smith, Nina Ranns, Daveed Vandevoorde </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0784R1 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0784R3 </td>
		<td > More constexpr containers </td>
		<td > Louis Dionne, Richard Smith, Nina Ranns, Daveed Vandevoorde </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td > P0784R2 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0788R2 </td>
		<td > Standard Library Specification in a Concepts and Contracts World </td>
		<td > Walter E. Brown </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0788R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0789R3 </td>
		<td > Range Adaptors and Utilities </td>
		<td > Eric Niebler </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0789R2 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0792R2 </td>
		<td > function_ref: a non-owning reference to a Callable </td>
		<td > Vittorio Romeo </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0792R1 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0796R2 </td>
		<td > Supporting Heterogeneous &amp; Distributed Computing Through Affinity </td>
		<td > Gordon Brown, Ruyman Reyes, Michael Wong, H. Carter Edwards, Thomas Rodgers, Mark Hoemmen </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0796R1 </td>
		<td > SG1, SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0829R2 </td>
		<td > Freestanding Proposal </td>
		<td > Ben Craig </td>
		<td > 2017-10-14 </td>
		<td > 2018-05 </td>
		<td > P0829R1 </td>
		<td > SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0836R1 </td>
		<td > Introduce Parallelism to the Ranges TS </td>
		<td > Gordon Brown, Christopher Di Bella, Michael Haidl, Toomas Remmelg, Ruyman Reyes, Michel Steuwer, Michael Wong </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0836R0 </td>
		<td > SG1, SG9, SG14, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0844R0 </td>
		<td > Type functions and beyond </td>
		<td > J. Monnon </td>
		<td > 2018-02-26 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG7, SG8, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0860R1 </td>
		<td > Atomic Access Property for mdspan </td>
		<td > Dan Sunderland, Christian Trott, H. Carter Edwards </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0860R0 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0868R2 </td>
		<td > Selected RCU Litmus Tests </td>
		<td > Paul E. McKenney, Alan Stern, Andrew Hunter, Jade Alglave, Luc Maranget </td>
		<td > 2018-02-09 </td>
		<td > 2018-05 </td>
		<td > P0868R1 </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0876R2 </td>
		<td > fiber_context - fibers without scheduler </td>
		<td > Oliver Kowalke, Nat Goodspeed </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0876R1 </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0880R1 </td>
		<td > Numbers interaction </td>
		<td > Igor Klevanets, Antony Polukhin </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td > P0880R0 </td>
		<td > SG6, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0881R1 </td>
		<td > A Proposal to add stack trace library </td>
		<td > Alexey Gorgurov, Antony Polukhin </td>
		<td > 2018-04-19 </td>
		<td > 2018-05 </td>
		<td > P0881R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0892R1 </td>
		<td > explicit(bool) </td>
		<td > Barry Revzin, Stephan T. Lavavej </td>
		<td > 2018-03-30 </td>
		<td > 2018-05 </td>
		<td > P0892R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0893R1 </td>
		<td > Chaining Comparisons </td>
		<td > Barry Revzin, Herb Sutter </td>
		<td > 2018-04-28 </td>
		<td > 2018-05 </td>
		<td > P0893R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0894R0 </td>
		<td > `realloc()` for C++ </td>
		<td > Victor Dyachenko </td>
		<td > 2018-01-10 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0896R1 </td>
		<td > Merging the Ranges TS </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0896R0 </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0898R2 </td>
		<td > Standard Library Concepts </td>
		<td > Casey Carter, Eric Niebler </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0898R1 </td>
		<td > Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0903R2 </td>
		<td > Define basic_string_view(nullptr) </td>
		<td > Ashley Hedberg, Titus Winters, Jorg Brown </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0903R1 </td>
		<td > Evolution, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0907R2 </td>
		<td > Signed Integers are Two&#8217;s Complement </td>
		<td > JF Bastien </td>
		<td > 2018-04-01 </td>
		<td > 2018-05 </td>
		<td > P0907R1 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0912R1 </td>
		<td > Merge Coroutines TS into C++20 working draft </td>
		<td > Gor Nishanov </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td > P0912R0 </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0917R1 </td>
		<td > Making operator?: overloadable </td>
		<td > Matthias Kretz </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0917R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0921R2 </td>
		<td > Standard Library Compatibility </td>
		<td > Titus Winters, Ashley Hedberg </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0921R1 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0923R1 </td>
		<td > Modules:Dependent ADL </td>
		<td > Nathan Sidwell </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td > P0923R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0933R0 </td>
		<td > Runtime type introspection with std::exception ptr </td>
		<td > Aaryaman Sagar </td>
		<td > 2018-02-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0940R1 </td>
		<td > Concurrency TS is growing: Concurrent Utilities and Data Structures </td>
		<td > Michael Wong, Olivier Giroux </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0940R0 </td>
		<td > SG1, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0941R1 </td>
		<td > Integrating feature-test macros into the C++ WD </td>
		<td > Ville Voutilainen </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td > P0941R0 </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0957R1 </td>
		<td > PFA: A Generic, Extendable and Efficient Solution for Polymorphic Programming </td>
		<td > Mingxin Wang </td>
		<td > 2018-04-18 </td>
		<td > 2018-05 </td>
		<td > P0957R0 </td>
		<td > SG7, SG9, Evolution, Core, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0958R1 </td>
		<td > Networking TS changes to support proposed Executors TS </td>
		<td > Christopher Kohlhoff </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0958R0 </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0960R1 </td>
		<td > Allow initializing aggregates from a parenthesized list of values </td>
		<td > Ville Voutilainen </td>
		<td > 2018-05-02 </td>
		<td > 2018-05 </td>
		<td > P0960R0 </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0964R1 </td>
		<td > Finding the right set of traits for simd&lt;T&gt; </td>
		<td > Matthias Kretz </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td > P0964R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0970R1 </td>
		<td > Better, Safer Range Access Customization Points </td>
		<td > Eric Niebler </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td > P0970R0 </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0972R0 </td>
		<td > &lt;chrono&gt; zero(), min(), and max() should be noexcept </td>
		<td > Billy Robert O'Neal III </td>
		<td > 2018-02-28 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0977R0 </td>
		<td > Remember the Vasa! </td>
		<td > Bjarne Stroustrup </td>
		<td > 2018-03-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P0988R0 </td>
		<td > Ruminations on 2D graphics in the C++ International Standard </td>
		<td > Guy Davidson </td>
		<td > 2018-04-30 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1007R0 </td>
		<td > std::assume_aligned </td>
		<td > Timur Doumler, Chandler Carruth </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1008R0 </td>
		<td > Prohibit aggregate types with user-declared constructors </td>
		<td > Timur Doumler, Arthur O&#8217;Dwyer, Richard Smith, Howard E. Hinnant </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1010R0 </td>
		<td > Container support for implicit lifetime types </td>
		<td > Mark Zeren, Chris Kennelly </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1016R0 </td>
		<td > A few additional type manipulation utilities </td>
		<td > Vincent Reverdy </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1017R0 </td>
		<td > Executors should be variadic </td>
		<td > Hartmut Kaiser, John Biddiscombe </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1019R0 </td>
		<td > Integrating Executors with Parallel Algorithms </td>
		<td > Jared Hoberock </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1020R0 </td>
		<td > Smart pointer creation with default initialization </td>
		<td > Glen Joseph Fernandes, Peter Dimov </td>
		<td > 2018-04-08 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1021R0 </td>
		<td > Extensions to Class Template Argument Deduction </td>
		<td > Mike Spertus </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1022R0 </td>
		<td > Material for 2018 JAX Discussions of Hazard Pointer and Read-Copy-Update (RCU) </td>
		<td > Michael Wong, Maged M. Michael, Paul McKenney, Geoffrey Romer, Andrew Hunter, Arthur O'Dwyer, David S. Hollman, JF Bastien, Hans Boehm, David Goldblatt </td>
		<td > 2018-04-20 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1, SG14, Library Evolution, Library, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1023R0 </td>
		<td > constexpr comparison operators for std::array </td>
		<td > Tristan Brindle </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1024R0 </td>
		<td > Usability Enhancements for std::span </td>
		<td > Tristan Brindle </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1025R0 </td>
		<td > Update The Reference To The Unicode Standard </td>
		<td > Steve Downey </td>
		<td > 2018-04-23 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG16, Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1026R0 </td>
		<td > A call for a Data Persistence (iostream v2) study group </td>
		<td > Niall Douglas </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1028R0 </td>
		<td > SG14 status_code and standard error object for P0709 Zero-overhead deterministic exceptions </td>
		<td > Niall Douglas </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1029R0 </td>
		<td > SG14 [[move_relocates]] </td>
		<td > Niall Douglas </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1030R0 </td>
		<td > std::filesystem::path_view </td>
		<td > Niall Douglas </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1031R0 </td>
		<td > Low level file i/o library </td>
		<td > Niall Douglas </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1032R0 </td>
		<td > Misc constexpr bits </td>
		<td > Antony Polukhin </td>
		<td > 2018-05-03 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1033R0 </td>
		<td > Rangify the uninitialised memory algorithms! </td>
		<td > Casey Carter, Christopher Di Bella </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1035R0 </td>
		<td > Input range adaptors </td>
		<td > Christopher Di Bella </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1037R0 </td>
		<td > Deep Integration of the Ranges TS </td>
		<td > Eric Niebler, Casey Carter </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1040R0 </td>
		<td > std::embed </td>
		<td > JeanHeyd Meneide </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG15, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1041R0 </td>
		<td > Make char16_t/char32_t string literals be UTF-16/32 </td>
		<td > Martinho Fernandes </td>
		<td > 2018-04-24 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1043R0 </td>
		<td > Narrow contracts in string_view versus P0903R1 </td>
		<td > Andrzej Krzemie&#324;ski, Nevin Liber </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1044R0 </td>
		<td > std::async() in an Executors World </td>
		<td > Thomas Rodgers, H. Carter Edwards, Mark Hoemmen </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1045R0 </td>
		<td > constexpr Function Parameters </td>
		<td > David Stone </td>
		<td > 2018-04-29 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1046R0 </td>
		<td > Automatically Generate More Operators </td>
		<td > David Stone </td>
		<td > 2018-04-28 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1048R0 </td>
		<td > A proposal for a type trait to detect scoped enumerations </td>
		<td > Juan Alday </td>
		<td > 2018-05-01 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1050R0 </td>
		<td > Fractional Numeric Type </td>
		<td > John McFarlane </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG6, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1051R0 </td>
		<td > std::experimental::expected LWG design issues </td>
		<td > Vicente J. Botet Escrib&#225; </td>
		<td > 2018-05-03 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1052R0 </td>
		<td > Modules, Macros, and Build Systems </td>
		<td > Boris Kolpackov </td>
		<td > 2018-05-02 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG15, Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1053R0 </td>
		<td > Future-proofing continuations for executors </td>
		<td > Lee Howes, Eric Niebler </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1054R0 </td>
		<td > A Unified Futures Proposal for C++ </td>
		<td > Lee Howes, Bryce Adelstein Lelbach, David S. Hollman, Micha&#322; Dominiak </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1055R0 </td>
		<td > A Modest Executor Proposal </td>
		<td > Kirk Shoop, Eric Niebler, Lee Howes </td>
		<td > 2018-04-26 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1056R0 </td>
		<td > Add coroutine task type </td>
		<td > Lewis Baker, Gor Nishanov </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1059R0 </td>
		<td > Adapting Asio to use std::expected </td>
		<td > Thomas Rodgers </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1061R0 </td>
		<td > Structured Bindings can introduce a Pack </td>
		<td > Barry Revzin, Jonathan Wakely </td>
		<td > 2018-05-01 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1062R0 </td>
		<td > Diet Graphics </td>
		<td > Bryce Adelstein Lelbach, Olivier Giroux, Zach Laine, Corentin Jabot, Vittorio Romeo </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1063R0 </td>
		<td > Core Coroutines </td>
		<td > Geoff Romer, James Dennett, Chandler Carruth </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1064R0 </td>
		<td > Allowing Virtual Function Calls in Constant Expressions </td>
		<td > Peter Dimov, Vassil Vassilev </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1066R0 </td>
		<td > How to catch an exception_ptr without even try-ing </td>
		<td > Mathias Stearn </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1067R0 </td>
		<td > C++ Dependency Management: Package Consumption vs Development </td>
		<td > Boris Kolpackov </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG15 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1068R0 </td>
		<td > Vector API for random number generation </td>
		<td > Ilya Burylov, Alexey Kukanov, Ruslan Arutyunyan, Andrey Nikolaev, Pablo Halpern </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1070R0 </td>
		<td > SG5: Transactional Memory (TM) Meeting Minutes 2018/04/09 </td>
		<td > Michael Wong </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG5 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1071R0 </td>
		<td > SG14: Low Latency Meeting Minutes 2018/04/11- 2018/05/02 </td>
		<td > Michael Wong </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG14 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1072R0 </td>
		<td > Default Initialization for basic_string </td>
		<td > Chris Kennelly, Mark Zeren </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG16, Library Evolution, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1073R0 </td>
		<td > constexpr! functions </td>
		<td > Richard Smith, Andrew Sutton, Daveed Vandevoorde </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1074R0 </td>
		<td > CWG defect Defined Behavior of Invalid Pointers </td>
		<td > Maged Michael, David Goldblatt, Michael Wong, Paul McKenney </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG1, Core </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1076R0 </td>
		<td > Editorial clause reorganization </td>
		<td > Jens Maurer </td>
		<td > 2018-05-05 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Core, Library </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1077R0 </td>
		<td > Allowing Virtual Destructors to be &#8220;Trivial&#8221; </td>
		<td > Peter Dimov </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1079R0 </td>
		<td > A minimal solution to the concepts syntax problems </td>
		<td > Bjarne Stroustrup </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1080R0 </td>
		<td > SG16: Unicode meeting summaries 2018/03/28 - 2018/04/25 </td>
		<td > Tom Honermann </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG16 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1081R0 </td>
		<td > On empty structs in the standard library </td>
		<td > Vincent Reverdy, Collin Gress </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1082R0 </td>
		<td > C++ Standard Library Issues to be moved in Rapperswil </td>
		<td > Marshall Clow </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > WG21 </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1083R0 </td>
		<td > Move resource_adaptor from Library TS to the C++ WP </td>
		<td > Pablo Halpern </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1084R0 </td>
		<td > Today's return-type-requirements Are Insufficient </td>
		<td > Walter E. Brown, Casey Carter </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1085R0 </td>
		<td > Should Span be Regular? </td>
		<td > Tony Van Eerd </td>
		<td > 2018-05-04 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1086R0 </td>
		<td > Natural Syntax: Keep It Simple </td>
		<td > Gabriel Dos Reis </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1087R0 </td>
		<td > Modules for Standard C++ </td>
		<td > Gabriel Dos Reis, Richard Smith </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1089R0 </td>
		<td > Sizes Should Only span Unsigned </td>
		<td > Robert Douglas, Nevin Liber, Marshall Clow </td>
		<td > 2018-05-06 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1090R0 </td>
		<td > Aggregate initialization in the presence of deleted constructors </td>
		<td > Ville Voutilainen </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1091R0 </td>
		<td > Extending structured bindings to be more like variable declarations </td>
		<td > Nicolas Lesser </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1093R0 </td>
		<td > Is undefined behaviour preserved? </td>
		<td > Andrew Bennieston, Jonathan Coe, Daven Gahir, Thomas Russell </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > SG12, Evolution, Library Evolution </td>
		<td > </td>
	</tr>
	<tr >
		<td > P1094R0 </td>
		<td > Nested Inline Namespaces </td>
		<td > Alisdair Meredith </td>
		<td > 2018-05-07 </td>
		<td > 2018-05 </td>
		<td >  </td>
		<td > Evolution </td>
		<td > </td>
	</tr>
    </table>
</body>
</html>
